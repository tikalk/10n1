{
    "title": "Explore the Tech Radar",
    "quadrants": [
        "DevOps",
        "Backend",
        "Mobile",
        "Frontend"
    ],
    "rings": [
        "Try",
        "Start",
        "Keep",
        "Stop"
    ],
    "blips": [
        {
            "name": "Small Data and TinyML",
            "quadrant": "Backend",
            "ring": "Try",
            "description": "<p>TinyML are small ML models that are deployed on lean devices (Edge, IOT etc.) which are usually organized in physical clusters. The goal is to provide autonomy and independence to lean devices that need to make smart decisions based on ML.</p><p><p>IOT and edge computing is an extremely emerging trend for the past 2 years. Along with that is the emerging need to compute more on the edge (model inference) to save IO time and enable ms responses specifically in physical factories production lines where every ms counts. That’s where TinyML - small ML model that fit onto edge devices (Raspberry Pie/ Jetson) and provide split second model predictions without the need to rely on cloud servers and even without Internet connection (crucial for physical factories).</p></p>",
            "isNew": true
        },
        {
            "name": "Kritis",
            "quadrant": "DevOps",
            "ring": "Try",
            "description": "<p><a href=\"https://github.com/grafeas/kritis\">Kritis</a> (“judge” in Greek), is an open-source solution for securing your software supply chain for Kubernetes applications.</p>\n<p>Kritis enforces deploy-time security policies using the Google Cloud Container Analysis API, and in a subsequent release, Grafeas.</p>\n<p>This tool helps you control what CVE’s you can deploy to your cluster (known CVE’s) using Kubernetes Admission control.</p>\n<p><a href=\"https://github.com/grafeas/kritis\">Kritis</a> Usually works alongside grafeas</p><p><p>This tool helps you control what CVE’s you can deploy to your cluster (known CVE’s) using Kubernetes Admission control.\nKritis enforces deploy-time security policies using the Google Cloud Container Analysis API, and in a subsequent release, Grafeas.</p></p>",
            "isNew": false
        },
        {
            "name": "Developer Portals",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>As applications, platforms, and cloud ecosystems multiply, there is a growing need for a central solution to consolidate all information. \nThe information varies from dependencies between components, status of component (build, tests, deployments etc…).\nThe trend is to have a central place to consolidate all information.\nBackstage is a good example for that.&nbsp;</p><p><p>Managing all the knowledge about our systems is becoming more and more essential. </p></p>",
            "isNew": true
        },
        {
            "name": "Python",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p><strong>Python</strong> is a powerful high-level, interpreted, open-source, object-oriented programming language, portable, extensible and embeddable with simple syntax and large standard libraries to solve common tasks.\nPython is a general-purpose language. It has a wide range of applications from Web development (like Django and Bottle), scientific and mathematical computing (Orange, SymPy, NumPy) to desktop graphical user Interfaces (Pygame, Panda3D).</p><p><p>This language is one of the tops used languages today and its benefits are well known, especially in the data engineering industry and AI. We suggest you keep using this language for its intended purposes</p></p>",
            "isNew": false
        },
        {
            "name": "Python",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p><strong>Python</strong> is a powerful high-level, interpreted, open-source, object-oriented programming language, portable, extensible and embeddable with simple syntax and large standard libraries to solve common tasks.\nPython is a general-purpose language. It has a wide range of applications from Web development (like Django and Bottle), scientific and mathematical computing (Orange, SymPy, NumPy) to desktop graphical user Interfaces (Pygame, Panda3D).</p><p><p>This language is one of the tops used languages today and its benefits are well known, especially in the data engineering industry and AI. We suggest you keep using this language for its intended purposes</p></p>",
            "isNew": false
        },
        {
            "name": "MobX",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>State management is one of the most important topics in Flutter.\nIn Flutter, there are already a few state management techniques that help us to develop our app.</p>\n<p>The most popular State Managements patterns are:</p>\n<ul>\n<li>setState</li>\n<li>BLoC - Business Logic Component</li>\n<li>StreamBuilder</li>\n</ul>\n<p>Each pattern has its benefits and cons.</p>\n<p>As Flutter app based on Widgets which are structured in the app widget tree, we always have to consider where each widget is located in the tree (The context) and whether it should be StateFul or Stateless (The building blocks of flutter). In flutter, UI = f(State) and therefore, when we managing the app state we actually managing the UI, therefore before starting developing an app, we should select the right StateManagement pattern.</p>\n<h2 id=\"thereforeweshouldstartusingstatemanagementinflutterapps\">Therefore, we should start using StateManagement in Flutter apps.</h2>\n<p>GetX is an extra-light and powerful solution for Flutter. It combines high performance state management, intelligent dependency injection, and route management in a quick and practical way.</p><p><ul>\n<li>MobX has been a very effective library for the JavaScript apps and this port to the Dart language aims to bring the same levels of productivity.</li>\n<li>Clear syntax with less boilerplate.</li>\n<li>MobX will cause reconstruction only in observers who are using the data that has changed, that’s good for app performance.</li>\n<li>Combined with code generation, MobX eliminates all of the boilerplate, this is also the negative point to the skeptics but it is the trade-off.</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "WorkManager ",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>WorkManager is an API that makes it easy to schedule deferrable, asynchronous tasks that are expected to run even if the app exits or the device restarts. The WorkManager API is a suitable and recommended replacement for all previous Android background scheduling APIs, including FirebaseJobDispatcher, GcmNetworkManager, and Job Scheduler. WorkManager incorporates the features of its predecessors in a modern, consistent API that works back to API level 14 while also being conscious of battery life.</p><p><ul>\n<li>Consistent with application lifecycle from API level 14 to 29&nbsp;</li>\n<li>Supports Android 11 and up.</li>\n<li>Power consumption aware</li>\n<li>Security and privacy aware&nbsp;</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Kong",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>Kong Inc. is a software company offering open-source platforms and cloud services to manage, monitor and scale Application Programming Interfaces and Microservices.</p><p><p>A powerful and popular tool for Application Programming Interfaces and Microservices management.</p></p>",
            "isNew": true
        },
        {
            "name": "Kotlin",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p>Kotlin is a general-purpose, open-source, statically typed “pragmatic” programming language for the JVM that combines object-oriented and functional programming features. It is focused on interoperability, safety, clarity, and tooling support.\nIt is fully interoperable with Java code and libraries and as such, it is beginning to be the language of choice for many JVM based projects.&nbsp;\nAlthough it is widely used for mobile development, its adoption for a system backend language is still to be seen.</p><p><p>Kotlin is a modern but already mature programming language. Using it in Backend systems (and more) allows you to write concise, safe, interoperable code with Java and other languages, and provides many ways to reuse code between multiple platforms for productive programming.</p></p>",
            "isNew": false
        },
        {
            "name": "GoLang",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>GO is A programming language introduced by Google in 2009. It is a compiled and strongly typed language similar to C, but bringing a much more intuitive syntax. Golang is basically a functional language, rather than a strict OOP, designed for high performance (as compiled to native machine code), without the bother to deal with thread synchronization.</p>\n<p>Our Perspective is to define distinct aspects in which GoLang may give better performance than the ‘standard’ stack of Java / Python / NodeJS, in backend development.</p><p><p>As MSA is becoming a standard for writing complex applications as a bunch of small and rather simple services, maintained by small pods of teams of 3-4 persons, well-known programming paradigms such as OOP and classic design patterns are no longer a must. The code has become much simpler and a new programming language such as GO is becoming more and more relevant: Simple, Only the required features are supported, there is ONLY one way to implement a thing, and very high performance of a native application.</p></p>",
            "isNew": false
        },
        {
            "name": "StencilJS",
            "quadrant": "Frontend",
            "ring": "Keep",
            "description": "<p><a href=\"https://github.com/ionic-team/stencil\">Stencil</a> is a Compiler for building Web Components that can be used in a JavaScript Projects(Angular, React, Vue) or in a vanilla project.\nThe produced code also includes:</p>\n<ul>\n<li>tiny virtual DOM layer</li>\n<li>Efficient one-way data binding</li>\n<li>An asynchronous rendering pipeline (similar to React Fiber)\nLazy-loading</li>\n</ul><p><p>Stencil is a popular library, backed by plenty of community tutorials and answers around the web.</p></p>\n<p><strong>Pros</strong>\nSupports SSR + Hydration (Though all web components are natively capable of SSR + Hydration).</p></p>\n<p><strong>Cons</strong>\nSince stencil is a compiler, your code is being transformed, alongside a mandatory Virtual-DOM runtime that is required to run a single component.\nStencil components cannot run without the supporting virtual DOM</p></p>",
            "isNew": false
        },
        {
            "name": "Containers Next Generation",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>Docker has revolutionized the world. However, a business can stale development, and we believe this year we’ll see less usage of Docker and more of other alternatives:</p>\n<ul>\n<li><a href=\"https://github.com/GoogleContainerTools/distroless\">Distroless Docker Images</a> (Google) - creates docker images with only the application (without the os)</li>\n<li><a href=\"https://coreos.com/rkt/\">rkt</a> (CoreOS) - a pod-based implementation targeting Kubernetes</li>\n<li><a href=\"https://github.com/uber/makisu\">Makisu</a> (Uber) - creates docker images without the need for a local demon</li>\n<li><a href=\"https://www.opencontainers.org/\">oci</a> (Linux Foundation) - looks like the next standard, images can be written is several different formats, including docker</li>\n</ul><p><p>The pioneer in container build and running software was Docker. But nowadays, we see a trend of moving toward open standards, led by the Open Container Initiative (OCI) community. \nThis leads to a variety of new smaller tools that (according to the Unix philosophy) do a single task but do it well. \nInstead of having a Docker daemon, there's now a tool called \"Buildah\" from RedHat that brings a fresh alternative to building OCI images using a simple shell script. Jib-Maven-plugin does the same from the Maven ecosystem point of view. \nSince OCI now standardizes the container world, you are no longer required to run a root-based Docker daemon. There's a tool called \"Podman\" from RedHat that increases security and lets you run OCI containers without any daemon and without requiring root permission. This of course improves the system security. \nWe suggest starting using those small tools which become Docker alternatives, while keeping the mental model of containers and images that Docker brought to us, leaving the limitations behind.</p></p>",
            "isNew": false
        },
        {
            "name": "Skaffold",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>Skaffold - CLI tools for developer helping develop application running on Kubernetes by managing the workflow of build, push, deploy of application. Do it continuously for local /remote Kubernetes  </p>\n<p>It can be used in the CI server to manage the same workflow.</p>\n<p>Skaffold has a pluggable architecture, allowing you to create your implementation, and come with support to many tools in each of the steps:\nImage build - Dockerfile, maven/Gradle (JIB)\nDeploy - kustomized, helm, Kubernetes manifest</p><p><p>Skaffold is a great tool to support local development in Kubernetes , You can use the same tool in your CI process too.</p></p>",
            "isNew": false
        },
        {
            "name": "jib",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>Jib builds optimized Docker and OCI images for your Java applications without a Docker daemon - and without deep mastery of Docker best-practices. It is available as plugins for Maven and Gradle and as a Java library</p><p><p>When developing a java application that should run on docker, Jib gives us an optimized image build, with no dependency on docker daemon, and with Gradle/Maven integration the docker build/push are part of the build system.</p></p>",
            "isNew": false
        },
        {
            "name": "Terragrunt",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>Terragrunt is a thin wrapper for terraform which provides further capabilities for organisations using terraform to provision resources.</p>\n<p>Terragrunt allows us to further abstract terraform components to extend reusability of terraform configurations across environments and organisations</p><p><p>As Terragrunt provides functionality that Terraform currently lacks (might be adopted into Terraform in the future) we should suggest this tool as an extension for Terraform which allows for better coding practices and convention constraining.</p></p>",
            "isNew": false
        },
        {
            "name": "Crunchydata Database Operator",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>PGO, the Postgres Operator from Crunchy Data, gives you a declarative Postgres solution that automatically manages your PostgreSQL clusters.</p><p><p>Designed for your GitOps workflows, it is easy to get started with Postgres on Kubernetes with PGO. Within a few moments, you can have a production-grade Postgres cluster complete with high availability, disaster recovery, and monitoring, all over secure TLS communications. Even better, PGO lets you easily customize your Postgres cluster to tailor it to your workload!</p></p>",
            "isNew": true
        },
        {
            "name": "DevTools",
            "quadrant": "Mobile",
            "ring": "Start",
            "description": "<p>DevTools is a suite of performance and debugging tools for Dart and Flutter.</p>\n<p>- Lightweight and easy to install\n- Easier to track UI junk issues\n- Network profiling for all http requests\n- Editable UI tree with hot reload</p><p><ul>\n<li>It’s currently in beta release, but is under active development.</li>\n<li>Helps detect issues faster</li>\n<li>Saves logging time and debugging UI</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Medusa",
            "quadrant": "DevOps",
            "ring": "Try",
            "description": "<p>Medusa is a cli tool for importing and exporting a json or yaml file into HashiCorp Vault - https://github.com/jonasvinther/medusa</p><p><p>Need to move your Vault installation to somewhere else? Here is the tool that can help you to migrate the data</p></p>",
            "isNew": true
        },
        {
            "name": "Ingress nginx",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>The NGINX controller is built around the Kubernetes Ingress resource that uses ConfigMaps to store the NGINX configuration.</p>\n<p>NGINX is in the route path of many applications, which all vary in needs. From basic ones like routing (a.k.a proxying) and authentication to advanced services like load balancing SSL termination and integrations with other projects like cert-manager (Kube-lego) and many more.</p><p><p>NGINX started off as the faster Apache alternative and it seems to be the most popular ingress used out there among our clientele, and gaining popularity due to its seamless integration with Kubernetes.</p></p>",
            "isNew": false
        },
        {
            "name": "CameraX ",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p><strong>CameraX</strong> is a Jetpack support library, built to help you make camera app development easier. It provides a consistent and easy-to-use API surface that works across most Android devices, with backward-compatibility to Android 5.0 (API level 21)</p>\n<p>While it leverages the capabilities of camera2, it uses a simpler, uses a case-based approach that is lifecycle-aware. It also resolves device compatibility issues for you so that you don’t have to include device-specific code in your codebase. These features reduce the amount of code you need to write when adding camera capabilities to your app</p>\n<p>Lastly, CameraX enables developers to leverage the same camera experiences and features that preinstalled camera apps provide, with as little as two lines of code. CameraX Extensions are optional add-ons that enable you to add effects like Portrait, HDR, Night, and Beauty within your application on supported devices.</p>\n<p>The CameraX library is in the alpha stage, as its API surfaces aren’t yet finalized. That’s why we think is the time to try and play with it and get compatible with the future releases</p><p><ul>\n<li>Easy to work with camera</li>\n<li>Consistency across devices</li>\n<li>Vendor extensions</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "MSW",
            "quadrant": "Frontend",
            "ring": "Try",
            "description": "<p><p>Mock service worker is relatively new and not yet mature but it is recommended for many integartion test scenarios for its way of using service-worker and mock http response. </p>\n<p>We suggest trying it, and we are pretty sure that it will be mature enough soon.</p></p>",
            "isNew": true
        },
        {
            "name": "Android Wear/ Wear OS ",
            "quadrant": "Mobile",
            "ring": "Start",
            "description": "<p>Google Wear OS introduced on March 2014 previously known as <strong>Android Wear</strong>, is Google’s Android version for smartwatches and other wearables.</p>\n<p>With Wear OS and embedded Google Assistant, James Bond world has never been so realistic.\nCheck the weather or search for a restaurant by speaking to your watch.\nGet update with your next meetings and directions, stay connections and even pay using your watch.  The future is here! and hey, Wear OS can easily connect with both Android or IPhone.</p>\n<p>Wear OS brings new vision to the people that love to be on the edge of what the mobile technology has to offer.\nIf you working out, listening to your music or on your business trip, Google Google Wear OS is the little thing that will take your activity to the next level.\nAnd it works both with Android and IPhone.</p>\n<p>Check out the <a href=\"https://wearos.google.com/\">Google Wear Homepage</a></p><p><p>Wearable apps run directly on a watch, giving you access to hardware such as sensors and the GPU. Wearable apps are similar to other apps that use the Android SDK, but differ in design and functionality.</p></p>",
            "isNew": false
        },
        {
            "name": "Kubeaudit",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>kubeaudit is a command line tool and a Go package to audit Kubernetes clusters for various different security concerns</p><p><p>Kubeaudit, similar to scanning tools like Popeye. KubeAudit is focused on security.\nkubeaudit&nbsp;is a command-line tool used to audit Kubernetes clusters for various different security concerns, such as:\n- run as non-root\n- use a read-only root filesystem\n- drop scary capabilities, don't add new ones\n- don't run privileged</p>\n<p>Kubeaudit also comes with an Autofix feature that can be used to mitigate misconfiguration in real-time, a great tool that can be used by developers &amp; SRE during prototyping and in runtime.</p></p>",
            "isNew": false
        },
        {
            "name": "Gradle KTS",
            "quadrant": "Mobile",
            "ring": "Start",
            "description": "<p>Gradle is a build tool. Following a build-by-convention approach, Gradle allows for declaratively modelling your problem domain using a powerful and expressive domain-specific language (DSL) implemented in Groovy instead of XML. Because Gradle is a JVM native, it allows you to write custom logic in the language you're most comfortable with, be it Java or Groovy. it too provides a powerful dependency management.</p>\n<p>Although still many more developers use Maven (~60%) Gradle is a powerful contender/ally which needs to be considered when making the decision on which build tool to use.</p>\n<p>The Android Studio build system is based on Gradle, and the Android Gradle plugin adds several features that are specific to building Android apps.&nbsp;</p>\n<p>Gradle is an open-source build automation tool that is designed to be flexible enough to build almost any type of software.</p><p><ul>\n<li>Gradle’s Kotlin DSL provides an alternative syntax with enhanced editing experience in supported IDEs, with superior content assist, refactoring, documentation, and more</li>\n<li>Will most likely become the new standard in Android Development</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "OpenAPI",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p><strong>OpenAPI</strong>&nbsp;(formerly Swagger Specification), allows you to describe your API using YAML or JSON.</p>\n<p>Swagger&nbsp;is a set of open-source tools built around the OpenAPI, it enables:</p>\n<ul>\n<li>automatic creation of stubs from the Specification</li>\n<li>automatically creating/updating Specification from code</li>\n<li>a GUI for testing api calls</li>\n<li>connect API-related tools to your API</li>\n</ul><p><p>The OpenAPI defines a standard, language-agnostic interface to RESTful APIs.</p>\n<p>it serves both as the documentation and a means to run api calls</p>\n<p>The most common implementation, Swagger and the 3rd version of OpenAPI are wildly used, and has become a standard in writing Rest APIs </p></p>",
            "isNew": false
        },
        {
            "name": "clair",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p><a href=\"https://github.com/coreos/clair\">Clair</a> (French term - clear, bright, transparent)\nCoreOS project.\nStatic analysis of vulnerabilities in application containers</p>\n<p>This tool enables to reveal vulnerabilities in container images.\nClair usage is easy to integrate into CI Flow and is open source.\nVulnerabilities metadata are continuously stored in a database and exposed by Clair API. These vulnerabilities are ingested by Clair from a set of sources. \nContainer images are indexed during the scan ; A list of revealed vulnerabilities-features in the image are stored in a local database. Each new Clair API request perform quicker because of it.No need to rescan already known images.\nWhen updates to vulnerability metadata occur, a notification can be sent to alert systems that a change has occurred.\nIntegration of such tool in CI Flows is very needed and Clair is a great choice to the open source community.</p><p><p>This tool is mainly used to reveal vulnerabilities in containers.\nIn regular intervals, Clair ingests vulnerability metadata from a configured set of sources and stores it in the database.</p>\n<p>Clair usage is easy to integrate into CI Flow and is open source.</p></p>",
            "isNew": false
        },
        {
            "name": "Navigation Graph ",
            "quadrant": "Mobile",
            "ring": "Start",
            "description": "<p>Navigation refers to the interactions that allow users to navigate across, into, and back out from the different pieces of content within your app. Android Jetpack's Navigation component helps you implement navigation, from simple button clicks to more complex patterns, such as app bars and the navigation drawer. The Navigation component also ensures a consistent and predictable user experience by adhering to an established set of principles.</p><p><ul>\n<li>Handling fragment transactions.</li>\n<li>Handling Up and Back actions correctly by default.</li>\n<li>Providing standardized resources for animations and transitions.</li>\n<li>Implementing and handling deep linking.</li>\n<li>Including Navigation UI patterns, such as navigation drawers and bottom navigation, with minimal additional work.\nSafe Args - a Gradle plugin that provides type safety when navigating and passing data between destinations.\n* ViewModel support - you can scope a ViewModel to a navigation graph to share UI-related data between the graph's destinations.</li>\n<li>you can use Android Studio's Navigation Editor to view and edit your navigation graphs.</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Apache Beam",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p><strong>Apache Beam</strong> is an open-source, unified model for defining both batch and streaming data-parallel processing pipelines. Beam supplies an SDK in different languages (java, python, scala) to express the flow and processing of the data). The SDK then applies the runner according to the chosen platform (spark, Flink, gear…).\nBeam aims to lead the industry on the proper way to deal with batch and streaming in the same pipeline. In addition, Beam addresses issues like process time vs event time and handling late data.</p><p><p>Apache beam is now a leading force for the whole area of streaming. With its unified SDK, it is forcing competitor frameworks to reevaluate what they have to offer. In addition, google dataflow hosted beam is a great SAAS service</p></p>",
            "isNew": false
        },
        {
            "name": "Cloud Native Solutions",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p>**Cloud Native Solution **With the broad adoption of SOA and Micro Service Architectures and many IaaS, PaaS offerings one of the “lessons learned” is that you need to be able to harness your infrastructure and start treating it in a standardized way.</p>\n<p>So What is Cloud Native? The Cloud Native Computing Foundation (CNCF) describes it as “distributed systems capable of scaling to tens of thousands of self healing multi-tenant nodes”. That’s a “how” (distributed systems) and a “why” (high scalability and automated resilience).</p>\n<p>All the above in a complex/polyglot world will only be possible with standards and tooling to enable all these moving parts to suit small to large scale microservice based applications - This is what the Cloud Native Movement and the CNCF will promote in the years to come.</p>\n<p>The following principles drive Cloud Native solutions:</p>\n<ul>\n<li>Treat your own / cloud /  hybrid infrastructure as-a-service: run on servers that can be flexibly provisioned on demand.</li>\n<li>Microservices architecture: individual components are small, loosely coupled.</li>\n<li>Automated deployments and continuously integrated and test -&gt; replace manual tasks with scripts or code.</li>\n<li>Containerize: package processes with their dependencies making them easy to test, move and deploy.</li>\n<li>Orchestrate: use standard / commonly used / battle tested orchestration tools.</li>\n</ul>\n<p><strong>Cloud Service Providers</strong>\nAs of today, the cloud service providers play a major role in all startup companies and even in big companies.\nThis gets the programmers to the point where knowing Linux and ops utilities is not enough. Developers are expected to be experts in the different cloud providers in order to succeed with their tasks.</p>\n<p>Each cloud provider comes with new platforms, techniques, API’s and databases.</p><p><p>Cloud Native architecture is the key to many engineering and business benefits:</p>\n<ul>\n<li>It encourages developers to write small and purpose-built services rather than monoliths, which brings more flexibility and manageable code</li>\n<li>You get a better product quality because the same OCI image that was tested on development environment is deployed on production</li>\n<li>Deployment and version upgrades or rollbacks become easier and fully automatic, managed by set of battle-tested tools</li>\n<li>Horizontal scaling and high availability are much more easier to implement</li>\n<li>The code implemented in the container becomes a \"black box\" so you can easily write business logic in whatever programming language you wish</li>\n<li>From engineering point of view, you pay much more attention to interfaces, messages and protocols, so testing and changing implementation become much easier</li>\n<li>Some functionality (such as monitoring, request logging, security, etc.) is moved from the application to the network. You \"plug in\" a network proxy that does the non-functional logic well. It frees the application from managing these non-functional common aspects of the solution.\nAt the end of the day, you get set of components with clearly defined interfaces, written in any language, deployable everywhere - on premise or on the cloud, agile process, better product quality and much more flexibility to quickly react to the changing requirements.</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Cloud Native Solutions",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>**Cloud Native Solution **With the broad adoption of SOA and Micro Service Architectures and many IaaS, PaaS offerings one of the “lessons learned” is that you need to be able to harness your infrastructure and start treating it in a standardized way.</p>\n<p>So What is Cloud Native? The Cloud Native Computing Foundation (CNCF) describes it as “distributed systems capable of scaling to tens of thousands of self healing multi-tenant nodes”. That’s a “how” (distributed systems) and a “why” (high scalability and automated resilience).</p>\n<p>All the above in a complex/polyglot world will only be possible with standards and tooling to enable all these moving parts to suit small to large scale microservice based applications - This is what the Cloud Native Movement and the CNCF will promote in the years to come.</p>\n<p>The following principles drive Cloud Native solutions:</p>\n<ul>\n<li>Treat your own / cloud /  hybrid infrastructure as-a-service: run on servers that can be flexibly provisioned on demand.</li>\n<li>Microservices architecture: individual components are small, loosely coupled.</li>\n<li>Automated deployments and continuously integrated and test -&gt; replace manual tasks with scripts or code.</li>\n<li>Containerize: package processes with their dependencies making them easy to test, move and deploy.</li>\n<li>Orchestrate: use standard / commonly used / battle tested orchestration tools.</li>\n</ul>\n<p><strong>Cloud Service Providers</strong>\nAs of today, the cloud service providers play a major role in all startup companies and even in big companies.\nThis gets the programmers to the point where knowing Linux and ops utilities is not enough. Developers are expected to be experts in the different cloud providers in order to succeed with their tasks.</p>\n<p>Each cloud provider comes with new platforms, techniques, API’s and databases.</p><p><p>Cloud Native architecture is the key to many engineering and business benefits:</p>\n<ul>\n<li>It encourages developers to write small and purpose-built services rather than monoliths, which brings more flexibility and manageable code</li>\n<li>You get a better product quality because the same OCI image that was tested on development environment is deployed on production</li>\n<li>Deployment and version upgrades or rollbacks become easier and fully automatic, managed by set of battle-tested tools</li>\n<li>Horizontal scaling and high availability are much more easier to implement</li>\n<li>The code implemented in the container becomes a \"black box\" so you can easily write business logic in whatever programming language you wish</li>\n<li>From engineering point of view, you pay much more attention to interfaces, messages and protocols, so testing and changing implementation become much easier</li>\n<li>Some functionality (such as monitoring, request logging, security, etc.) is moved from the application to the network. You \"plug in\" a network proxy that does the non-functional logic well. It frees the application from managing these non-functional common aspects of the solution.\nAt the end of the day, you get set of components with clearly defined interfaces, written in any language, deployable everywhere - on premise or on the cloud, agile process, better product quality and much more flexibility to quickly react to the changing requirements.</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Gradle ",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>Gradle is a build tool. Following a build-by-convention approach, Gradle allows for declaratively modelling your problem domain using a powerful and expressive domain-specific language (DSL) implemented in Groovy instead of XML. Because Gradle is a JVM native, it allows you to write custom logic in the language you're most comfortable with, be it Java or Groovy. it too provides a powerful dependency management.</p>\n<p>Although still many more developers use Maven (~60%) Gradle is a powerful contender/ally which needs to be considered when making the decision on which build tool to use.</p>\n<p>The Android Studio build system is based on Gradle, and the Android Gradle plugin adds several features that are specific to building Android apps.&nbsp;</p>\n<p>Gradle is an open-source build automation tool that is designed to be flexible enough to build almost any type of software.</p><p><p>- High performance\n- JVM foundation\n- Conventions\n- Extensibility\n- IDE support</p></p>",
            "isNew": false
        },
        {
            "name": "Gradle ",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>Gradle is a build tool. Following a build-by-convention approach, Gradle allows for declaratively modelling your problem domain using a powerful and expressive domain-specific language (DSL) implemented in Groovy instead of XML. Because Gradle is a JVM native, it allows you to write custom logic in the language you're most comfortable with, be it Java or Groovy. it too provides a powerful dependency management.</p>\n<p>Although still many more developers use Maven (~60%) Gradle is a powerful contender/ally which needs to be considered when making the decision on which build tool to use.</p>\n<p>The Android Studio build system is based on Gradle, and the Android Gradle plugin adds several features that are specific to building Android apps.&nbsp;</p>\n<p>Gradle is an open-source build automation tool that is designed to be flexible enough to build almost any type of software.</p><p><p>- High performance\n- JVM foundation\n- Conventions\n- Extensibility\n- IDE support</p></p>",
            "isNew": false
        },
        {
            "name": "OCTANT",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>Octant is an open source developer-centric web interface for Kubernetes that lets you inspect a Kubernetes cluster and its applications</p><p><p>If we need easy and clear observability on our K8S cluster, OCTANT is a very useful option.</p></p>",
            "isNew": false
        },
        {
            "name": "Sidecars",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p>The main idea of the sidecar is to run multiple containers in one Kubernetes pod.\nIt allows building a microservice with a focus on the business functionality without dealing with infrastructure code inside the service.</p><p><p>The sidecar main scenarios are:</p>\n<ul>\n<li>Initiate container - e.g. DB alignment</li>\n<li>Authentication/Authorization</li>\n<li>Logging</li>\n<li>Routing</li>\n<li>Monitoring</li>\n<li>Security - e.g. TLS&nbsp;</li>\n</ul>\n<p>The sidecar pattern has become common and is part of the service mesh solution.</p></p>",
            "isNew": true
        },
        {
            "name": "Everything as Code",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>“Everything as Code” is the practice of managing all the parts of the application In SCM and automate the execution of it, Include configuration, Infrastructure, security.\nThis practice gives us:</p>\n<ul>\n<li>Traceability: All in SCM</li>\n<li>Repeatable: We can recreate every part</li>\n<li>Testability: We can test the change and the infra creation</li>\n</ul><p><p>As we see it, this practice is necessary for every product we develop these days.\nThe ability to track changes, deploy, etc …</p></p>",
            "isNew": false
        },
        {
            "name": "Backstage",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>An open platform for building developer portals.</p><p><p>Simplifies development over the infrastructure.</p></p>",
            "isNew": true
        },
        {
            "name": "Grafana",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>Grafana’s motto is <strong>“The analytics platform for all your metrics”</strong>, in the past ~5 years or so Granfana has done just that, becoming a centralized hub of data processing and visualization. Grafana has a big Datasource variety supported, enabling processing and real-time visualization of time series data originating from many data sources simultaneously. From traditional databases such as MySql and Postgresql and to time series databases such as OpenTSDB, Graphite, Prometheus, Elasticsearch, and others.</p>\n<p>Grafana also provides an <strong>extensible plugin interface</strong> adding the ability to enrich both visualizations with plugins or custom “data sources”.</p>\n<p>The Suger Coating of Grafana is the Grafana community website, which maintains a centralized hub for hosting \"plugins\" and \"dashboard\" which the community can download &amp; manage via source control.\nIn many cases, there is either a ready dashboard for your use case or at least a good starting point.</p>\n<p>Grafana also supports an HA installation method, authentication [Basic/LDAP/OAuth/etc] &amp; authorization schemes and organization management.\n<a href=\"https://grafana.com/\">Read more</a></p><p><p>Grafana is mature and the \"go-to dashboard\" framework\nAnd included in many frameworks such as Prometheus.</p></p>",
            "isNew": false
        },
        {
            "name": "Data Monitoring",
            "quadrant": "Backend",
            "ring": "Try",
            "description": "<p>Companies are monitoring the health and performance of applications for long time. Lately, the need to monitor data as well is also rising. The ability to tell that data characteristics is changed over time is important today, as many statistical and machine learning models rely on that data, and their accuracy is changed when data is changed. Therefore, there is a need for tools that monitor and alert significant data changes.</p><p><p>Lately many tools of data monitoring are presented. We recommend trying those tools to make sure the expected data is not changed over time, and update the models and systems accordingly.</p></p>",
            "isNew": false
        },
        {
            "name": "Berglas",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p><a href=\"https://github.com/GoogleCloudPlatform/berglas\">Berglas</a> is a command-line tool and library for storing and retrieving secrets on Google Cloud.Secrets are encrypted with Cloud KMS and stored in Cloud Storage\nAs a CLI, \nBerglas automates the process of encrypting, decrypting, and storing data on Google Cloud.As a library, \nBerglas automates the inclusion of secrets into various Google Cloud runtimes</p><p><p>Managing secrets in Google using tools like Pulumi / Terraform is great for creating the secrets, but keeping them up2date is another thing. Berglas is a command-line tool and library for storing and retrieving secrets on Google Cloud.\nBerglas automates the process of encrypting, decrypting, and storing data on Google Cloud, you can use the CLI for administration or as a library in your infrastructure provisioning processes.</p></p>",
            "isNew": false
        },
        {
            "name": "Preact",
            "quadrant": "Frontend",
            "ring": "Try",
            "description": "<p>Preact is a weight alternative to React that keeps the same syntax and similar APIs to react. The migration process from React is quite easy and moreover, developers who acquired React knowledge in the past, can work with Preact rather easy. </p>\n<p>https://preactjs.com/</p><p><p>Preact is a good performance alternative to react and switching to it from React is rather easy, however its community is far from being as wide as React community and it may take some time for it to be mature.</p></p>",
            "isNew": true
        },
        {
            "name": "DevOpsAI  - paradigm",
            "quadrant": "DevOps",
            "ring": "Try",
            "description": "<p>Logs, metrics, and other ongoing application info is becoming more detailed and wide. A human eye looking at that info, can identify a limited insight and understand the real status of a system. The DevOpsAI trend today is implementing Machine Learning on that info and creating insights that a human eye cannot identify. These insights can lead to manual action, or an automatic triggered action, like restarting a pod etc…\nMany commercial tools are now offering these features in their products - like<a href=\"http://logs.io\"> Logs.io</a>, Coralogix, and Anodot.</p><p><p>As AI is becoming more and more an integral part of our systems, it is time to use it also for our operations.</p></p>",
            "isNew": true
        },
        {
            "name": "GraalVM",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p>GraalVM is a <strong>Polyglot</strong> universal virtual machine for running applications written in JavaScript, Python, Ruby, R, JVM-based languages such as Java, Scala, Kotlin and Clojure, and LLVM-based languages such as C and C++. It removes the isolation between programming languages and enables interoperability in a shared runtime.</p>\n<p>It enables you to write polyglot applications and also to compile your application into a native image. Native images compiled with GraalVM ahead-of-time improve the startup time and reduce the memory footprint of JVM-based applications.</p>\n<p>GraalVM is based on the Graal JIT compiler which is currently, as of Java 11, being used as an experimental JIT compiler for the JVM instead of the famous c2 JIT compiler, but only for those enabling this feature.</p><p><p>This technology has proven itself many times over with better performance for your services without changing a single line of code. We highly recommend to keep using this software as it is already used in many production environments and even embedded in some micro frameworks as infrastructure.</p></p>",
            "isNew": false
        },
        {
            "name": "Smart Contracts",
            "quadrant": "Backend",
            "ring": "Try",
            "description": "<p>Smart contracts is a technology that enables developing, deploying and executing decentralized applications. It's a collection of code (its functions) and data (its state) that resides at a specific address on a supporting blockchain.</p><p><p>There is a rising demand for decentralized applications as part of the growth of the Web 3.0 space. Smart contracts and the way they are deployed are promising that no single organization will control the application. This paradigm is changing the way we think about software and influence the way we develop and deploy it.</p></p>",
            "isNew": true
        },
        {
            "name": "OIDC",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>OpenID Connect (OIDC) is an open authentication protocol that profiles and extends OAuth 2.0 to add an identity layer. OIDC allows clients to confirm an end user’s identity using authentication by an authorization server. Implementing OIDC on top of OAuth 2.0 creates a single framework that promises to secure APIs, mobile native applications and browser applications in a single, cohesive architecture.</p><p><p>OIDC is still popular and successful in the security world.</p></p>",
            "isNew": true
        },
        {
            "name": "Rollup - library bundling",
            "quadrant": "Frontend",
            "ring": "Try",
            "description": "<p>Rollup is a module bundler for JavaScript which compiles small pieces of code into something larger and more complex, such as a library or application. It uses the standardized ES module format for code, instead of previous idiosyncratic solutions such as CommonJS and AMD. ES modules let you freely and seamlessly combine the most useful individual functions from your favorite libraries. Rollup can optimize ES modules for faster native loading in modern browsers, or output a legacy module format allowing ES module workflows today.</p><p><p>Rollup specialises mainly in component libraries. It's much  easier to config than webpack and quite light weight.\nIt gains more and more ground lately, especially when building design systems.  It has a variety of plugins for every needed function.</p></p>",
            "isNew": false
        },
        {
            "name": "ArgoCD",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p><strong><a href=\"https://argoproj.github.io/argo-cd/\">Argo CD</a> - Declarative GitOps CD for Kubernetes</strong></p>\n<p>This tool simplifies Apps deployment on K8S clusters.\nIts installation is easy, based on CDRs, it has a pretty fast learning curve to start using it in PROD.\n<strong>ArgoCD</strong> lives in your K8S cluster and can manage Apps deployment on a local and REMOTE cluster with no additional tools to be installed.</p>\n<p><strong>How it works</strong>\nOnce installed, it tracks GIT repo with App deployment packages/manifests, it supports:</p>\n<ul>\n<li>Kustomize</li>\n<li>Helm</li>\n<li>Ksonnet</li>\n<li>Jsonnet</li>\n</ul>\n<p>Detects whether local/remote cluster manifests are synced with GIT repo (by pooling GIT repo), in case there is a diff (image version, replica set changed, annotation added, etc.) - it will deploy the changes to the cluster.</p>\n<p>In addition, it validates whether the entire app is healthy or not.\nIn case someone somehow changed the app’s configuration on the cluster - the tool will restore its original state according to GIT repo.\nThus, any change in-app configuration, version or setup, should be managed in GIT.</p>\n<p><strong>What else?</strong></p>\n<ul>\n<li>Great documentation with examples</li>\n<li>Monitoring metrics exposed in **Prometheus **format</li>\n<li>Roles and Policies management - in addition to 2 built-in roles (admin and read-only) there is an option to create your own!</li>\n<li>SSO integration using <strong>DEX</strong> (OpenID, Google, GitHub, Okta, etc.)</li>\n<li>Built-in** backup/Restore** tooling.</li>\n</ul>\n<p>In addition to the CLI tool, it has very nice <strong>web UI</strong> which allows the same management possibilities.</p><p><p>If you want to control your application definitions, configurations, and environments, it should be declarative and version controlled.\nIn addition, if you want automated application deployment and lifecycle management, use ArgoCD. ArgoCD is an easy tool to use, a very powerful tool, and has great visibility.</p></p>",
            "isNew": false
        },
        {
            "name": "OpenEBS",
            "quadrant": "DevOps",
            "ring": "Try",
            "description": "<p>OpenEBS builds on Kubernetes to enable Stateful applications to easily access Dynamic Local PVs or Replicated PVs. By using the Container Attached Storage pattern users report lower costs, easier management, and more control for their teams</p><p><p>Since OpenEBS volumes are managed independently, organizations can enable collaboration between small, loosely coupled teams. Storage parameters for each volume and workload can be monitored independently, allowing for the granular management of storage policies.</p></p>",
            "isNew": false
        },
        {
            "name": "MVI (Model View Intent)",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>MVI stands for Model-View-Intent. MVI is one of the newest architecture patterns for Android, inspired by the unidirectional and cyclical nature of the Cycle.js framework.</p>\n<p>MVI works in a very different way compared to its distant relatives, MVC, MVP or MVVM.</p><p><p>The role of each MVI components is as follows:</p>\n<ul>\n<li>Model represents a state. Models in MVI should be immutable to ensure a unidirectional data flow between them and the other layers in your architecture.</li>\n<li>Like in MVP, Interfaces in MVI represent Views, which are then implemented in one or more Activities or Fragments.</li>\n<li>Intent represents an intention or a desire to perform an action, either by the user or the app itself. For every action, a View receives an Intent. The Presenter observes the Intent, and Models translate it into a new state.</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "ESModules",
            "quadrant": "Frontend",
            "ring": "Keep",
            "description": "<p><a href=\"https://gist.github.com/ceejbot/b49f8789b2ab6b09548ccb72813a1054\">ESModules</a> has become widely supported among modern browsers. It is also supported in Nodejs (experimental flag in v12 and default support in v13).</p><p><p>ESModules are now standards, there are still some popular libraries that aren't supporting it, but they will support it eventually. </p></p>",
            "isNew": false
        },
        {
            "name": "Data Lake",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p>A data lake is a storage repository that holds a big amount of raw data in its native format until it is needed</p><p><p>A Data Lake is a must in any project that accumulates data. This is needed as a source of truth, and gives the flexibility to change the data model in the future.</p></p>",
            "isNew": false
        },
        {
            "name": "Telepresence",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>FAST, LOCAL DEVELOPMENT FOR KUBERNETES AND OPENSHIFT MICROSERVICES</p><p><p>When you develop a microservice application that runs on Kubernetes Teleprences gives you a very good environment to debug and run the microservice that you developed locally and support the integration with all other microservices.\nWe find Teleprences a very good tool that improves your development velocity when an application runs on Kubernetes.</p></p>",
            "isNew": false
        },
        {
            "name": "CircleCI",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>CircleCI: Continuous Integration and Deliveryhttps://circleci.com</p><p><p>CI/CD solution which integrates greatly with Github. Well documented, extensible and configurable. Can run managed and self-hosted. Allows debug pipelines with SSH.\nFirst-class Docker support and good caching system for speed-up builds.</p></p>",
            "isNew": false
        },
        {
            "name": "ClickHouse",
            "quadrant": "Backend",
            "ring": "Start",
            "description": "<p>ClickHouse is a fast&nbsp;<a href=\"https://github.com/ClickHouse/ClickHouse\">open-source</a>&nbsp;OLAP database management system.\nClickHouse's performance&nbsp;<a href=\"https://clickhouse.tech/benchmark/dbms/\">exceeds</a>&nbsp;comparable column-oriented database management systems currently available on the market. It processes hundreds of millions to more than a billion rows and tens of gigabytes of data per single server per second.</p><p><p>ClickHouse is best used for analytics over a stream of clean, well structured and immutable events or logs.\nClickHouse has unique advantages when comparing it to competing solutions:</p>\n<ul>\n<li>&nbsp;It's completely open source and free of vendor locking (compared to proprietary products such as Amazon Redshift, Google BigQuery and Snowflake)</li>\n<li>It can run on cloud as well as on premise (compared to the solutions above)</li>\n<li>It's hardware efficient, optimizing CPU and disk drive access while minimizing data transfers, resulting in fast response times (compared to Hadoop / Spark ecosystem solutions)</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Android 10 ",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>Android 10 improves on the well-established Android experience with new innovations:</p>\n<p>Networking has abilities for 5G networks and Wi-Fi performance modes.\nHandling configuration changes in foldable devices.\nSmart Reply in notifications, and sharing shortcuts.\nDark Theme to save battery.\nGesture navigation replacing hardware buttons.\nImprovements to Privacy and Security.\nAudio has improved playback capture, new audio and video codecs, native MIDI API, and directional, zoomable microphones.\nGraphics has added dynamic depth for photos and Vulkan.\nSettings Panels; Neural Networks API 1.2; Thermal API.</p><p><ul>\n<li>New Android APIs come out of beta in Android 10 (namely jetpack components).&nbsp;</li>\n<li>Adoption rate and marketing insights suggest switching to Android 10 by all leading manufacturers&nbsp;</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Webpack ",
            "quadrant": "Frontend",
            "ring": "Keep",
            "description": "<p>**Webpack **(currently in v. 4.6) is is a module bundler. It analyzes a cluster of interdependent modules (mainly js but also other assets) and produces bundles of static items.</p>\n<p>Webpack is highly configurable, (which sometimes considered being one of its downsides) and has a very rich plugin ecosystem.\nIn the current version, Webpack introduced</p>\n<p>Webpack is de facto a standard for frontend web development in general and builds in particular.</p><p><p>Webpack is still heavily used by many of our customers and under the hood in framework and library related generators such us create-react-app and Angular CLI. It is the largest bundler around and we recommend keeping it.</p></p>",
            "isNew": false
        },
        {
            "name": "Bitwarden",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>Bitwarden offers the easiest and safest way for teams and individuals to store and share sensitive data from any device.</p>\n<p><a href=\"https://bitwarden.com/\">Bitwardern</a>  gives the full experience, starting with the fact it is <strong>OpenSource</strong> I can use their-saas version(<em>they have a free account addition for personal use&nbsp;!</em>), on the <em>web (+browser extension)</em>, <em>mobile</em>-app <strong>_Secure API & CLI, _</strong>and the most important of all:</p>\n<blockquote>\n  <p>All of your data is fully encrypted before it ever leaves your device, only you have access to it.&nbsp;\n  Not even the team at Bitwarden can read your data, even if they wanted to. data is sealed with end-to-end <a href=\"https://www.atpinc.com/blog/what-is-aes-256-encryption\">AES-256 bit encryption</a>, <a href=\"https://auth0.com/blog/adding-salt-to-hashing-a-better-way-to-store-passwords/\">salted hashing</a>, and <a href=\"https://en.wikipedia.org/wiki/PBKDF2\">PBKDF2 SHA-256</a>.</p>\n  <p><em>If in doubut you can run your <strong>own Biwarden tenant on your servers&nbsp;…</strong></em></p>\n</blockquote><p><p>An easy and safe tool for teams and individuals to store and share sensitive data from any device.</p></p>",
            "isNew": false
        },
        {
            "name": "Express",
            "quadrant": "Frontend",
            "ring": "Keep",
            "description": "<p><p>Very mature and widely used framework.  Used for BFF and for writing servers in javascript mainly </p></p>",
            "isNew": true
        },
        {
            "name": " Java 8",
            "quadrant": "Backend",
            "ring": "Stop",
            "description": "<p>Java 8 released in March 2014. It’s&nbsp; the first LTS version of Java. Along with a lots of internal JVM improvements, number of useful features in language and standard library levels were included in this release:</p>\n<ul>\n<li>Base64 encoding and decoding.</li>\n<li>Date &amp; Time API.</li>\n<li>Functional Interfaces.</li>\n<li>Lambda expressions.</li>\n</ul><p><p>Java 8’s support is running out. It’s a solid reason to consider moving to the newest version of Java. We recommend to work with the newest LTS version to get stable, more secure development process with bunch of enhancements at VM and language level</p></p>",
            "isNew": false
        },
        {
            "name": "Harbor",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>Harbor is an open-source cloud-native registry that stores, signs, and scans container images for vulnerabilities.\nHarbor solves common challenges by delivering trust, compliance, performance, and interoperability. It fills a gap for organizations and applications that cannot use a public or cloud-based registry or want a consistent experience across clouds.</p>\n<p>Harbor is a private registry for docker images and helm charts with user management support, It can manage and synchronize multiple docker registries in different regions.\nIn summary, if you need a private docker hub like ECR, DockerHub.\nHarbor is a good candidate.</p><p><p>Need a private docker hub like ECR, DockerHub.\nHarbor is a good candidate.</p></p>",
            "isNew": false
        },
        {
            "name": "Kube-score",
            "quadrant": "DevOps",
            "ring": "Try",
            "description": "<p>kube-score is a tool that does static code analysis of your Kubernetes object definitions. The output is a list of recommendations of what you can improve to make your application more secure and resilient.</p><p><p>This tool alongside many similar ones is designed to help its users identify security &amp; policy violations at runtime.</p></p>",
            "isNew": true
        },
        {
            "name": "LENS",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>THE KUBERNETES IDE\nFOR OPERATIONS</p><p><p>A very&nbsp;nice and free desktop app that will help you visualize and control your Kubernetes cluster(s).</p></p>",
            "isNew": false
        },
        {
            "name": "GetX",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>State management is one of the most important topics in Flutter.\nIn Flutter, there are already a few state management techniques that help us to develop our app.</p>\n<p>The most popular State Managements patterns are:</p>\n<ul>\n<li>setState</li>\n<li>BLoC - Business Logic Component</li>\n<li>StreamBuilder</li>\n</ul>\n<p>Each pattern has its benefits and cons.</p>\n<p>As Flutter app based on Widgets which are structured in the app widget tree, we always have to consider where each widget is located in the tree (The context) and whether it should be StateFul or Stateless (The building blocks of flutter). In flutter, UI = f(State) and therefore, when we managing the app state we actually managing the UI, therefore before starting developing an app, we should select the right StateManagement pattern.</p>\n<h2 id=\"thereforeweshouldstartusingstatemanagementinflutterapps\">Therefore, we should start using StateManagement in Flutter apps.</h2>\n<p>GetX is an extra-light and powerful solution for Flutter. It combines high performance state management, intelligent dependency injection, and route management in a quick and practical way.</p><p><ul>\n<li>Focus on Performance with minimum consumption of resources.</li>\n<li>Extra-Light, pure dart code with no other dependencies allows this package to be very small.</li>\n<li>Save hours of development with no boilerplate code and very easy syntax.</li>\n<li>No Context needed, we can use GetX with no context to manipulate all of Flutters related widgets that need Context (Scaffold, Snackbar, Dialog etc..)</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "distroless",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>\"Distroless\" images contain only your application and its runtime dependencies. They do not contain package managers, shells or any other programs you would expect to find in a standard Linux distribution.\n<a href=\"https://github.com/GoogleContainerTools/distroless\">https://github.com/GoogleContainerTools/distroless</a></p><p><p>When you need a thin image from a size and security perspective, The Distroless container is a great choice.</p></p>",
            "isNew": false
        },
        {
            "name": "Vector",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>Vector is a high-performance, end-to-end (agent &amp; aggregator) observability data pipeline that puts you in control of your observability data. Collect, transform, and route all your logs, metrics, and traces to any vendors you want today and any other vendors you may want tomorrow. Vector enables dramatic cost reduction, novel data enrichment, and data security where you need it, not where it is most convenient for your vendors. Additionally, it is open source and up to 10x faster than every alternative in the space.</p><p><p>Vector is a very good and robust data pipeline tool.</p></p>",
            "isNew": true
        },
        {
            "name": "Realm ",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "undefined<p><ul>\n<li>Widely used by large companies</li>\n<li>Fast and easy to implement</li>\n<li>Secured</li>\n<li>Designed for Offline</li>\n<li>Reactive Architecture</li>\n<li>Thread Safe</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Npm workspaces",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>An NPM implementation that is very similar to yarn workspaces. </p><p><p>Workspaces were introduced with NPM 7 and come as a native node alternatives to Yarn woksrpaces &amp; Lerna. We suggest to try those because on one hand it comes from NPM itself, and on the other hand there may be some better alternatives such as Nrwl Nx.</p>\n<p><strong>npm workspaces</strong> has the same abilities as yarn workspaces, including run a script inside a workspace, and linking between workspaces as dependencies, and faster installation in case of shared dependencies.</p></p>",
            "isNew": false
        },
        {
            "name": "Npm workspaces",
            "quadrant": "Frontend",
            "ring": "Start",
            "description": "<p>An NPM implementation that is very similar to yarn workspaces. </p><p><p>Workspaces were introduced with NPM 7 and come as a native node alternatives to Yarn woksrpaces &amp; Lerna. We suggest to try those because on one hand it comes from NPM itself, and on the other hand there may be some better alternatives such as Nrwl Nx.</p>\n<p><strong>npm workspaces</strong> has the same abilities as yarn workspaces, including run a script inside a workspace, and linking between workspaces as dependencies, and faster installation in case of shared dependencies.</p></p>",
            "isNew": false
        },
        {
            "name": "Firebase Distribution",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>Firebase is a powerful platform for Mobile Android, iOS and WebApps.</p>\n<p>Firebase gives you functionality like analytics, databases, messaging and crash reporting so you can move quickly and focus on your users.\nFirebase is built on Google infrastructure and scales automatically.</p>\n<p>Firebase gives you many services such as:\nanalytics, Auth, Realtime database, Cloud Messaging, Storage, Crash reporting and more.</p>\n<p>Using One Firebase Console to control the services and data is provided.\nIt is easy to use and set up by using Firebase SDK libraries.</p>\n<h2 id=\"usuallyinordertosetupmostoftheservicesthereisawiderangeofdocumentationandcodeexamples\">Usually, in order to set up most of the services, there is a wide range of documentation and code examples.</h2>\n<p>Firebase App Distribution makes distributing your apps to trusted testers painless. By getting your apps onto testers' devices quickly, you can get feedback early and often. And if you use Crashlytics in your apps, you’ll automatically get stability metrics for all your builds, so you know when you’re ready to ship.</p>\n<p>What is in firebase:</p>\n<ul>\n<li>Cloud Firestore</li>\n<li>Cloud Functions</li>\n<li>Crash Reporting</li>\n<li>App Distribution</li>\n</ul><p><ul>\n<li>Cross-platform - Manage both your iOS and Android pre-release distributions from the same place.</li>\n<li>Fast distributions - Get early releases into your testers’ hands quickly, with fast onboarding, no SDK to install, and instant app delivery.</li>\n<li>Fits into your workflow - Distribute builds using the Firebase console, the Firebase Command Line Interface (CLI) tool, or Gradle (Android). Automate distribution by integrating the CLI into CI jobs.</li>\n<li>Tester management - Manage your testing teams by organizing them into groups. Easily add new testers with email invitations that walk them through the onboarding process. See the status of each tester for specific versions of your app: view who has accepted a testing invitation and downloaded the app.</li>\n<li>Works with Crashlytics - When combined with Crashlytics, get insights into the stability of your test distributions.</li>\n<li>Gain valuable pre-release insights - App Distribution gives you a centralized dashboard to view insights on pre-release versions of your app. Testers are able to provide you with timely feedback on usability and pairing App Distribution with Crashlytics gives you real-time crash reporting for your app.</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "LinkerD",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>Linkerd is a service mesh for Kubernetes. It makes running services easier and safer by giving you runtime debugging, observability, reliability, and security—all without requiring any changes to your code.</p><p><p>A service mesh tool for K8S.</p></p>",
            "isNew": true
        },
        {
            "name": "BigData Warehouse",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p>A data warehouse is <strong>a type of data management system that is designed to enable and support business intelligence (BI) activities, especially analytics</strong>. Data warehouses are solely intended to perform queries and analysis and often contain large amounts of historical data.\nTo support Big Data, the warehouse will usually not support foreign keys and sometimes not even indexes</p><p><p>Data warehouse is a standard architecture that enables non programmers like analysis to discover the data and run sql queries.</p></p>",
            "isNew": true
        },
        {
            "name": "Apache Pulsar",
            "quadrant": "Backend",
            "ring": "Start",
            "description": "<p>Apache Pulsar is an open-source distributed pub-sub messaging system originally created at Yahoo and now part of the Apache Software Foundation</p><p><p>Apache Pulsar is the new Kafka. This product has the strengths of Kafka but also adds multiple features that are missing in Kafka and exists in other messaging platform such as rabbit, while maintaining the ability to scale.</p></p>",
            "isNew": false
        },
        {
            "name": "cillium.io",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>Cilium is an open source software for providing, securing and observing network connectivity between container workloads - cloud native, and fueled by the revolutionary Kernel technology eBPF.</p><p><p>If we need security and observing network connectivity between containers, this is a very good option.</p></p>",
            "isNew": true
        },
        {
            "name": "Firebase ML",
            "quadrant": "Mobile",
            "ring": "Try",
            "description": "<p>Firebase is a powerful platform for Mobile Android, iOS and WebApps.</p>\n<p>Firebase gives you functionality like analytics, databases, messaging and crash reporting so you can move quickly and focus on your users.\nFirebase is built on Google infrastructure and scales automatically.</p>\n<p>Firebase gives you many services such as:\nanalytics, Auth, Realtime database, Cloud Messaging, Storage, Crash reporting and more.</p>\n<p>Using One Firebase Console to control the services and data is provided.\nIt is easy to use and set up by using Firebase SDK libraries.</p>\n<h2 id=\"usuallyinordertosetupmostoftheservicesthereisawiderangeofdocumentationandcodeexamples\">Usually, in order to set up most of the services, there is a wide range of documentation and code examples.</h2>\n<p>Firebase App Distribution makes distributing your apps to trusted testers painless. By getting your apps onto testers' devices quickly, you can get feedback early and often. And if you use Crashlytics in your apps, you’ll automatically get stability metrics for all your builds, so you know when you’re ready to ship.</p>\n<p>What is in firebase:</p>\n<ul>\n<li>Cloud Firestore</li>\n<li>Cloud Functions</li>\n<li>Crash Reporting</li>\n<li>App Distribution</li>\n</ul><p><ul>\n<li>Beta Firebase Machine Learning </li>\n<li>Image Processing</li>\n<li>Data Modeling</li>\n</ul>\n<h2 id=\"textrecognition\">- Text Recognition</h2></p>",
            "isNew": false
        },
        {
            "name": "GraphQL",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p><a href=\"https://graphql.org/\">GraphQL</a>is a query language for APIs and a runtime for fulfilling those queries with your existing data. GraphQL provides a complete and understandable description of the data in your API, gives clients the power to ask for exactly what they need and nothing more, makes it easier to evolve APIs over time, and enables powerful developer tools.</p>\n<ul>\n<li>GraphQL queries always return predictable results.</li>\n<li>While typical REST APIs require loading from multiple URLs, GraphQL APIs get all the data your app needs in a single request.</li>\n<li>GraphQL uses types to ensure Apps only ask for what’s possible and provide clear and helpful errors.</li>\n</ul><p><p>GraphQL is an open-source query language for APIs, it lets you query multiple resources in a single query with predictable results.</p>\n<p>This technology is used by teams of all sizes in various environments and languages to power mobile apps, websites, and APIs.</p></p>",
            "isNew": false
        },
        {
            "name": "GraphQL",
            "quadrant": "Frontend",
            "ring": "Keep",
            "description": "<p><a href=\"https://graphql.org/\">GraphQL</a>is a query language for APIs and a runtime for fulfilling those queries with your existing data. GraphQL provides a complete and understandable description of the data in your API, gives clients the power to ask for exactly what they need and nothing more, makes it easier to evolve APIs over time, and enables powerful developer tools.</p>\n<ul>\n<li>GraphQL queries always return predictable results.</li>\n<li>While typical REST APIs require loading from multiple URLs, GraphQL APIs get all the data your app needs in a single request.</li>\n<li>GraphQL uses types to ensure Apps only ask for what’s possible and provide clear and helpful errors.</li>\n</ul><p><p>GraphQL is an open-source query language for APIs, it lets you query multiple resources in a single query with predictable results.</p>\n<p>This technology is used by teams of all sizes in various environments and languages to power mobile apps, websites, and APIs.</p></p>",
            "isNew": false
        },
        {
            "name": "syft",
            "quadrant": "DevOps",
            "ring": "Try",
            "description": "<p>A very simple tool to explore docker images and generating Software Bill Of Materials.</p><p><p>A CLI tool and Go library for generating a Software Bill of Materials (SBOM) from container images and filesystems. Exceptional for vulnerability detection when used with a scanner like Grype.</p></p>",
            "isNew": true
        },
        {
            "name": "Broadcast Receivers ",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>Android apps can send or receive broadcast messages from the Android system and other Android apps, similar to the publish-subscribe design pattern. These broadcasts are sent when an event of interest occurs. For example, the Android system sends broadcasts when various system events occur, such as when the system boots up or the device starts charging.</p><p><ul>\n<li>Part of Android Application components</li>\n<li>Android OS intent based communication between application components.</li>\n<li>Asynchronous communication</li>\n<li>Complexity is low- It is the easiest way to communicate between processes.</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Dagger 2 ",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>Dagger is a fully static, compile-time dependency injection framework for Java, Kotlin, and Android. It is an adaptation of an earlier version created by Square and now maintained by Google.</p>\n<p>Dagger aims to address many of the development and performance issues that have plagued reflection-based solutions.</p><p><ul>\n<li>Reduction in dependencies.</li>\n<li>Highly reusable code.</li>\n<li>Improved testability of codes.</li>\n<li>Higher readability of code.</li>\n<li>Single responsibility principle can be applied.</li>\n<li>Very popular: you will find it quite regularly in Android projects</li>\n<li>Maintained by Google which has forked the original project created by Square</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Zeppelin",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>Apache Zeppelin is a notebook for managing and visualizing Data and Data-lake. With Apache Zeppelin, one can perform Data Ingestion, Data Discovery, Data Analytics and also have Data Visualization &amp; Collaboration.\nApache Zeppelin is a Java runtime and supports the following languages and frameworks: Scala as Apache Spark, Python, JDBC, Markdown and Shell.\nIt also supports many plugins The results of the queries can be shown in nice built-in visuals like graphs, pie charts and more.</p>\n<p>Apache Zeppelin supports many additional interpreters that can be loaded or integrated using Helium,\nAmong those interpreters are for example Cassandra, Elasticsearch, Flink, Ignite, bean, angular and many more.</p><p><p>Zeppelin is one of the best tools out there to experiment in Spark, and as such it makes Spark accessible for Data scientists (via PySpark).</p></p>",
            "isNew": false
        },
        {
            "name": "RxJS",
            "quadrant": "Frontend",
            "ring": "Keep",
            "description": "<p><strong>RxJS</strong> is an implementation of ReactiveX in Javascript, a library for reactive programming using Observables, to make it easier to compose asynchronous or callback-based code.</p>\n<p>ReactiveX is more than an API, it’s an idea and a breakthrough in programming. It has inspired several other APIs, frameworks, and even programming languages.</p>\n<p>It has the following principles:\nFunctional\nAvoid intricate stateful programs, using clean input/output functions over observable streams.</p>\n<p>Less is more\nReactiveX’s operators often reduce what was once an elaborate challenge into a few lines of code.</p>\n<p>Async error handling\nTraditional try/catch is powerless for errors in asynchronous computations, but ReactiveX is equipped with proper mechanisms for handling errors.</p>\n<p>Concurrency made easy\nObservables and Schedulers in ReactiveX allow the programmer to abstract away low-level threading, synchronization, and concurrency issues.</p><p><p>We want to keep RXjs since its the de-facto most popular library for implementing reactive programming in Javascript and it is being used by Angular inferentially.</p></p>",
            "isNew": false
        },
        {
            "name": "Spring Native",
            "quadrant": "Backend",
            "ring": "Try",
            "description": "<p>Spring Native provides support for compiling Spring applications to native executables using GraalVM.\nUsing native image provides key advantages, such as instant startup, instant peak performance, and reduced memory consumption.</p><p><p>Today, that everything is running in containers, it makes more sense to compile to native code.&nbsp;\nThe replacement of Just in time compilation with ahead of time compilation makes the executable smaller and faster to load and get to peak performance.\nSpring Native comes to compile <strong>Spring applications</strong> to native code, unlike the alternatives (such as Quarkus).\nSince Spring is the most common java framework this has the potential to become a must for java developers.</p></p>",
            "isNew": true
        },
        {
            "name": "Android Things ",
            "quadrant": "Mobile",
            "ring": "Stop",
            "description": "<p>Android Things lets you build professional, mass-market products on a trusted platform, without previous knowledge of embedded system design. It reduces the large, upfront development costs and the risks inherent in getting your idea off the ground. When you’re ready to ship large quantities of devices, your costs also scale linearly and ongoing engineering and testing costs are minimized with Google-provided updates.</p>\n<p>Android Things extends the core Android framework with additional APIs provided by the Things Support Library, which lets you integrate with new types of hardware not found on mobile devices.\nDeveloping apps for embedded devices is different from mobile in a few important ways such as:</p>\n<ul>\n<li>More flexible access to hardware peripherals and drivers than mobile devices</li>\n<li>System apps are not present to optimize startup and storage requirements Apps are launched automatically on startup to immerse your users in the app experience.</li>\n<li>Devices expose only one app to users, instead of multiple like with mobile devices.</li>\n</ul><p><ul>\n<li>Proprietary binary format prevented adoption in the industry</li>\n<li>Shift from embedded devices to smart speakers</li>\n<li>But than again, shift from Android Things to Google Assistant on speakers\n&nbsp;</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Pulumi",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>Modern Infrastructure as Code for Developers and Infrastructure Teams. From Open Source to Enterprise.</p><p><p>By using Pulumi over the likes of terraform, you can move from static configuration to procedural programming, and enhance the scenarios that you can support.</p></p>",
            "isNew": false
        },
        {
            "name": "Pulumi",
            "quadrant": "Backend",
            "ring": "Start",
            "description": "<p>Modern Infrastructure as Code for Developers and Infrastructure Teams. From Open Source to Enterprise.</p><p><p>By using Pulumi over the likes of terraform, you can move from static configuration to procedural programming, and enhance the scenarios that you can support.</p></p>",
            "isNew": false
        },
        {
            "name": "turborepo",
            "quadrant": "Frontend",
            "ring": "Try",
            "description": "<p>Turborepo is a blazing fast build system for JavaScript/TypeScript&nbsp;<em>monorepos</em>: codebases containing multiple projects, often using multiple frameworks, in a single unified code repository.\nMonorepos have many advantages, but they require appropriate tooling in order to scale. Turborepo provides this tooling and more. It leverages advanced build system ideas and techniques to speed up development, but with a fraction of the configuration and complexity. Instead of wasting countless days worrying about&nbsp;<em>how</em>&nbsp;you're shipping, Turborepo lets you focus on&nbsp;<em>what</em>&nbsp;you're shipping by abstracting all the annoying configuration, scripts, and tooling on your behalf.\nLast but not least, unlike other build systems, Turborepo is designed to be incrementally adopted, so you can gradually and partially add it to most codebases in a few minutes.</p><p><p>We recommend trying this new mono-repo management tool that might be an alternative to Nrwl/Nx </p></p>",
            "isNew": true
        },
        {
            "name": "Scala Applications",
            "quadrant": "Backend",
            "ring": "Stop",
            "description": "<p>Scala combines object-oriented and functional programming in one concise, high-level language. Scala’s static types help avoid bugs in complex applications, and its JVM and JavaScript runtimes let you build high-performance systems with easy access to huge ecosystems of libraries.</p>\n<p>Due to the over academization of the language and abundance of features, it has had low adoption.</p>\n<p>Our current position is that scala has moved to the maintenance only, and new projects should shy away from using scala</p><p><p>Scala is great language, but despite the expectations it does not  evolved into a mainstream language here are few reasons:\n- Steep learning curve\n- Backward compatibility Issue\n- Readability</p></p>",
            "isNew": false
        },
        {
            "name": "Flux CD",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>GitOps tool - Flux and Flagger deploy apps with canaries, feature flags, and A/B rollouts. Flux can also manage any Kubernetes resource. Infrastructure and workload dependency management is built in.</p><p><p>As GitOps becomes more and more popular, this is one of the best GitOps tools.</p></p>",
            "isNew": true
        },
        {
            "name": "Kubeflow",
            "quadrant": "Backend",
            "ring": "Start",
            "description": "<p>Kubeflow is a framework for deploying ML workflows on Kubernetes cluster. It is based on Argo Workflow and provides a Python API to easily create Argo workflows without the need to write YAML files. Kubeflow include all the ingredients for a full ML development: research with JupyterLabs, training and experimenting via pipelines and model lifecycle management.</p><p><p>Kubeflow version 1.X is a major step forward from the pre 1.0 versions. It now provides tools that allow data scientists to deploy pipelines without the help of DevOp engineers. It provides tools for deployment on all major cloud providers and on any standalone K8s cluster.</p></p>",
            "isNew": false
        },
        {
            "name": "Jsonnet/Ksonnet",
            "quadrant": "DevOps",
            "ring": "Stop",
            "description": "<p><a href=\"https://jsonnet.org/\">Jsonnet</a>\n<a href=\"https://ksonnet.io/\">Ksonnet</a></p>\n<p>Ksonnet project is no longer being developed. <a href=\"https://blogs.vmware.com/cloudnative/2019/02/05/welcoming-heptio-open-source-projects-to-vmware/\">see</a> \nBottom line the Ksonnet project has stopped the development and the git repo is archived</p><p><p>Ksonnet project has stopped the development and the git repo is archived.</p></p>",
            "isNew": false
        },
        {
            "name": "Sentry ",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>Sentry is an application monitoring platform helps every developer should know.\nYou can monitor, diagnose, fix, and optimize the performance of your code.</p><p><ul>\n<li>Easy implementation</li>\n<li>Support all the familiar Languages</li>\n<li>Customise dashboard</li>\n<li>Real time reports</li>\n<li>Working with large companies (Disney, Github, Microsoft…)</li>\n<li>Reliable for many years</li>\n<li>Quick support team</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Desktop PWA",
            "quadrant": "Frontend",
            "ring": "Start",
            "description": "<p><a href=\"https://developers.google.com/web/progressive-web-apps/desktop\">Progressive Web Apps for desktop</a>  may become THE way to develop hybrid applications for both mobile and web and now also desktop applications.</p>\n<p>Starting in Chrome 73, Progressive Web Apps are now supported on all desktop platforms, including Chrome OS, Linux, Mac, and Windows.</p>\n<p>The advantages of leveraging PWA for desktops are quite plain - it easily allows for code sharing with browser-based web-apps with minimal modifications to support desktop runtime.</p><p><p>Desktop PWA are PWAs that can run on desktop. We suggest trying PWA because apparently users like having their experience with desktop app, rather than searching for your site, and You may gain more access to your app when it is installed on your machine than browsed through a browser.</p></p>",
            "isNew": false
        },
        {
            "name": "Debezium",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p>Debezium stream changes from your databases. \nDebezium is an open-source distributed platform for change data capture. Start it up, point it at your databases, and your apps can start responding to all of the inserts, updates, and deletes that other apps commit to your databases. Debezium is durable and fast, so your apps can respond quickly and never miss an event, even when things go wrong.</p><p><p>Some typical use cases for CDC include: purge a cache, update search indexes, generate derived views and data, keep other data sources in sync, and much more.\nThe advantages of Debezium's approach to infer changes by reading database logs instead of polling data, include reducing resource load, as well as code complexity.\nAnother great advantage is fault tolerance. Even if your apps go down, Debezium keeps monitoring and continues exactly where they left off. No matter what, Debezium keeps the events in the same order and makes sure that you always see every event, even when things go wrong.\nDebezium is built on top of Apache Kafka, which is proven, scalable, and handles very large volumes of data very quickly.</p></p>",
            "isNew": false
        },
        {
            "name": "Lerna",
            "quadrant": "Frontend",
            "ring": "Stop",
            "description": "<p>Lerna is a fast modern build system for managing and publishing multiple JavaScript/TypeScript packages from the same repository.</p><p><p>Nrwl has taken ownership over Lerna while there are other alernatives to it (npm workspaces, yarn workstapces, turborepo), and therefore we recommend stop using it.</p></p>",
            "isNew": true
        },
        {
            "name": "Lit-Element, lit html",
            "quadrant": "Frontend",
            "ring": "Keep",
            "description": "<p><strong>Lit-element</strong>\nLit-element is a polymer project, to write custom elements, along with a data binding mechanism.</p>\n<p>Lit-element is built upon lit-HTML and it is much liter than component-based framework/libraries such as Angular / React / Vue.</p>\n<p>The main advantage of using Lit-element is that it enables you to continue writing code close to the browser, using its API, and save the time of writing your own change detection mechanism,</p><p><p>Lit-element/lit html is, right now, one of the most popular libraries to write custom elements with, its future may be determined by the market tend to use the web platform and use the heavy frameworks/libraries less.</p>\n<p>Large companies often use it for their internal component libraries and enables them to be consumed by all other used frameworks and libraries.</p></p>",
            "isNew": false
        },
        {
            "name": "Containerd",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>containerd is available as a daemon for Linux and Windows. It manages the complete container lifecycle of its host system, from image transfer and storage to container execution and supervision to low-level storage to network attachments and beyond.</p><p><p>The Docker manager of CNCF officially from Feb 2019.</p></p>",
            "isNew": true
        },
        {
            "name": "Karpenter",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>Karpenter automatically launches just the right compute resources to handle your k8s cluster's applications. It is designed to let you take full advantage of the cloud with fast and simple compute provisioning for Kubernetes clusters.</p><p><p>K8S HPA and node autoscaling are great. But this tool is taking one step ahead. It analyzes usage and based on that, decides upon the amount of the needed compute resources.</p></p>",
            "isNew": true
        },
        {
            "name": "Cloud Native Solutions",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>**Cloud Native Solution **With the broad adoption of SOA and Micro Service Architectures and many IaaS, PaaS offerings one of the “lessons learned” is that you need to be able to harness your infrastructure and start treating it in a standardized way.</p>\n<p>So What is Cloud Native? The Cloud Native Computing Foundation (CNCF) describes it as “distributed systems capable of scaling to tens of thousands of self healing multi-tenant nodes”. That’s a “how” (distributed systems) and a “why” (high scalability and automated resilience).</p>\n<p>All the above in a complex/polyglot world will only be possible with standards and tooling to enable all these moving parts to suit small to large scale microservice based applications - This is what the Cloud Native Movement and the CNCF will promote in the years to come.</p>\n<p>The following principles drive Cloud Native solutions:</p>\n<ul>\n<li>Treat your own / cloud /  hybrid infrastructure as-a-service: run on servers that can be flexibly provisioned on demand.</li>\n<li>Microservices architecture: individual components are small, loosely coupled.</li>\n<li>Automated deployments and continuously integrated and test -&gt; replace manual tasks with scripts or code.</li>\n<li>Containerize: package processes with their dependencies making them easy to test, move and deploy.</li>\n<li>Orchestrate: use standard / commonly used / battle tested orchestration tools.</li>\n</ul>\n<p><strong>Cloud Service Providers</strong>\nAs of today, the cloud service providers play a major role in all startup companies and even in big companies.\nThis gets the programmers to the point where knowing Linux and ops utilities is not enough. Developers are expected to be experts in the different cloud providers in order to succeed with their tasks.</p>\n<p>Each cloud provider comes with new platforms, techniques, API’s and databases.</p><p><p>It appears that cloud-native solutions are going to stay with us for a while.</p></p>",
            "isNew": false
        },
        {
            "name": "Swarm",
            "quadrant": "DevOps",
            "ring": "Stop",
            "description": "<p>Docker Compose is a tool for defining and running multi-container Docker applications. With Compose, you use a YAML file to configure your application’s services. Then, with a single command, you create and start all the services from your configuration.</p>\n<p>Docker Compose is used for running multi-container applications on a single machine or on multiple machines with Swarm mostly in Dev and QA environments, and in some places in Production as well.</p>\n<p>The cluster management and orchestration features embedded in the Docker Engine</p><p><p>We identify a large client base in the process of either living within the limits of the swarm or moving to Kubernetes.</p></p>",
            "isNew": false
        },
        {
            "name": "Benchmark ",
            "quadrant": "Mobile",
            "ring": "Try",
            "description": "<p>The Benchmark library makes it easy to benchmark your Kotlin-based or Java-based code from within Android Studio. The library handles warmup, measures your code performance, and outputs benchmarking results to the Android Studio console.</p><p><ul>\n<li>New developer tool for code improvement and app design review</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Airflow",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p>Airflow is today the most appreciated workflow engine in the distributed world.\nIt allows building modular workflow with high scale, triggering, forking and joining and many more features.\nIn addition, a good GUI that helps to audit the workflow.</p>\n<p>This framework is run on Python, which makes it very attractive to DevOps groups.</p>\n<p>The ramp-up seems easy in the beginning but requires deep knowledge on later phases. the solution is also based on other Python frameworks and databases for the queue management and databases, and for the webserver. Celery, RabbitMQ, MySQL or Postgres.\nSome drawbacks of this solution are the fact that all configuration is deployed and Python code. This may cause one bug to halt the whole of the server.\nAnother problem with Python is the different versions that may be installed and updated on the different servers and may not be managed properly and cause bugs in Airflow itself.</p><p><p>Very few systems do not have the need for scheduling tasks. Airflow has become the main tool to solve this issue. Most could providers have a SAAS solution for airflow, so we will see it becoming even more mainstream</p></p>",
            "isNew": false
        },
        {
            "name": "Flutter State Management ",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>State management is one of the most important topics in Flutter.\nIn Flutter, there are already a few state management techniques that help us to develop our app.</p>\n<p>The most popular State Managements patterns are:</p>\n<ul>\n<li>setState</li>\n<li>BLoC - Business Logic Component</li>\n<li>StreamBuilder</li>\n</ul>\n<p>Each pattern has its benefits and cons.</p>\n<p>As Flutter app based on Widgets which are structured in the app widget tree, we always have to consider where each widget is located in the tree (The context) and whether it should be StateFul or Stateless (The building blocks of flutter). In flutter, UI = f(State) and therefore, when we managing the app state we actually managing the UI, therefore before starting developing an app, we should select the right StateManagement pattern.</p>\n<h2 id=\"thereforeweshouldstartusingstatemanagementinflutterapps\">Therefore, we should start using StateManagement in Flutter apps.</h2>\n<p>GetX is an extra-light and powerful solution for Flutter. It combines high performance state management, intelligent dependency injection, and route management in a quick and practical way.</p><p><ul>\n<li>Very easy and straightforward to understand.</li>\n<li>A great way to handle ephemeral State.</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "AndroidX ",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>Artifacts within the androidx namespace comprise the Android Jetpack libraries. Like the Support Library, libraries in the android namespace ship separately from the Android platform and provide backward compatibility across Android releases.</p>\n<p>AndroidX is a major improvement to the original Android Support Library, which is no longer maintained. androidx packages fully replace the Support Library by providing feature parity and new libraries.</p>\n<p>In addition, AndroidX includes the following features:</p>\n<ul>\n<li>All packages in AndroidX live in a consistent namespace starting with the string androidx. The Support Library packages have been mapped into the corresponding androidx.* packages. For a full mapping of all the old classes and build artifacts to the new ones, see the Package Refactoring page.</li>\n<li>Unlike the Support Library, androidx packages are separately maintained and updated. The androidx packages use strict Semantic Versioning, starting with version 1.0.0. You can update AndroidX libraries in your project independently.</li>\n<li>Version 28.0.0 is the last release of the Support Library. There will be no more android. support library releases. All new feature development will be in the androidx namespace.</li>\n</ul><p><p>We think it is important to keep the project up to date with androidx in order to solve project dependencies since the support lib is no longer maintained.</p>\n<ul>\n<li>AndroidX is a set of common Android libraries and architecture components by Google.</li>\n<li>AndroidX replaces Google's deprecated Support libraries.</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Recoil",
            "quadrant": "Frontend",
            "ring": "Try",
            "description": "<p>For reasons of compatibility and simplicity, it's best to use React's built-in state management capabilities rather than external global state. But React has certain limitations:</p>\n<ul>\n<li>Component state can only be shared by pushing it up to the common ancestor, but this might include a huge tree that then needs to re-render.</li>\n<li>Context can only store a single value, not an indefinite set of values each with its own consumers.</li>\n<li>Both of these make it difficult to code-split the top of the tree (where the state has to live) from the leaves of the tree (where the state is used).\nWe want to improve this while keeping both the API and the semantics and behavior as Reactish as possible.\nRecoil defines a directed graph orthogonal to but also intrinsic and attached to your React tree. State changes flow from the roots of this graph (which we call atoms) through pure functions (which we call selectors) and into components. With this approach:</li>\n<li>We get a boilerplate-free API where shared state has the same simple get/set interface as React local state (yet can be encapsulated with reducers etc. if needed).</li>\n<li>We have the possibility of compatibility with Concurrent Mode and other new React features as they become available.</li>\n<li>The state definition is incremental and distributed, making code-splitting possible.</li>\n<li>State can be replaced with derived data without modifying the components that use it.</li>\n<li>Derived data can move between being synchronous and asynchronous without modifying the components that use it.</li>\n<li>We can treat navigation as a first-class concept, even encoding state transitions in links.</li>\n<li>It's easy to persist the entire application state in a way that is backwards-compatible, so persisted states can survive application changes.\nFor reasons of compatibility and simplicity, it's best to use React's built-in state management capabilities rather than external global state. But React has certain limitations:</li>\n<li>Component state can only be shared by pushing it up to the common ancestor, but this might include a huge tree that then needs to re-render.</li>\n<li>Context can only store a single value, not an indefinite set of values each with its own consumers.</li>\n<li>Both of these make it difficult to code-split the top of the tree (where the state has to live) from the leaves of the tree (where the state is used).\nWe want to improve this while keeping both the API and the semantics and behavior as Reactish as possible.\nRecoil defines a directed graph orthogonal to but also intrinsic and attached to your React tree. State changes flow from the roots of this graph (which we call atoms) through pure functions (which we call selectors) and into components. With this approach:</li>\n<li>We get a boilerplate-free API where shared state has the same simple get/set interface as React local state (yet can be encapsulated with reducers etc. if needed).</li>\n<li>We have the possibility of compatibility with Concurrent Mode and other new React features as they become available.</li>\n<li>The state definition is incremental and distributed, making code-splitting possible.</li>\n<li>State can be replaced with derived data without modifying the components that use it.</li>\n<li>Derived data can move between being synchronous and asynchronous without modifying the components that use it.</li>\n<li>We can treat navigation as a first-class concept, even encoding state transitions in links.\nIt's easy to persist the entire application state in a way that is backwards-compatible, so persisted states can survive application changes.For reasons of compatibility and simplicity, it's best to use React's built-in state management capabilities rather than external global state. But React has certain limitations:</li>\n<li>Component state can only be shared by pushing it up to the common ancestor, but this might include a huge tree that then needs to re-render.</li>\n<li>Context can only store a single value, not an indefinite set of values each with its own consumers.</li>\n<li>Both of these make it difficult to code-split the top of the tree (where the state has to live) from the leaves of the tree (where the state is used).\nWe want to improve this while keeping both the API and the semantics and behavior as Reactish as possible.\nRecoil defines a directed graph orthogonal to but also intrinsic and attached to your React tree. State changes flow from the roots of this graph (which we call atoms) through pure functions (which we call selectors) and into components. With this approach:</li>\n<li>We get a boilerplate-free API where shared state has the same simple get/set interface as React local state (yet can be encapsulated with reducers etc. if needed).</li>\n<li>We have the possibility of compatibility with Concurrent Mode and other new React features as they become available.</li>\n<li>The state definition is incremental and distributed, making code-splitting possible.</li>\n<li>State can be replaced with derived data without modifying the components that use it.</li>\n<li>Derived data can move between being synchronous and asynchronous without modifying the components that use it.</li>\n<li>We can treat navigation as a first-class concept, even encoding state transitions in links.</li>\n<li>It's easy to persist the entire application state in a way that is backwards-compatible, so persisted states can survive application changes.\n<a href=\"https://recoiljs.org\">https://recoiljs.org</a></li>\n</ul><p><p>Recoil looks as a good alternative to global state management for React app. </p>\n<p>It is react only tool which may be an advantage but also a downside of it.</p>\n<p>If you want a global state management for your react app, we recommend trying it.</p></p>",
            "isNew": true
        },
        {
            "name": "Serverless DevOps Pipelines",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>As the growth in popularity of Functions in General and Serverless architecture in specific, varying from Cloud Native/Cloud-based to On-Prem solutions. Serverless architecture and especially the “Function part” has become the go-to tool for many DevOps processes that need automating and in many cases act as the binding context of the by design “loosely coupled” architecture.</p>\n<p>As we grow in event-driven processes we will see more and more functions listening on event streams such as SNS on AWS, or NATS, Kafka, etc on tools like OpenFaaS,Knative.\nThere tools/frameworks enable many DevOps teams to achieve their goals in a consistent, monitored and repetitive way, not to mention the replacement of many utilities such as CronJobs, etc.</p><p><p>As part of the serverless architecture trends, We see that this paradigm is also good for DevOps tasks and we use it more and more…</p></p>",
            "isNew": false
        },
        {
            "name": "Apache Iceberg",
            "quadrant": "Backend",
            "ring": "Try",
            "description": "<p>Apache Iceberg is an open table format for huge analytic datasets. Iceberg adds tables to Presto and Spark that use a high-performance format that works just like a SQL table.</p><p><p>Apache Iceberg provides us reliable , maintainable  and efficient way to work with data lake. It hides implementation details and makes it much more robust.</p></p>",
            "isNew": false
        },
        {
            "name": "Accessibility Design",
            "quadrant": "Frontend",
            "ring": "Keep",
            "description": "<p><p>You can never know who are the users that will use your application. Having an accessible application, design it as accessible one, can make sure that you will follow standards and have your application compatible with as many users as you can. Moreover, there are times that regulation forces you to do it for your public sites and apps, why not do it in advance?</p></p>",
            "isNew": false
        },
        {
            "name": "Feature Store",
            "quadrant": "Backend",
            "ring": "Start",
            "description": "<p>Feature Store is a database built specifically for the needs of Machine Learning projects. Its aim is to share features built for one model with other models. The centralized nature of model data allows multiple models to use the same features and reduce data engineering time and cost.\nThe data is served in two ways: offline historical data for training and online latest-value data for prediction.&nbsp;\nThe data is divided into entities and each entity has multiple features, which are columns of data, stating current or accumulated data about the entity.</p><p><p>Using Feature Store centralizes the data for multiple models, reducing the investment in data engineering and improving accuracy of models, by using a single source of data that is already tested for previous models. We recommend starting the use of such stores, whether as managed services by the cloud providers or as a cloud-native flavor that can be used anywhere.</p></p>",
            "isNew": false
        },
        {
            "name": "Svelte",
            "quadrant": "Frontend",
            "ring": "Try",
            "description": "<p>Svelte is a radical new approach to building user interfaces. Whereas traditional frameworks like React and Vue do the bulk of their work in the browser, Svelte shifts that work into a compile step that happens when you build your app.</p>\n<p>Instead of using techniques like virtual DOM diffing, Svelte writes code that surgically updates the DOM when the state of your app changes.</p>\n<p>We can try to use Svelte to achieve performance benefits</p><p><p>Although been there for some time, Svelte doesn't seem to get enough use within our customers, and we are still suggest trying it,</p></p>",
            "isNew": false
        },
        {
            "name": "RabbitMQ",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p>RabbitMQ is lightweight and easy to deploy on premises and in the cloud. It supports multiple messaging protocols. RabbitMQ can be deployed in distributed and federated configurations to meet high-scale, high-availability requirements</p><p><p>A solid a long time queue messaging system. \nIt has been around for a long time, and has multiple queue features.\nGUI is very intuitive to use</p></p>",
            "isNew": false
        },
        {
            "name": "terratest",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>Terratest is a Go library that makes it easier to write automated tests for your infrastructure code. It provides a variety of helper functions and patterns for common infrastructure testing tasks\nhttps://github.com/gruntwork-io/terratest</p><p><p>Terratest is a Go library that makes it easier to write automated tests for your infrastructure code. It provides a variety of helper functions and patterns for common infrastructure testing tasks.\n<a href=\"https://github.com/gruntwork-io/terratest\">https://github.com/gruntwork-io/terratest</a></p></p>",
            "isNew": true
        },
        {
            "name": "Serverless Architecture",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>Serverless computing is a cloud computing execution model in which the cloud provider dynamically manages the allocation of machine resources. Serverless is a form of utility computing that helps provide complex infrastructure and security requirements as a part of managed services these services are managed by the provider hence the name serverless { less management of servers }. Serverless should not be confused with the serverless framework …</p>\n<p>Serverless framework <a href=\"https://serverless.com/\">Serverless.com</a> is a toolkit for deploying and operating serverless architectures, serverless utilizes the different cloud provider’s functions and API-gw API’s to expose backend services.</p>\n<p>Highlights:</p>\n<ul>\n<li>Integrates with main cloud providers - AWS, GCP, Azure Has Kubeless plugin</li>\n<li>Yaml definition of both API gateway and lambdas</li>\n<li>Utility to test functions locally using a local docker daemon</li>\n</ul><p><p>We should put it on “Keep”, as many customers work with this Successful architecture trend, which provides cost-effective architecture from both technical and business levels.</p></p>",
            "isNew": false
        },
        {
            "name": "Multiple Ingress Technique",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p><strong>Kubernetes</strong> dominance and powerful abstraction are making everyday infrastructure operations simpler, many <a href=\"https://docs.google.com/spreadsheets/d/16bxRgpO1H_Bn-5xVZ1WrR_I-0A-GOI6egmhvqqLMOmg/edit#gid%3D1612037324\">ingress-controllers</a> are extremely efficient with automating their configurations in perfect alignment with Kubernetes’ hard-working standardization. Molding these new technologies with old practices and current requirements might be tricky.</p>\n<p><strong>Multi-ingress</strong> is a technique that allows you to create segregated network gateways and can be combined with smart technologies to create your own policy-based network routing.</p>\n<p><strong>Istio</strong> has Gateway objects, and <strong>nginx-ingress-controller</strong> adheres to class-names. Using these methods, ingress object (or virtual services) are segregated and can be used in different network architecture like internal/external and compliancy confined networks.</p><p><p>This is the method to manage multi-path calls.</p></p>",
            "isNew": false
        },
        {
            "name": "Hilt - Android Dependency Injection copy copy",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>Hilt provides a standard way to incorporate Dagger dependency injection into an Android application.</p>\n<p>The goals of Hilt are:</p>\n<p>- To simplify Dagger-related infrastructure for Android apps.\n- To create a standard set of components and scopes to ease setup, readability/understanding, and code sharing between apps.\n- To provide an easy way to provide different bindings to various build types (e.g. testing, debug, or release).</p>\n<p>Hilt works by code generating your Dagger setup code for you. This takes away most of the boilerplate of using Dagger and really just leaves the aspects of defining how to create objects and where to inject them. Hilt will generate the Dagger components and the code to automatically inject your Android classes (like activities and fragments) for you.</p>\n<p>Hilt generates a set of standard Android Dagger components based off of your transitive classpath. This requires marking your Dagger modules with Hilt annotations to tell Hilt which component they should go into. Getting objects in your Android framework classes is done by using another Hilt annotation which will generate the Dagger injection code into a base class that you will extend</p><p><ul>\n<li>Hilt is a new player in the neighbourhood, it is still in alpha rather that Google mention that they integrate Hilt in their projects include Youtube app.&nbsp;</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "RUST",
            "quadrant": "Backend",
            "ring": "Try",
            "description": "<p><strong>Performance</strong>\nRust is blazingly fast and memory-efficient: with no runtime or garbage collector, it can power performance-critical services, run on embedded devices, and easily integrate with other languages.</p>\n<p><strong>Reliability</strong>\nRust’s rich type system and ownership model guarantee memory-safety and thread-safety — and enable you to eliminate many classes of bugs at compile-time.</p>\n<p><strong>Productivity</strong>\nRust has great documentation, a friendly compiler with useful error messages, and top-notch tooling — an integrated package manager and build tool, smart multi-editor support with auto-completion and type inspections, an auto-formatter, and more.</p><p><p>Rust can be a great choice when you are developing an application where performance and safety are crucial. It's good for web, backend, embedded, and system. </p></p>",
            "isNew": false
        },
        {
            "name": "ML Engineering",
            "quadrant": "Backend",
            "ring": "Start",
            "description": "<p>ML Engineers are software engineers that specialize in ML area. They bring into teams and projects the engineering expertise, and allow models developed by Data Scientist to reach production in a safe and iterative ways. They build the lifecycle of application development, starting from data engineering, API integration, application development, through CI-CD, ML pipeline all the way through monitoring and maintenance. Their understanding of the special needs and processes of ML allows them to produce effective ML applications. </p><p><p>We recommend start combining ML engineers in DataScience teams, in order to bring their engineering expertise, which contribute to model using in production applications.</p></p>",
            "isNew": false
        },
        {
            "name": "BigQuery",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p>Google BigQuery is considered as a Data Warehouse as a Service.\nUnlike traditional Data Warehouse that was based on RDBMS, Google BigQuery is based on large read-only datasets. Originally, with no indexes.</p>\n<p>Google took advantage of Dremel, its big data solution, and implemented it as a service. Originally, the aim was to provide big data analytics as a service that provides very high performance by leveraging the Google cloud.\nToday, Google brand it more as a Data Warehouse as a service that can replace Data Warehouses that were managed on-premise.</p>\n<p>The big benefit of BigQuery over RDBMS is that you do not need to know the underlying architecture or use a DBA in order to use it. Just upload your data and start using it. But the main attraction of BigQuery is that it is a Big Data solution on the cloud. That means that you can scale your data without the need to worry about performance.</p><p><p>Many companies have already adopted this DB as its Data Warehousing solution and we suggest to keep it this way.</p></p>",
            "isNew": false
        },
        {
            "name": "Gravity",
            "quadrant": "DevOps",
            "ring": "Stop",
            "description": "<p>Gravity is a toolkit for creating (and using)  self contain “image” that enables installation and management of application on Kubernetes clusters.\nUsing a (YAML based) cluster descriptor, Gravity can run pre-flight tests on your nodes and enable you to add and manage all your cluster resources.\nGravity will run on any cloud but its main use case is on-prem infrastructure. It can be used for creating appliances that can be used on air-gaped networks.</p><p><p>Gravity's main advantage is the easy way to package all cluster content (including all relevant docker images) into one installation package that enables the installation of both control plan and data plan in an air-gapped environment.</p></p>",
            "isNew": false
        },
        {
            "name": "Pandas",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p>Pandas is a python software library for analysis and manipulation of data. It provides a plethora of mathematical and analytical tools around data. Today, it is one of the most popular data manipulation libraries in the world. It goes hand-in-hand with data science, AI and machine learning fields.</p>\n<p>More and more companies and projects around the world are switching to Python to enjoy the benefits of this library. Along with NumPy, they are the leading software libraries in the data science world.\nGaining knowledge and experience in Pandas opens great opportunities in the current software industry.</p><p><p>Pands is still the de facto standard for Data Analysis, not only in Python, but rather in the whole field of Data Analysis and Data Science.\nIn a time when data science is growing every day knowledge of this library is paramount for anyone handling data.</p></p>",
            "isNew": false
        },
        {
            "name": "Android KTX ",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p><strong>A set of Kotlin extensions for Android app development.</strong></p>\n<p>The goal of Android KTX is to make Android development with Kotlin more concise, pleasant, and idiomatic by leveraging the features of the language such as extension functions/properties, lambdas, named parameters, and parameter defaults. It is an explicit goal of this project to not add any new features to the existing Android APIs.</p>\n<p>Android KTX saves a lot of boilerplate code, making development speed and productivity increase.</p>\n<p><strong>Android KTX is in Preview - Bugs and Stability issues may occur</strong></p><p><ul>\n<li>Extension functions</li>\n<li>Extension properties</li>\n<li>Lambdas</li>\n<li>Named parameters</li>\n<li>Parameter default values</li>\n<li>Coroutines</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "FastLane",
            "quadrant": "Mobile",
            "ring": "Try",
            "description": "<p>Fastlane is an open source platform aimed at simplifying Android and iOS deployment.\nFastlane lets you automate every aspect of your development and release workflow.</p>\n<ul>\n<li>Automatically generate localized screenshots for the app store</li>\n<li>Easily distribute beta builds to testers</li>\n<li>Publish a new release to the app store in seconds</li>\n<li>Code signing management</li>\n<li>Release versions from any computer</li>\n</ul><p><ul>\n<li>AppCenter used to be the main player when it comes to CI/CD.</li>\n<li>AppCenter is using Fastlane engine.</li>\n<li>Started supporting flutter and react-native.</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Open Stack",
            "quadrant": "DevOps",
            "ring": "Stop",
            "description": "<p><strong>OpenStack</strong> is a free and open-source software platform for cloud computing, mostly deployed as infrastructure-as-a-service (IaaS), whereby virtual servers and other resources are made available to customers. The software platform consists of interrelated components that control diverse, multi-vendor hardware pools of processing, storage, and networking resources throughout a data center. Users either manage it through a web-based dashboard, through command-line tools or through RESTful web services.</p>\n<p>On top of OpenStack core services, that provide the basic cloud functionality of managing to compute, storage and networking resources. OpenStack project contains a set of services (sometimes named ‘The big tenet’) that provide a lot of complementary functionality such as shared storage, databases, monitoring, orchestrating and much more.</p><p><p>The domination of docker and Kubernetes as the standard way to run your workload, Along with better Kubernetes on-premise solutions. Made a full-featured private cloud unnecessary for most organizations. That made OpenStack a niche technology for those who really need cloud services in the (private) data center.</p></p>",
            "isNew": false
        },
        {
            "name": "Ansible",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>Ansible is an open-source software provisioning, configuration management, and application-deployment tool enabling infrastructure as code.</p><p><p>Ansible is still the leading configuration tool when it is needed. </p></p>",
            "isNew": true
        },
        {
            "name": "Functional Programming",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p><strong>Functional Programming</strong> is a programming paradigm that becomes more popular in recent years, it has many benefits for even-driven architectures and other state/contexts handling/processing problems.</p><p><p>Functional Programming use side-effect-free functions as a basic building block in the language. This enables lots of things and makes a lot of things more difficult.&nbsp;The main plus is its inherent parallelism, especially as we are now moving away from \"increased cores\" (more MHz) and towards more and \"more cores\".&nbsp;Lots of modern languages have elements from functional programming languages.&nbsp;</p></p>",
            "isNew": false
        },
        {
            "name": "Functional Programming",
            "quadrant": "Frontend",
            "ring": "Keep",
            "description": "<p><strong>Functional Programming</strong> is a programming paradigm that becomes more popular in recent years, it has many benefits for even-driven architectures and other state/contexts handling/processing problems.</p><p><p>Functional Programming use side-effect-free functions as a basic building block in the language. This enables lots of things and makes a lot of things more difficult.&nbsp;The main plus is its inherent parallelism, especially as we are now moving away from \"increased cores\" (more MHz) and towards more and \"more cores\".&nbsp;Lots of modern languages have elements from functional programming languages.&nbsp;</p></p>",
            "isNew": false
        },
        {
            "name": "Polars",
            "quadrant": "Backend",
            "ring": "Try",
            "description": "<p>Polars is a very fast DataFrame API which is written in Rust and has a Python API. It is an alternative to the famous Pandas dataframe, surpassing it in speed and lower memory management. The fact it is based on Apache Arrow and Rust, gives it tremendous speed and lower memory footprint.</p><p><p>Polars is a great solution for handling mid-range size tabular data. It bypasses one of the major flaws of Python - its lower performance. By using Polars you gain the best of all worlds - easy coding with Python and blazing fast implementation of Rust and Apache Arrow.</p></p>",
            "isNew": true
        },
        {
            "name": "Apache Spark",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p>Apache Spark is an open-source distributed general-purpose cluster-computing framework. Today it is the de facto standard tool for batch processing, although it also supports stream processing by way of micro batches.\nCustomers such as Amazon, eBay, and Yahoo are only a few of many who run Spark clusters with thousands of nodes processing many terabytes of data. A DAG scheduler, a query optimizer, and a physical execution engine provide low execution times.</p>\n<p>Under the hood,  its API is provided for the Java, Scala and Python languages while the most extensive API is written in Scala followed by Python. One can also write the pipelines in a SQL derivative called SparkSQL.\nRiding on the Hadoop ecosystem it has a huge ecosystem for integration and collaboration</p><p><p>Spark 3.0 will move to Python3 and Scala version is upgraded to version 2.12. A major performance improvement for SQL analytics is provided by Dynamic Partition Pruning. Enhanced Support for Deep Learning is integrated with features such as support for different GPUs&nbsp;and special Vectorized UDFs. A better Kubernetes Integration now allows dynamic scale up and down.\nBottom line, many new incredible features for an already incredible tool.</p></p>",
            "isNew": false
        },
        {
            "name": "Redux ",
            "quadrant": "Mobile",
            "ring": "Start",
            "description": "<p>State management is one of the most important topics in Flutter.\nIn Flutter, there are already a few state management techniques that help us to develop our app.</p>\n<p>The most popular State Managements patterns are:</p>\n<ul>\n<li>setState</li>\n<li>BLoC - Business Logic Component</li>\n<li>StreamBuilder</li>\n</ul>\n<p>Each pattern has its benefits and cons.</p>\n<p>As Flutter app based on Widgets which are structured in the app widget tree, we always have to consider where each widget is located in the tree (The context) and whether it should be StateFul or Stateless (The building blocks of flutter). In flutter, UI = f(State) and therefore, when we managing the app state we actually managing the UI, therefore before starting developing an app, we should select the right StateManagement pattern.</p>\n<h2 id=\"thereforeweshouldstartusingstatemanagementinflutterapps\">Therefore, we should start using StateManagement in Flutter apps.</h2>\n<p>GetX is an extra-light and powerful solution for Flutter. It combines high performance state management, intelligent dependency injection, and route management in a quick and practical way.</p><p><ul>\n<li>Redux is being used for many years</li>\n<li>Proven to be useful in scaleable Applications</li>\n<li>Easy UnitTests and Code tracing</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Druid",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>Apache Druid is a real-time analytics database designed for fast analytics queries on large data sets. it &nbsp;combines ideas from OLAP/analytic databases, timeseries databases, and search systems to create a unified system for operational analytics.\nAmong their customers you can find companies such as Airbnb, ebay, Hulu and many more.</p>\n<p>It has a Cloud-native architecture making it easy to deploy on K8s. Each functionality of this system can be separated into its own distributed service which provides for a scalable distributed system.</p>\n<p>It supports Realtime or batch ingestion at very high rates either by its own methods or via external sources such as Kafka or Hadoop.\nQuery latency is very low and is most suited for aggregation and reporting queries</p><p><p>In the analytics DB category there are now a few options to choose from. This makes this category very interesting to watch as the industry has seen the benefits of solutions such as Druid.\nApache Druid has emerged as the leader in this section as it is the most mature, stable, pluggable, and all-around easy-to-use solution.\nMany companies have already embraced Druid as their solution and we recommend keeping it that way.</p></p>",
            "isNew": false
        },
        {
            "name": "Actor Model",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p>In the world of different programming paradigms (object-oriented, functional), the actor model does not get enough attention.\nThe actor model is a conceptual model to deal with concurrent computation. It defines some general rules for how the system’s components should behave and interact with each other. The most famous language that uses this model is probably Erlang.</p>\n<p>In cases that multithreading is needed, the actor model should be the default and standard solution</p><p><p>If you are building an application that handles tasks asynchronously, using the Actor Model can help simplify your code. It will allow you to scale your application and process tasks in parallel.</p></p>",
            "isNew": false
        },
        {
            "name": "Kubernetes",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>Kubernetes is an open-source container orchestration system for automating software deployment, scaling, and management. Google originally designed Kubernetes, but the Cloud Native Computing Foundation now maintains the project.</p><p><p>Kubernetes is still here, and nothing is currently seen as a candidate for replacement on the horizon.</p></p>",
            "isNew": true
        },
        {
            "name": "Android SMS Retriever ",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>With the SMS Retriever API, you can perform SMS-based user verification in your Android app automatically, without requiring the user to manually type verification codes, and without requiring any extra app permissions.</p><p><ul>\n<li>You don't need force user manually type verification code. This is the only why on new Android devices to get the code.</li>\n<li>Easy installation.</li>\n<li>Reliable.</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Room (SQLite Wrapper) ",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "undefined<p><ul>\n<li>interfaces to SQL queries</li>\n<li>There is no multi-threading issue in case of Room.</li>\n<li>You have to establish the relationship if you are using Room</li>\n<li>Room can be encrypted too</li>\n<li>You can use LiveData with Room in a few steps</li>\n<li>The library takes up only 50KB</li>\n<li>Room also provides easy migration mechanism which is fully tested.</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Background APIs",
            "quadrant": "Frontend",
            "ring": "Try",
            "description": "<p>Background sync is a new web API that lets you defer actions until the user has stable connectivity. This is useful for ensuring that whatever the user wants to send, is actually sent.</p>\n<p>We might want to promote this API\nSince it is another great way to support offline and improve the UX.\nThe API is pretty simple and gives great value.</p><p><p>As PWA is evolving, background APIs such as background fetch, background sync, and periodic background sync may enable our web application to live longer and perform actions with less dependency on the network.</p>\n<p>If you have a long running downloads or uploads, If you want to have HTTP request performed whenever your network is connected, without having to write code that checks it, If you need to update your app content periodically, these are APIs you should try. </p>\n<p>Background fetch still doesn't accept requests with body, and still under experimental flag.   </p>\n<p>It is supported now on chromium based browsers (Edge &amp; Chrome) however it will probably soon be supported in Firefox as well.</p></p>",
            "isNew": false
        },
        {
            "name": "Node.js",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>As an asynchronous event-driven JavaScript runtime, Node.js is designed to build scalable network applications.\nThis is in contrast to today’s more common concurrency model, in which OS threads are employed. Thread-based networking is relatively inefficient and very difficult to use. Furthermore, users of Node.js are free from worries of dead-locking the process, since there are no locks. Almost no function in Node.js directly performs I/O, so the process never blocks. Because nothing blocks, scalable systems are very reasonable to develop in Node.js.</p><p><p>Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient.</p></p>",
            "isNew": false
        },
        {
            "name": "Node.js",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p>As an asynchronous event-driven JavaScript runtime, Node.js is designed to build scalable network applications.\nThis is in contrast to today’s more common concurrency model, in which OS threads are employed. Thread-based networking is relatively inefficient and very difficult to use. Furthermore, users of Node.js are free from worries of dead-locking the process, since there are no locks. Almost no function in Node.js directly performs I/O, so the process never blocks. Because nothing blocks, scalable systems are very reasonable to develop in Node.js.</p><p><p>Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient.</p></p>",
            "isNew": false
        },
        {
            "name": "Node.js",
            "quadrant": "Frontend",
            "ring": "Keep",
            "description": "<p>As an asynchronous event-driven JavaScript runtime, Node.js is designed to build scalable network applications.\nThis is in contrast to today’s more common concurrency model, in which OS threads are employed. Thread-based networking is relatively inefficient and very difficult to use. Furthermore, users of Node.js are free from worries of dead-locking the process, since there are no locks. Almost no function in Node.js directly performs I/O, so the process never blocks. Because nothing blocks, scalable systems are very reasonable to develop in Node.js.</p><p><p>Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient.</p></p>",
            "isNew": false
        },
        {
            "name": "Feast",
            "quadrant": "Backend",
            "ring": "Try",
            "description": "<p>Feast is an open source Feature Store which stores, transforms, and serves features for ML models training and prediction. It allows ingestion from both streaming and batch sources and serves features for different entities, both as a batch for training and online for prediction.</p><p><p>Having a feature store simplifies the string and serving of data for models. It is the models' single source of truth. Its ability to serve both massive data in batch and pin-point data in online fast API solves problems in the area of data consistency. Being open-source, allows companies to stay cloud native. </p></p>",
            "isNew": true
        },
        {
            "name": "Vert.x",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p><strong>Vert.x</strong> is a toolkit to build distributed reactive systems on the top of the Java Virtual Machine using an asynchronous and non-blocking development model. As a toolkit, Vert.x can be used in many contexts: in a standalone application or embedded in a Spring application. Vert.x and its ecosystem are just jar files used like any other library: just place them in your classpath and you are done. However, as Vert.x is a toolkit, it does not provide an all-in-one solution but provides the building blocks to build your own solution.</p><p><p>We highly recommend this micro-framework as it is the fastest framework around with a very low footprint.</p></p>",
            "isNew": false
        },
        {
            "name": "tailwindcss",
            "quadrant": "Frontend",
            "ring": "Keep",
            "description": "<p><p>tailwindCss has proven maturity and it becomes widely adopted n small project. It has tis own fans and objections but it seems that it is here to stay, so we recommend keeping it. </p></p>",
            "isNew": true
        },
        {
            "name": "Kotlin ",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p><strong>Kotlin</strong> is a statically typed programming language that runs on JVM (Java Virtual Machine). Development lead Andrey Breslav has said that Kotlin is designed to be an industrial-strength object-oriented language, and a \"better language\" than Java, but still be fully interoperable with Java code, allowing companies to make a gradual migration from Java to Kotlin.</p>\n<p>At Google I/O 2017, Google announced first-class support for Kotlin on Android. As of Android Studio 3.0 (October 2017) Kotlin is a fully supported programming language by Google on the Android Operating System, and is directly included in the Android Studio 3.0 IDE package as an alternative to the standard Java compiler.</p>\n<p>Kotlin is now an official language on Android. It's expressive, concise, and powerful. Best of all, it's interoperable with our existing Android languages and runtime.</p>\n<p>Besides the stylistic advantages over Java, Kotlin has new and exciting features that are offering performance and stability improvements over Java code, such as Kotlin coroutines, Rx-like collection iteration modifiers, null-safety, operator overloading, etc.</p><p><ul>\n<li>De facto and de jure the primary programming language for native Android</li>\n<li>Fully supported by frameworks and libraries (jetpack, DI, networking, etc)</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "RxJava3 ",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p><strong>Reactive Programming</strong>&nbsp;is a paradigm that changes the direction of the flow. Instead of creating threads and blocking for communications, we create pipelines where data is pass through and each layer can react to the data received. The indirection changes the code flow from blocked to async.</p>\n<p>Over time the reactive extensions have become a standard for adding higher level functionality on the stream of data while being agnostic to the data itself. The extensions are based on the observable pattern and allow for cancellation of the data process in stream</p><p><ul>\n<li>Single dependency: Reactive-Streams</li>\n<li>Java 8+ (Android desugar friendly)</li>\n<li>Java 8 lambda-friendly API</li>\n<li>Fixed API mistakes and many limits of RxJava 2</li>\n<li>Intended to be a replacement for RxJava 2 with relatively few binary incompatible changes</li>\n<li>Non-opinionated about the source of concurrency (threads, pools, event loops, fibers, actors, etc.)</li>\n<li>Async or synchronous execution</li>\n<li>Virtual time and schedulers for parameterized concurrency</li>\n<li>test and diagnostic support via test schedulers, test consumers and plugin hooks</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Apache Flink",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p>The core of <strong>Apache Flink</strong> is a distributed streaming dataflow engine written in Java and Scala. Flink executes arbitrary dataflow programs in a data-parallel and pipelined manner. Flink’s pipelined runtime system enables the execution of bulk/batch and stream processing programs. Furthermore, Flink’s runtime supports the execution of iterative algorithms natively.\nFlink provides a high-throughput, low-latency streaming engine as well as support for event-time processing and state management. Flink applications are fault-tolerant in the event of machine failure and support exactly-once semantics</p><p><p>Streaming systems have become part of almost every project. For batch, a processing spark is a great tool. But as more system moves to streaming Flink brings a better SDK model for dealing with an event to event processing.</p></p>",
            "isNew": false
        },
        {
            "name": "Prettier",
            "quadrant": "Frontend",
            "ring": "Keep",
            "description": "<p>Prettier is an opinionated code formatter. It enforces a consistent style by parsing your code and re-printing it with its own rules.</p>\n<p>Having a code “style guide” is very valuable for a project, it minimizes friction between developers that can arise from different coding styles and it helps to focus on the code instead of focusing on formatting.</p>\n<p>Maintaining a codebase that is readable for everyone is not an easy task without automating the formatting process.\nPrettier is an automatic code formatter that comes preconfigured with “best practice” and standard rules that can be overridden via a configuration file.</p><p><p>In any project! developed by the people that built React and react-Native and used by a lot of major projects - Prettier is a must have in any project.</p></p>",
            "isNew": false
        },
        {
            "name": "BLoC ",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>When we adopted the approach of Chaos Engineering it was a bit unclear on the nature of Experimentation, nowadays  Chaos Engineering has become the discipline of designing predictable and cost-affective distributed systems and in the long run help shorten prediction of failures and time to market.</p><p><ul>\n<li>Helps make code modular (split different functionality up into smaller blocs)</li>\n<li>Widely used by the Flutter community.</li>\n<li>STREAMS or REACTIVE approach.</li>\n<li>Easily learnt and implemented in code.</li>\n<li>Easy to test</li>\n<li>BLoCs are reusable between Flutter and Dart Web Apps</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "dex",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>Dex is an identity service that uses OpenID Connect to drive authentication for other apps.\nDex acts as a portal to other identity providers through “connectors.” This lets dex defer authentication to LDAP servers, SAML providers, or established identity providers like GitHub, Google, and Active Directory. Clients write their authentication logic once to talk to dex, then dex handles the protocols for a given backend.</p><p><p>When you want to add user management to Kubernetes Dex can be the tool\nwith the integration to external authentication providers. like Active Directory…</p></p>",
            "isNew": false
        },
        {
            "name": "Instant Apps ",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>With <strong>Google Play Instant</strong>, people can use an app or game without installing it first. Increase engagement with your Android app or gain more installs by surfacing your instant app across the Play Store and Google Play Games app.</p>\n<p>Android’s new app publishing format, the Android App Bundle, makes it easier than ever to offer a Google Play Instant experience. Starting from the Android Studio 3.3 beta release, you can build and publish one app bundle artifact to Google Play containing both instant and dynamic feature modules. Build instant games easily with Cocos and Unity plug-ins.</p>\n<h1 id=\"androidframeworksupport\">Android Framework Support</h1>\n<p>Google Play Instant enables native apps and games to launch on devices running Android 5.0 (API level 21) or higher without being installed. You can build these types of experiences, called instant apps and instant games, using Android Studio. By allowing users to run an instant app or instant game, known as providing an instant experience, you improve your app or game's discovery, which helps drive more active users or installations. More details <a href=\"https://developer.android.com/topic/google-play-instant/overview\">here</a></p><p><ul>\n<li>More and more app vendors offer <a href=\"https://developer.android.com/stories/instant-apps\">instant apps </a>and cause competition to follow the trend.&nbsp; </li>\n<li>Marketing trends suggest instant apps.</li>\n<li>Security concerns suggest instant apps.</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Google AR ",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>ARCore is Google’s platform for building augmented reality experiences. Using different APIs, ARCore enables your phone to sense its environment, understand the world and interact with information. Some of the APIs are available across Android and iOS to enable shared AR experiences.</p>\n<p>ARCore uses three key capabilities to integrate virtual content with the real world as seen through your phone's camera:</p>\n<ul>\n<li><strong>Motion tracking</strong> allows the phone to understand and track its position relative to the world.</li>\n<li><strong>Environmental</strong> understanding allows the phone to detect the size and location of all type of surfaces: horizontal, vertical and angled surfaces like the ground, a coffee table or walls.</li>\n<li><strong>Light estimation</strong> allows the phone to estimate the environment's current lighting conditions.</li>\n</ul><p><ul>\n<li>Need to install Google AR services.</li>\n<li>Not every device supports ARCore.</li>\n<li>The technology is supported by Google themselves.</li>\n<li>AR enhances the user experience.</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Vcluster",
            "quadrant": "DevOps",
            "ring": "Try",
            "description": "<p>Create fully functional virtual Kubernetes clusters - Each vcluster runs inside a namespace of the underlying k8s cluster.</p><p><p>It's cheaper than creating separate full-blown clusters and it offers better multi-tenancy and isolation than regular namespaces.</p></p>",
            "isNew": true
        },
        {
            "name": "Atlantis",
            "quadrant": "DevOps",
            "ring": "Try",
            "description": "<p>Atlantis is an application for automating Terraform via pull requests. It is deployed as a standalone application into your infrastructure. No third-party has access to your credentials.\nAtlantis listens for GitHub, GitLab or Bitbucket webhooks about Terraform pull requests. It then runs terraform plan and comments with the output back on the pull request.\nWhen you want to apply, comment atlantis apply on the pull request and Atlantis will run terraform apply and comment back with the output.</p><p><p>This tool gives support for implementing pull request mechanism for Terraform changes. Which is a very good practice.</p></p>",
            "isNew": true
        },
        {
            "name": "Service Mesh",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>a service mesh is a dedicated infrastructure layer for facilitating service-to-service communications between services or microservices, using a proxy (often as a sidecar). Examples of popular service meshes are Linkerd, a CNCF project, and Istio</p><p><p>Many of the features above are used to achieve all the above techniques using the operator pattern which is accompanied by a controller utilizing annotations and CRDs (Custome Resource Definitions) to manage service meshes @scale such as the following market leaders Netflix, Twitter, Amazon which utilize service meshes to enable smooth day1 and day2 operations.</p></p>",
            "isNew": true
        },
        {
            "name": "Nrwl Nx",
            "quadrant": "Frontend",
            "ring": "Keep",
            "description": "<p><p>Nrwl Nx makes development in monorepo much easier and much more powerful.  </p>\n<p>It is now being used  by many of our customers and its maturity is well seen, therefore it is here to keep.</p></p>",
            "isNew": false
        },
        {
            "name": "Ant Design",
            "quadrant": "Frontend",
            "ring": "Keep",
            "description": "<p>A design system for enterprise-level products. Create an efficient and enjoyable work experience.</p><p><p>Very mature and widely used UI library for react, we recommend keeping in case your designers love it.</p></p>",
            "isNew": true
        },
        {
            "name": "Typescript",
            "quadrant": "Frontend",
            "ring": "Keep",
            "description": "<p><strong>Typescript</strong> as a language can bring enhancements to javascript programming, and while it has been used widely on the client side, it can also be used on the server. \nTypescript doesn't necessarily mean that you may lose your dynamic language features, it  may just add a way for you to find more errors on coding time, rather than on  runtime. You may add interfaces to your deta model, using them and have your objects typed and avoid annoying errors such as typos. \nOne downside it may have is the need to compile the code every time before running it, which may reflect your build time.</p><p><p>Typescript is now in use when developing an application by most framework and libraries, even ones that we used to develop in javascript.  </p></p>",
            "isNew": false
        },
        {
            "name": "Jenkins",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>The leading open source automation server, Jenkins provides hundreds of plugins to support building, deploying and automating any project</p><p><p>Jenkins as a CI/CD tool is becoming irrelevant, while we have repo-oriented tools (like Gitlab ci and more) that can do almost everything Jenkins can. \nIn addition, the rise of GitOps is a newly popular approach that is taking out tools like Jenkins.\nIt is still in \"keep\" because it is still very popular amongst DevOps, but it looks like it's last year here. </p></p>",
            "isNew": true
        },
        {
            "name": "DBT",
            "quadrant": "Backend",
            "ring": "Start",
            "description": "<p><a href=\"https://www.getdbt.com/\">DBT</a> enables data analysts and engineers to transform their data using the same practices that software engineers use to build applications.</p><p><p>DBT creates a new standard for transformations of data in the data warehouse. DBT is a generic library with adapters per data warehouse and has become one of the most popular tools.</p></p>",
            "isNew": true
        },
        {
            "name": "Reloader",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>Reloader can watch changes in ConfigMap and Secret and do rolling upgrades on Pods with their associated DeploymentConfigs, Deployments, Daemonsets Statefulsets and Rollouts.</p><p><p>A robust tool to reload pods, if a relevant configmap or secret is changed.</p></p>",
            "isNew": true
        },
        {
            "name": "Android 11 ",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p><strong>Android 11</strong> is a new version of the famous Google Android platform, which brings a plethora of new features to the customers. The key focus of this release is on privacy and security of the Android platform. Additionally, new platform features in Android 11 include enhancements to support foldable smartphones (including support for hinge angle sensors), identification of standalone 5G NR networks, Project Mainline (servicing of system components via Google Play Store), project Treble, and High Efficiency Image File Format (HEIF).</p><p><ul>\n<li>The rise of security and privacy concerns on the market</li>\n<li>The support for 5G and foldable devices</li>\n<li>Application behaviour changes due to new security/privacy constraints</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Kubernetes Operator Pattern",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>The Operator Pattern\nA Kubernetes Operator is simply a domain specific controller that can manage, configure and automate the lifecycle of stateful applications. Managing stateful applications, such as databases, caches and monitoring systems running on Kubernetes is notoriously difficult. By leveraging the power of Kubernetes API we can now build self managing, self driving infrastructure by encoding operational knowledge and best practices directly into code. For instance, if a MySQL instance dies, we can use an Operator to react and take the appropriate action to bring the system back online.</p><p><p>A Way to keep code more secure and without storing passwords in git, This operator gives access to the k8s cluster to a secure backend (i.e secret-manager, vault, ext) and creates a k8s secret for the workloads.</p></p>",
            "isNew": false
        },
        {
            "name": "Module Federation",
            "quadrant": "Frontend",
            "ring": "Try",
            "description": "<p>Module federation introduced by Webpack 5 allows a JavaScript application to dynamically run code from another bundle/build, on both client and server.</p><p><p>Module federation, introduced in WebPack 5 is another approach for micro-frontends, that enables as to share code between applications, while continue developing them separately.</p>\n<p>Why research? </p>\n<p>It is not yet determined what are the advantages that MF has to comparing with other approaches, It may remove the need of using iframes, however it may bundles an app inside another.  </p></p>",
            "isNew": false
        },
        {
            "name": "Qwik",
            "quadrant": "Frontend",
            "ring": "Try",
            "description": "<p>Qwik is a new kind of web framework that can deliver instantly load web applications at any size or complexity. Your sites and apps can boot with about 1kb of JS (regardless of application complexity), and achieve consistent performance at scale.</p>\n<p>https://qwik.builder.io/docs/overview</p><p><p>Qwik is rather new, not yet mature for stat, but it looks promising.\nThis is the only framework tat actually target the time-to-interactive issue that both SPA and SSR (hydration) have by a completely new approach. </p>\n<p>Its maintainer has written both angular.js and Angular and there is a reason to believe that this framework will catch. </p></p>",
            "isNew": false
        },
        {
            "name": "Istio",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>Istio’s diverse feature set lets you successfully, and efficiently, run a distributed microservice architecture, and provides a uniform way to secure, connect, and monitor microservices - implementing all the technics and methodologies mentioned above (which used to be part of the Backend).</p><p><p>Istio lets you connect, secure, control, and observe services. At a high level, Istio helps reduce the complexity of these deployments and eases the strain on your development teams. It is a completely open-source service mesh that layers transparently onto existing distributed applications.</p></p>",
            "isNew": false
        },
        {
            "name": "Dio ",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>Flutter is the new <strong>Google’s</strong> framework for creating high quality apps both for Android and iOS with a single codebase.\nThe framework is based on <a href=\"https://trello.com/c/w5WPLf8u/268-dart\">Dart programming language</a> which eventually generates an Android’s APK and iOS IPA packages.</p>\n<p>Flutter first introduced in May 2017, and currently still in beta but so far, its already has a large community around the world.</p>\n<p>Compared to other cross platform frameworks such as ReactNative which usually relays on the platform native UI widgets, Flutter internally renders the UI widgets and draw them directly on the screen canvas. This makes flutter much faster and more reliable when it comes to backwards support.\nAs said above, Flutter has large community already, it has highly rich documentation and has Google’s Support.\nFor more details checkout about Flutter in their <a href=\"https://flutter.io/\">home page</a></p><p><ul>\n<li>Minimal dependencies use.</li>\n<li>Handle cache automatically with expiry date using (dio_cache).</li>\n<li>Very similar to Axios as many react developers are familiar with.</li>\n<li>100 pub points</li>\n<li>Supports web</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Terraform",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p><strong>Terraform</strong> is a provisioning tool (as opposed to a Configuration Management tool), working with Immutable Infrastructures, using a declarative language, is masterless and agentless</p>\n<p>Being a popular tool, from a well established vendor, HashiCorp we should certainly keep offering Terraform as an alternative to our customers</p>\n<p>Terraform has recently announced the support of Kubernetes, going to show that HashiCorp is on its feet and adapting to changes</p><p><p>The king of provisioning tools is still here. Robust. Popular. Evolving.</p></p>",
            "isNew": false
        },
        {
            "name": "Apache Druid",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p>Apache Druid is a real-time analytics database designed for fast analytics queries on large data sets. it &nbsp;combines ideas from OLAP/analytic databases, timeseries databases, and search systems to create a unified system for operational analytics.\nAmong their customers you can find companies such as Airbnb, ebay, Hulu and many more.</p>\n<p>It has a Cloud-native architecture making it easy to deploy on K8s. Each functionality of this system can be separated into its own distributed service which provides for a scalable distributed system.</p>\n<p>It supports Realtime or batch ingestion at very high rates either by its own methods or via external sources such as Kafka or Hadoop.\nQuery latency is very low and is most suited for aggregation and reporting queries</p><p><p>In the analytics DB category there are now a few options to choose from. This makes this category very interesting to watch as the industry has seen the benefits of solutions such as Druid.\nApache Druid has emerged as the leader in this section as it is the most mature, stable, plugable and all round easy to use solution.\nMany companies have already embraces Druid as their solution and we recommend to keep it that way.</p></p>",
            "isNew": false
        },
        {
            "name": "Apache Druid",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>Apache Druid is a real-time analytics database designed for fast analytics queries on large data sets. it &nbsp;combines ideas from OLAP/analytic databases, timeseries databases, and search systems to create a unified system for operational analytics.\nAmong their customers you can find companies such as Airbnb, ebay, Hulu and many more.</p>\n<p>It has a Cloud-native architecture making it easy to deploy on K8s. Each functionality of this system can be separated into its own distributed service which provides for a scalable distributed system.</p>\n<p>It supports Realtime or batch ingestion at very high rates either by its own methods or via external sources such as Kafka or Hadoop.\nQuery latency is very low and is most suited for aggregation and reporting queries</p><p><p>In the analytics DB category there are now a few options to choose from. This makes this category very interesting to watch as the industry has seen the benefits of solutions such as Druid.\nApache Druid has emerged as the leader in this section as it is the most mature, stable, plugable and all round easy to use solution.\nMany companies have already embraces Druid as their solution and we recommend to keep it that way.</p></p>",
            "isNew": false
        },
        {
            "name": "Firebase ",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>Firebase is a powerful platform for Mobile Android, iOS and WebApps.</p>\n<p>Firebase gives you functionality like analytics, databases, messaging and crash reporting so you can move quickly and focus on your users.\nFirebase is built on Google infrastructure and scales automatically.</p>\n<p>Firebase gives you many services such as:\nanalytics, Auth, Realtime database, Cloud Messaging, Storage, Crash reporting and more.</p>\n<p>Using One Firebase Console to control the services and data is provided.\nIt is easy to use and set up by using Firebase SDK libraries.</p>\n<h2 id=\"usuallyinordertosetupmostoftheservicesthereisawiderangeofdocumentationandcodeexamples\">Usually, in order to set up most of the services, there is a wide range of documentation and code examples.</h2>\n<p>Firebase App Distribution makes distributing your apps to trusted testers painless. By getting your apps onto testers' devices quickly, you can get feedback early and often. And if you use Crashlytics in your apps, you’ll automatically get stability metrics for all your builds, so you know when you’re ready to ship.</p>\n<p>What is in firebase:</p>\n<ul>\n<li>Cloud Firestore</li>\n<li>Cloud Functions</li>\n<li>Crash Reporting</li>\n<li>App Distribution</li>\n</ul><p><ul>\n<li>Serverless Solution</li>\n<li>Easy Integration with Framework</li>\n<li>Support offline caching, authentication and much more.</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Kotlin Coroutines",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>Coroutines are a Kotlin feature that converts async callbacks for long-running tasks, such as a database or network access, into sequential code.</p>\n<h2 id=\"thekotlinteamdefinescoroutinesaslightweightthreadstheyaresortoftasksthattheactualthreadscanexecute\">The Kotlin team defines coroutines as “lightweight threads”. They are sort of tasks that the actual threads can execute.</h2>\n<p>Kotlin flow is the most newly advanced library in Reactive programming area. It is a new asynchronous stream library from JetBrains, the company behind the Kotlin language. Sharing many similarities with Rx streams, Kotlin Flow is built on top of Kotlin Coroutines.&nbsp;</p><p><ul>\n<li>Lightweight: You can run many coroutines on a single thread due to support for suspension, which doesn't block the thread where the coroutine is running. Suspending saves memory over blocking while supporting many concurrent operations.</li>\n<li>Fewer memory leaks</li>\n<li>Built-in cancellation support</li>\n<li>Jetpack integration: Many Jetpack libraries include extensions that provide full coroutines support.</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "WebRTC",
            "quadrant": "Frontend",
            "ring": "Keep",
            "description": "<p>WebRTC is mainly about peer to peer communication, with audio, video, and data.\nIt is a very powerful way of communication laying inside the browser sandbox which makes it secure.</p><p><p>We recommend using it for every task require a peer to peer communication which isn’t required to be fully recorded by the server. The server may be used for the discovery mechanism.\nIt can save you unnecessary networking and therefore money.</p></p>",
            "isNew": false
        },
        {
            "name": "MVP ",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>When we adopted the approach of Chaos Engineering it was a bit unclear on the nature of Experimentation, nowadays  Chaos Engineering has become the discipline of designing predictable and cost-affective distributed systems and in the long run help shorten prediction of failures and time to market.</p><p><ul>\n<li>Separating the presentation layer from the logic</li>\n<li>Very popular in Android</li>\n<li>Modularity</li>\n<li>Easily extensible&nbsp;</li>\n<li>Easily maintainable</li>\n<li>Easy to test</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Phaser",
            "quadrant": "Frontend",
            "ring": "Start",
            "description": "<p>Phaser is a fast, free, and fun open source HTML5 game framework that offers WebGL and Canvas rendering across desktop and mobile web browsers. Games can be compiled to iOS, Android and native apps by using 3rd party tools. You can use JavaScript or TypeScript for development.\nAlong with the fantastic open source community, Phaser is actively developed and maintained by&nbsp;<a href=\"http://www.photonstorm.com/\">Photon Storm</a>. As a result of rapid support, and a developer friendly API, Phaser is currently one of the&nbsp;<a href=\"https://github.com/collections/javascript-game-engines\">most starred</a>&nbsp;game frameworks on GitHub.\nThousands of developers from indie and multi-national digital agencies, and universities worldwide use Phaser. You can take a look at their incredible&nbsp;<a href=\"https://phaser.io/games/\">games</a>.</p><p><p>Fro javascript building games library, it appears to be one of the popular and good ones, so we recommend start working with it.</p></p>",
            "isNew": true
        },
        {
            "name": "NATS",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p>NATS is an incredibly fast open-source cloud-native messaging system written in the Go programming language. The core design principles of NATS are performance, scalability, and ease of use. NATS supports Pub/Sub, Scatter-Gather, but also Request-Reply Messaging Models.\nIt seems that there is a need in the industry for even more variety than what we have today in the messaging system’s domain. Kafka is very complex and there is a need for a simple solution that is highly scalable and lightning fast. The added value of the Request-Reply model might be interesting as this is something lacking in most other messaging systems including popular solutions such as Kafka and RabbitMQ. This might open doors to as of yet unavailable communication patterns between micros services.</p><p><p>This message broker has differentiated itself from others by its high scalability and performance abilities. As such, many more companies have adopted this solution as a viable message broker for their needs.</p></p>",
            "isNew": false
        },
        {
            "name": "Semantic-release [ node, golang, python ]",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>semantic-release automates the whole package release workflow including: determining the next version number, generating the release notes, and publishing the package.</p>\n<p>This removes the immediate connection between human emotions and version numbers, strictly following the Semantic Versioning specification and communicating the impact of changes to consumers.</p><p><p>This tool manages all the release aspects of a component - including giving an automatic release number, managing release notes etc…</p></p>",
            "isNew": true
        },
        {
            "name": "FaaS",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p>The FAAS model is based on serverless computing technologies and architectures that allow software developers to easily deploy applications in the cloud without having to manage servers.</p>\n<p>FaaS has the following characteristics:</p>\n<ul>\n<li>Infrastructure is hidden from the customer and fully managed by the Cloud Service Provider</li>\n<li>Resources are allocated as needed</li>\n<li>Customers pay only for consumption and execution</li>\n<li>Functions are triggered by events</li>\n</ul><p><p>In starting projects FaaS architecture enables very fast time to market. There is no need to create a lot of infrastructure to spin up a service. As the service throughput increases, the FassS architecture usually is less cost effective.</p></p>",
            "isNew": true
        },
        {
            "name": "kadalu.io",
            "quadrant": "DevOps",
            "ring": "Try",
            "description": "<p>GlusterFS is a scalable network filesystem suitable for data-intensive tasks such as cloud storage and media streaming. GlusterFS is free and open source software and can utilize common off-the-shelf hardware.\nKadalu Storage is a collection of Open Source projects to make GlusterFS more accessible, user friendly and Scalable.</p><p><p>A great tool that provides a stable File system with Modern ways to manage and monitor.</p></p>",
            "isNew": true
        },
        {
            "name": "Airflow 2",
            "quadrant": "Backend",
            "ring": "Start",
            "description": "<p>Airflow 2 is the second major version of the popular Airflow 1. It brings an improved API, better scheduler, full REST API and DAG versioning and serialization.</p><p><p>Airflow 2 is a great successor for Airflow 1. With improved performance and helpful features we recommend using it over Airflow 1, especially in new projects.</p></p>",
            "isNew": true
        },
        {
            "name": "Flutter ",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>Flutter is the new <strong>Google’s</strong> framework for creating high quality apps both for Android and iOS with a single codebase.\nThe framework is based on <a href=\"https://trello.com/c/w5WPLf8u/268-dart\">Dart programming language</a> which eventually generates an Android’s APK and iOS IPA packages.</p>\n<p>Flutter first introduced in May 2017, and currently still in beta but so far, its already has a large community around the world.</p>\n<p>Compared to other cross platform frameworks such as ReactNative which usually relays on the platform native UI widgets, Flutter internally renders the UI widgets and draw them directly on the screen canvas. This makes flutter much faster and more reliable when it comes to backwards support.\nAs said above, Flutter has large community already, it has highly rich documentation and has Google’s Support.\nFor more details checkout about Flutter in their <a href=\"https://flutter.io/\">home page</a></p><p><ul>\n<li>Flutter apps are budget-friendly</li>\n<li>Native-like performance</li>\n<li>Development goes faster</li>\n<li>Hot Reload feature</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Foldable Devices ",
            "quadrant": "Mobile",
            "ring": "Start",
            "description": "<p>Android 10 (API level 29) adds more support for foldable devices and different folding patterns.</p>\n<p>Being able to run multiple windows is one of the benefits of large screens. In the past, having two apps side by side was common in some devices. The technology has improved to the point where three or more apps can run on the screen at the same time, and also share content between themselves.</p>\n<p>In the future, you might see foldable phones that support more than one screen or display at a time. Handling this configuration is similar to how developers work with projected screens today on Chrome OS.</p><p><p>- We need to start supporting foldable because there are real devices that have these form factors.</p></p>",
            "isNew": false
        },
        {
            "name": "Flutter Pay library",
            "quadrant": "Mobile",
            "ring": "Try",
            "description": "<p>Flutter is the new <strong>Google’s</strong> framework for creating high quality apps both for Android and iOS with a single codebase.\nThe framework is based on <a href=\"https://trello.com/c/w5WPLf8u/268-dart\">Dart programming language</a> which eventually generates an Android’s APK and iOS IPA packages.</p>\n<p>Flutter first introduced in May 2017, and currently still in beta but so far, its already has a large community around the world.</p>\n<p>Compared to other cross platform frameworks such as ReactNative which usually relays on the platform native UI widgets, Flutter internally renders the UI widgets and draw them directly on the screen canvas. This makes flutter much faster and more reliable when it comes to backwards support.\nAs said above, Flutter has large community already, it has highly rich documentation and has Google’s Support.\nFor more details checkout about Flutter in their <a href=\"https://flutter.io/\">home page</a></p><p><ul>\n<li>Flutter library for building applications that support GooglePay and ApplePay </li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Cert-manager (jetstack)",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>cert-manager is a powerful, general-purpose certificate management controller for Kubernetes.</p><p><p>A major use case is an automated issuance and renewal of Let’s Encrypt certificate, using ACME, to secure Ingress with TLS.</p></p>",
            "isNew": true
        },
        {
            "name": "External Secrets Operator",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>External Secrets Operator is a Kubernetes operator that integrates external secret management systems like AWS Secrets Manager, HashiCorp Vault, Google Secrets Manager, Azure Key Vault and many more. The operator reads information from external APIs and automatically injects the values into a Kubernetes Secret.</p><p><p>As the trend moves to declarative, k8s operators should stay with us. </p></p>",
            "isNew": true
        },
        {
            "name": "New Splash Screen ",
            "quadrant": "Mobile",
            "ring": "Start",
            "description": "<p><ul>\n<li>Part of the new Android 12 release</li>\n<li>Enables a new app launch animation for all apps</li>\n<li>Will become the standard of creating application SplashScreen</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Android 13",
            "quadrant": "Mobile",
            "ring": "Try",
            "description": "<p><ul>\n<li>Latest OS release from Android</li>\n<li>Updated Security</li>\n<li>More features for mobile phone usage</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Kotlin Flow",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>Coroutines are a Kotlin feature that converts async callbacks for long-running tasks, such as a database or network access, into sequential code.</p>\n<h2 id=\"thekotlinteamdefinescoroutinesaslightweightthreadstheyaresortoftasksthattheactualthreadscanexecute\">The Kotlin team defines coroutines as “lightweight threads”. They are sort of tasks that the actual threads can execute.</h2>\n<p>Kotlin flow is the most newly advanced library in Reactive programming area. It is a new asynchronous stream library from JetBrains, the company behind the Kotlin language. Sharing many similarities with Rx streams, Kotlin Flow is built on top of Kotlin Coroutines.&nbsp;</p><p><ul>\n<li>RxJava has been around for a few years now and has been one of the main building blocks for many Android projects to date. Kotlin’s Flow is taking a serious shot at contending for this spot.</li>\n<li>Kotlin Flow is an addition to Kotlin Coroutines. Coroutines save us from callback hell by giving us the possibility to run asynchronous code as if it was synchronous. Flow takes this a step further by adding streams to the mix.&nbsp;</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "ViewModel (Android Architecture Components) ",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>In Android, MVC refers to the default pattern where an Activity acts as a controller and XML files are views. MVVM treats both Activity classes and XML files as views, and ViewModel classes are where you write your business logic. It completely separates an app's UI from its logic.</p><p><ul>\n<li>Makes debugging easier for applications</li>\n<li>Separation of concerns</li>\n<li>Code Reusability</li>\n<li>Decoupling of code</li>\n<li>Easy to test</li>\n<li>Easy to maintain</li>\n<li>Easy to refactor</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "solidjs",
            "quadrant": "Frontend",
            "ring": "Start",
            "description": "<p><p>SolidJs is a reactive SPA library which is faster now than react and work very similar to it. Its updates are completely independent of its component and therefore it its component functions are only called once.</p>\n<p>We recommend start using it for new projects </p></p>",
            "isNew": true
        },
        {
            "name": "Stackgres Database Operator",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>StackGres is a fully-featured platform for running PostgreSQL on Kubernetes.\nDeploy in minutes an Enterprise-Grade Postgres-as-a-Service, in your infrastructure.\n100% Open Source.</p><p><p>If we need a quick Postgres solution on K8S, this is an excellent approach to start with. </p></p>",
            "isNew": true
        },
        {
            "name": "Koa",
            "quadrant": "Frontend",
            "ring": "Keep",
            "description": "<p><p>Very mature and a popular framework.  Used for BFF and for writing servers in javascript mainly </p></p>",
            "isNew": true
        },
        {
            "name": "Python 3",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>The latest major version of Python.</p><p><p>The latest major version of the popular SW language, Python.</p></p>",
            "isNew": true
        },
        {
            "name": "Jupyter Lab",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p>JupyterLab is a true IDE for interactive computing. You have everything you need for your work (especially for a Data Scientist or a Data Engineer) in one window: file browser, terminal and code/notebook editor. In addition it has a robust and thriving third-party extension community.</p><p><p>Jupyter notebook is the most go-to platform when it comes to performing data analysis or performing data science-intense data preprocessing, EDA and data visualizations.\nJupyter also supports Big data tools such as Apache Spark for data analytics needs.\nJupyter Notebook integration available in PyCharm, VSCode and many more.</p></p>",
            "isNew": true
        },
        {
            "name": "Next.js",
            "quadrant": "Frontend",
            "ring": "Keep",
            "description": "<p><p>We recommend keep using it if you need SSR for your react app. </p></p>",
            "isNew": false
        },
        {
            "name": "Mockito ",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "undefined<p><ul>\n<li>It is the best frameworks for build test for the app</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Apache Zeppelin",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>Apache Zeppelin is a notebook for managing and visualizing Data and Data-lake. With Apache Zeppelin, one can perform Data Ingestion, Data Discovery, Data Analytics and also have Data Visualization &amp; Collaboration.\nApache Zeppelin is a Java runtime and supports the following languages and frameworks: Scala as Apache Spark, Python, JDBC, Markdown and Shell.\nIt also supports many plugins The results of the queries can be shown in nice built-in visuals like graphs, pie charts and more.</p>\n<p>Apache Zeppelin supports many additional interpreters that can be loaded or integrated using Helium,\nAmong those interpreters are for example Cassandra, Elasticsearch, Flink, Ignite, bean, angular and many more.</p><p><p>Zeppelin is one of the best tools out there to experiment in Spark, and as such it makes Spark accessible for Data Scientist (via PySpark).</p></p>",
            "isNew": false
        },
        {
            "name": "Apache Zeppelin",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p>Apache Zeppelin is a notebook for managing and visualizing Data and Data-lake. With Apache Zeppelin, one can perform Data Ingestion, Data Discovery, Data Analytics and also have Data Visualization &amp; Collaboration.\nApache Zeppelin is a Java runtime and supports the following languages and frameworks: Scala as Apache Spark, Python, JDBC, Markdown and Shell.\nIt also supports many plugins The results of the queries can be shown in nice built-in visuals like graphs, pie charts and more.</p>\n<p>Apache Zeppelin supports many additional interpreters that can be loaded or integrated using Helium,\nAmong those interpreters are for example Cassandra, Elasticsearch, Flink, Ignite, bean, angular and many more.</p><p><p>Zeppelin is one of the best tools out there to experiment in Spark, and as such it makes Spark accessible for Data Scientist (via PySpark).</p></p>",
            "isNew": false
        },
        {
            "name": "Flagger",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>Flagger is a progressive delivery tool that automates the release process for applications running on Kubernetes. It reduces the risk of introducing a new software version in production by gradually shifting traffic to the new version while measuring metrics and running conformance tests.Flagger implements several deployment strategies (Canary releases, A/B testing, Blue/Green mirroring) and integrates with various Kubernetes ingress controllers, service mesh and monitoring solutions.\nFlagger is a Cloud Native Computing Foundation project and part of Flux family of GitOps tools</p><p><p>Like other Progressive Delivery tools, Flagger improves the release of applications by supporting release strategies based on metrics and testing.</p></p>",
            "isNew": true
        },
        {
            "name": "Android 12",
            "quadrant": "Mobile",
            "ring": "Try",
            "description": "<p><ul>\n<li>The next big Android update</li>\n<li>Refreshed UI</li>\n<li>privacy and security updates</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Google Assistant ",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>Did a course on Udemy about dialog flow.\nCreated a chatbot in facebook using dialog flow (a part of the course), in 2 phases:</p>\n<ul>\n<li>Dialog flow + facebook only (direct)</li>\n<li>Dialog flow + NodeJS + facebook (middle-ware).</li>\n<li>Started a course on google assistant.</li>\n</ul>\n<p>Next Item: create a small project by incorporating google assistant, dialog flow and some server-side (serverless? NodeJS?).\nPossible problems:</p>\n<ul>\n<li>Google’s assistant is locale-specific. We need to find a way to install it on mobile.</li>\n</ul><p><p>Google assistant is leading the competition when compared to Cortana (Microsoft) , Siri (Apple), and Alexa(Amazon).\nWe already did some important research on the subject with presentations, workshops and even a fuze day on Tikal. Keeping tabs on it and playing with it further (for example - google sign in, oauth, surface switching, sentiment analysis, etc…) will give us a good insight into the Converstational UI as a whole.</p></p></p>",
            "isNew": false
        },
        {
            "name": "Polyglot Programming",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>Polyglot programming is the practice of writing code in multiple languages to capture additional functionality and efficiency not available in a single language. The use of domain-specific languages (DSLs) has become a standard practice for enterprise application development. For example, a mobile development team might employ Java, JavaScript and HTML5 to create a fully functional application. Other DSLs such as SQL (for data queries), XML (embedded configuration) and CSS (document formatting) are often built into enterprise applications as well. One developer may be proficient in multiple languages, or a team with varying language skills may work together to perform polyglot programming.</p><p><p>With the architecture of micro-services and platforms such as GraalVM, it is becoming more and more rewarding to choose the right language for the right service.</p></p>",
            "isNew": false
        },
        {
            "name": "k3d controller",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>k3d is a lightweight wrapper to run k3s (Rancher Lab’s minimal Kubernetes distribution) in docker.</p>\n<p>k3d makes it very easy to create single- and multi-node k3s clusters in docker, e.g. for local development on Kubernetes.</p><p><p>The easiest way to bring up a local k8s cluster on a personal machine or a light vm. </p></p>",
            "isNew": true
        },
        {
            "name": "Firebase Test Lab",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p><ul>\n<li>Easy to test on multiple devices</li>\n<li>Easy integrates with Android &amp; Flutter builds</li>\n<li>Details review on errors and bugs found</li>\n<li>Free to use</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Docker Compose",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p><strong>Docker</strong> Compose is a tool for defining and running multi-container Docker applications. With Compose, you use a YAML file to configure your application’s services. Then, with a single command, you create and start all the services from your configuration.</p><p><p>Is the most common and easy to use for running and managing multiple dockers, for development usage, and for the deployment of applications that run on a single node.</p></p>",
            "isNew": false
        },
        {
            "name": "Managed Services",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p>Do you remember the last time you had to self manage a Hadoop cluster for Spark? Or reconfigure a DB cluster? The time spent on troubleshooting and upgrades is tiresome and unproductive. Using managed services for any of those needs might save a lot of time and effort, and sometimes even money. While maintaining a non vendor lock-in strategy you can enjoy the best and cheapest of breed, letting your developers and DevOps handle the good parts of handling such a cluster without the drag and frustration.</p><p><p>We recommend using managed services for any major cluster as self maintenance of such systems might not benefit your goals. You will get faster to where you’re going with managed services.</p></p>",
            "isNew": false
        },
        {
            "name": "Minio",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>Minio is kubernetes native, s3 compatible high performance object storage tool. It enables you to create and manage your own object storage while keeping the s3-API standard.</p><p><p>Object storage becoming a good alternative to big-data storage solutions. S3 API is the most common way of using object storage. These 2 facts make Minio a perfect solution for managing your own object storage when needed (on-prem environment or cloudless infrastructure are  good examples)</p></p>",
            "isNew": false
        },
        {
            "name": "Retrofit ",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>A type-safe HTTP client for Android and Java</p>\n<p>Retrofit models REST endpoints as Java interfaces, making them very simple to understand and consume.</p>\n<p>Retrofit works by modeling over a base URL and by making interfaces return the entities from the REST endpoint.</p><p><ul>\n<li>Retrofit&nbsp;is dead-simple to use.</li>\n<li>Retrofit supports dynamic URLs</li>\n<li>use thread pools and execute multiple requests in parallel, and both support the venerable OkHttp library</li>\n<li>Retrofit makes it much easier to configure HTTP intercepts</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Rome tools ",
            "quadrant": "Frontend",
            "ring": "Try",
            "description": "<p><p>Just announced, backed by influencers.</p></p>",
            "isNew": false
        },
        {
            "name": "Prisma",
            "quadrant": "Frontend",
            "ring": "Start",
            "description": "<p>Prisma aims to replace traditional ORMs with a GraphQL server for querying data. It automates many DB related operations and exposes a standard GraphQL endpoint, that can be queried directly or through other Graphql endpoints such as Apollo Server.</p>\n<p>The most interesting aspect of Prisma is the ability to generate typed client code from existing databases including the models and relations, hence significantly speeding up development processes while keeping the code typed and safe.</p>\n<p>Currently, Prisma has driver support of most major databases including cloud DBs (e.g. DynamoDB), and most common programming languages( Javascript, Typescript, Golang, Python, and Java).</p>\n<p>I strongly recommend trying it out as a new approach to ORM as it has an interesting concept, an active community, and good documentation.</p><p><p>Prisma is still not used by large enough number of our customers so we recommend trying it, </p></p>",
            "isNew": false
        },
        {
            "name": "Microservice Architecture",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p>Apart from the old monolithic paradigm of software engineering, the Micro-Service-Architecture (MSA) or Service-Oriented-Architecture (SOA) orients software engineers to break apart their software design to different self-contained, independent services, maintained by small teams of no more than 4 engineers, on a rather small codebase.</p>\n<p>This new approach makes it possible to design logic parts of the entire application as more generic services, for the future use of other clients.</p>\n<p>For more info and best practices about MSA design, refer <a href=\"https://12factor.net/\">here</a>:</p><p><p>MSA has long since become an industry-standard in writing complex applications as a bunch of simple services. This simple, language-agnostic coding gives organizations more agility and the ability to quickly deliver changes.</p></p>",
            "isNew": false
        },
        {
            "name": "Gardner",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>“Universal Kubernetes at Scale” [ developed by SAP ]\nGardener implements the automated management and operation of Kubernetes clusters as a service and provides support for multiple cloud providers (Alicloud, AWS, Azure, GCP, OpenStack, …). Its main principle is to leverage Kubernetes concepts for all of its tasks.</p>\n<p>In essence, Gardener is an extension API server that comes along with a bundle of custom controllers. It introduces new API objects in an existing Kubernetes cluster (which is called garden cluster) in order to use them for the management of end-user Kubernetes clusters (which are called shoot clusters). These shoot clusters are described via declarative cluster specifications which are observed by the controllers. They will bring up the clusters, reconcile their state, perform automated updates and make sure they are always up and running.</p><p><p>A project designed to manage multiple Kubernetes clusters. \nGardener by SAP, Following the botanical terminology, the end-user clusters when ready to sprout are called \"shoot\" clusters. \nWhich are managed by a \"Seed\" cluster which sprouts those \"shoot\" clusters used by the end-user.</p></p>",
            "isNew": false
        },
        {
            "name": "Firestore ",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>Firebase is a powerful platform for Mobile Android, iOS and WebApps.</p>\n<p>Firebase gives you functionality like analytics, databases, messaging and crash reporting so you can move quickly and focus on your users.\nFirebase is built on Google infrastructure and scales automatically.</p>\n<p>Firebase gives you many services such as:\nanalytics, Auth, Realtime database, Cloud Messaging, Storage, Crash reporting and more.</p>\n<p>Using One Firebase Console to control the services and data is provided.\nIt is easy to use and set up by using Firebase SDK libraries.</p>\n<h2 id=\"usuallyinordertosetupmostoftheservicesthereisawiderangeofdocumentationandcodeexamples\">Usually, in order to set up most of the services, there is a wide range of documentation and code examples.</h2>\n<p>Firebase App Distribution makes distributing your apps to trusted testers painless. By getting your apps onto testers' devices quickly, you can get feedback early and often. And if you use Crashlytics in your apps, you’ll automatically get stability metrics for all your builds, so you know when you’re ready to ship.</p>\n<p>What is in firebase:</p>\n<ul>\n<li>Cloud Firestore</li>\n<li>Cloud Functions</li>\n<li>Crash Reporting</li>\n<li>App Distribution</li>\n</ul><p><ul>\n<li>Support scalability&nbsp;</li>\n<li>Support Multi platform</li>\n<li>Lightweight queries</li>\n<li>Support offline mode</li>\n<li>Simple SDK</li>\n<li>More startups first choice of server side</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Goldilocks - VPA",
            "quadrant": "DevOps",
            "ring": "Try",
            "description": "<p>Goldilocks is a utility that can help you identify a starting point for resource requests and limits.\nBy using the kubernetes vertical-pod-autoscaler (opens new window)in recommendation mode, we can see a suggestion for resource requests on each of our apps. This tool creates a VPA for each workload in a namespace and then queries them for information.</p><p><p>This tool helps to estimate the resource limit and the request needed for each pod. Be  aware that this tool uses VPA and validate the VPA is in Recommender mode</p></p>",
            "isNew": true
        },
        {
            "name": "Vite",
            "quadrant": "Frontend",
            "ring": "Start",
            "description": "<p><p><strong>vite</strong>&nbsp;is a build tool that significantly improves the front-end development experience.\nYou can use Vite to set up a development environment for frameworks like Vue and React, and even for a vanilla JavaScript app with a dev server and hot reloading in just three commands.</p>\n<p>Over the past year, Vite has started being used by more and more projects. and it is mature enough to start using. </p></p>",
            "isNew": false
        },
        {
            "name": "Android 9 ",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>Android P Features and API Overview</p>\n<p>It offers the following :</p>\n<ul>\n<li>New RTT WiFi and location tracking. The app must have Location permission and WiFi scanning on.</li>\n<li>Smart notifications improvements such as smart reply inline from the notification bar, adding images to the reply! Saving the reply as drafts.</li>\n<li>Multi-Camera Support  - access 2 camera devices at the same time.</li>\n</ul><p><ul>\n<li>Runs on around 10% of all Android devices on the market</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Velero",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>Velero is an open source tool to safely backup and restore, perform disaster recovery, and migrate Kubernetes cluster resources and persistent volumes.</p><p><p>While Kubernetes resources should be managed as code, there are use cases where one needs to back it up as data. Velero gives a good solution for backing up and recovering Kubernetes resources when (for example) there is no time to wait for the CD process.</p></p>",
            "isNew": false
        },
        {
            "name": "NLP Deep Learning",
            "quadrant": "Backend",
            "ring": "Start",
            "description": "<p>NLP deep learning is an emerging technology showcasing BERT and GPT which exhibit revolutionary state-of-the-art language model that can translate language, converse with humans, answer open-end questions and write meaningful texts.</p><p><p>It’s definitely the new King of NLP since it’s way more robust and accurate than the classic NLP language model (TFIDF etc.). This technology doesn’t need prior domain knowledge and doesn’t make any assumptions, also it’s robust and can learn many different tasks in different languages. It’s definitely something we should start getting into.</p></p>",
            "isNew": true
        },
        {
            "name": "Apollo",
            "quadrant": "Frontend",
            "ring": "Start",
            "description": "undefined<p><p>Apollo has gained maturity and has been adopted by some of our customers, and therefore we recommend start using it.</p></p>",
            "isNew": true
        },
        {
            "name": "GitOps",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>GitOps\nIs it possible to describe our applications, deployments, versioning, releases, changes over time only with code? \n&nbsp;&nbsp;Is it possible easily and integrally recover, a rollback in a declarative manner?\n&nbsp;&nbsp;Is it possible to manage such environments without the need to run any command at all, git commits will be enough?\n&nbsp;&nbsp;GitOps today is a set of practices that enable us to do it.\n&nbsp;&nbsp;In the same way we excepted and implemented the concept \"Infrastructure As Code\", we except these days the concept GitOps. \nGit a single source of truth for declarative infrastructure and applications\n&nbsp;&nbsp;With Git at the center of your delivery pipelines, developers can make pull requests to accelerate and simplify application deployments and&nbsp;\n&nbsp;&nbsp;a lot of the operations tasks\nMain GitOps Key Benefits</p>\n<ul>\n<li>Continuous deployment productivity and integrability is greater</li>\n<li>Environmental control is enhanced by the developer by pushing code </li>\n<li>All cluster changes are logged. Stability is improved </li>\n<li>A single source of truth, Higher reliability from Git’s built-in revert/rollback</li>\n<li>end-to-end workflows consistency and standardization</li>\n</ul>\n<p>Some Tools that helps us to implement GitOps practices:</p>\n<ul>\n<li>ArgoCD</li>\n<li>Flux</li>\n<li>GitKube</li>\n<li>JenkinsX</li>\n<li>Helm Operator</li>\n<li>wksctl</li>\n</ul><p><p>Terms like: Efficiency, Reliability, Stability, Consistency, Integrity, Cost-effectiveness, Developing fluency, and Productivity are all included once we implement the GitOps way.</p></p>",
            "isNew": false
        },
        {
            "name": "NodeRed",
            "quadrant": "Frontend",
            "ring": "Start",
            "description": "<p><p>Being the de facto standard `flow based programming` in IoT environments, with a developer community providing and maintaining nodes for a wide range of purposes, NodeRed has evolved into a general purpose low code development tool that can be used to quickly prototype any application. \nWith its latest 1.0 release that includes the move to asynchronous by default and a new docker image, NodeRed is also an option for any event driven application running as microservices.</p></p>",
            "isNew": false
        },
        {
            "name": "NodeRed",
            "quadrant": "Backend",
            "ring": "Start",
            "description": "<p><p>Being the de facto standard `flow based programming` in IoT environments, with a developer community providing and maintaining nodes for a wide range of purposes, NodeRed has evolved into a general purpose low code development tool that can be used to quickly prototype any application. \nWith its latest 1.0 release that includes the move to asynchronous by default and a new docker image, NodeRed is also an option for any event driven application running as microservices.</p></p>",
            "isNew": false
        },
        {
            "name": "Kubecost",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>Kubecost models give teams visibility into current and historical Kubernetes spend and resource allocation. These models provide cost transparency in Kubernetes environments that support multiple applications, teams, departments, etc.</p>\n<ul>\n<li>Real-time cost allocation by Kubernetes service, deployment, namespace, label, statefulset, daemonset, pod, and container</li>\n<li>Dynamic asset pricing enabled by integrations with AWS, Azure, and GCP billing APIs</li>\n<li>Supports on-prem k8s clusters with custom pricing sheets\nAnd more.</li>\n</ul><p><p>Kubecost helps teams' accountability on Kubernetes spendings, considering Kubernetes can be consumed in many ways e.g Managed, Self-Hosted etc Kubecost provides an abstraction layer of cost analysis regardless of what flavor of Kubernetes you are running.</p>\n<p>It's an OpenSource project which defined models of Kubernetes cost analysis accompanied by a SaaS offering for visualization.</p></p>",
            "isNew": false
        },
        {
            "name": "GitLab-CI",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>GitLab CI/CD is a tool built into GitLab for software development through the continuous methodologies:</p>\n<p>Continuous Integration (CI)\nContinuous Delivery (CD)\nContinuous Deployment (CD)</p><p><p>GitLab CI/CD pipeline is a great tool to integrate with the GitLab suite. Very easy to use with lots of predefined templates.</p></p>",
            "isNew": false
        },
        {
            "name": "Mobx",
            "quadrant": "Frontend",
            "ring": "Keep",
            "description": "<p><p>Mobx  provides us with easy state single source of truth along with change detection, which makes as easy to sync with our react components,  We recommend keep using it if you have done so already.</p></p>",
            "isNew": true
        },
        {
            "name": "Cypress",
            "quadrant": "Frontend",
            "ring": "Keep",
            "description": "<p><a href=\"https://www.cypress.io/\">Cypress</a> is a framework for fast, easy and reliable testing for anything that runs in a browser. It is a one-stop-shop that can do e2e, integration, and unit testing.\nCypress is a JavaScript-based end to end testing framework that doesn’t use selenium at all. It is built on top of mocha which is a feature-rich JavaScript test framework running on Node.js and in the browser, making asynchronous testing simple and fun.\nCypress also uses Chai - a BDD / TDD assertion library for node and the browser that can be delightfully paired with any JavaScript testing framework.</p><p><p>Currently, Cypress only works in Chrome/chromium so for projects that require e2e tests in other browsers it is not an ideal solution. However, if your target browser is Chrome and this is definitely a very good solution for e2e, integration and unit testing of web apps</p>\n<p>There has been some major and exiting changes in Cypress 10, which introduce component testing, the project structure is no longer mandatory, and cypress.json config file can be a .js file </p>\n<p>https://applitools.com/blog/whats-new-cypress-10/#:~:text=Just%20a%20few%20hours%20ago,and%20a%20completely%20redesigned%20UI.</p></p>",
            "isNew": false
        },
        {
            "name": "TensorFlow mobile/lite",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>Machine learning on mobile devices is offering an array of new and unique user experiences for problems that are close to data people are working on. Experiences that were impossible before, like OCR, image recognition, machine translation, speech recognition, etc, were in the realm of Science Fiction, but they are being brought into our daily lives. Thanks to machine learning on mobile and IoT devices, universal translators from Star Trek, Babel Fish from Hitchhiker’s Guide to the Galaxy, “neural net processor, a learning computer” from Terminator 2, and more, are not a figments of writers’ imagination, but actual products that you can buy, or are in development stages.</p>\n<p>TensorFlow is an opensource library for dataflow programming, often used in deep learning. It was developed for internal use by the Google Brain team. It was released to the public, and in 2017 mobile/lite version was released that is targeting mobile and embedded/IoT platforms, such as Android, iOS, Rasberry Pi, etc.</p><p><ul>\n<li>Prediction in mobile devices is already incorporated in most of the mobile devices. Having a lite version in TensorFlow gives another important tool for such causes.</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "TensorFlow mobile/lite",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p>Machine learning on mobile devices is offering an array of new and unique user experiences for problems that are close to data people are working on. Experiences that were impossible before, like OCR, image recognition, machine translation, speech recognition, etc, were in the realm of Science Fiction, but they are being brought into our daily lives. Thanks to machine learning on mobile and IoT devices, universal translators from Star Trek, Babel Fish from Hitchhiker’s Guide to the Galaxy, “neural net processor, a learning computer” from Terminator 2, and more, are not a figments of writers’ imagination, but actual products that you can buy, or are in development stages.</p>\n<p>TensorFlow is an opensource library for dataflow programming, often used in deep learning. It was developed for internal use by the Google Brain team. It was released to the public, and in 2017 mobile/lite version was released that is targeting mobile and embedded/IoT platforms, such as Android, iOS, Rasberry Pi, etc.</p><p><ul>\n<li>Prediction in mobile devices is already incorporated in most of the mobile devices. Having a lite version in TensorFlow gives another important tool for such causes.</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Kafka Streams",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p><strong>Kafka Streams</strong> is a client library for building applications and microservices, where the input and output data are stored in Kafka clusters. It combines the simplicity of writing and deploying standard Java and Scala applications on the client-side with the benefits of Kafka’s server-side cluster technology</p>\n<p>The library allows developing stateful stream-processing applications that are scalable, elastic, and fully fault-tolerant. The main API is a stream-processing DSL that offers high-level operators like filter, map, grouping, windowing, aggregation, joins and the notion of tables.</p><p><p>As Kafka has become more mainstream and fairly standard in a lot of systems, the streaming and aggregation aspects of the system should be part of the same system, and not on another layer such as Spark.</p></p>",
            "isNew": false
        },
        {
            "name": "kuma",
            "quadrant": "DevOps",
            "ring": "Try",
            "description": "<p>The open-source control plane for service mesh,\ndelivering security, observability, routing and more</p><p><p>Kuma gives you good visuality of your service mesh implementation, The major supporter of this tool is kong, so if you use kong is the most relevant tool.</p></p>",
            "isNew": false
        },
        {
            "name": "prowler",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p><em>Prowler</em>&nbsp;is an Open Source security tool to perform AWS security best practices assessments, audits, incident response, continuous monitoring, hardening and forensics readiness. It contains more than 200 controls covering CIS, PCI-DSS, ISO27001, GDPR, HIPAA, FFIEC, SOC2, AWS FTR, ENS and custome security frameworks.</p><p><p>Prowler is a command-line tool that helps you with AWS security assessment, auditing, hardening, and incident response.</p></p>",
            "isNew": true
        },
        {
            "name": "Deno",
            "quadrant": "Frontend",
            "ring": "Try",
            "description": "<p><p>While having its advantages over node.js, including security first, distributed modules structure and so on, we are still waiting for Deno to be more mature before it can enter the start phase. It will happen soon.  </p></p>",
            "isNew": true
        },
        {
            "name": "Data Catalog",
            "quadrant": "Backend",
            "ring": "Try",
            "description": "<p>A Data Catalog&nbsp;is a collection of metadata, combined with data management and search tools, that helps analysts and other data users to find the data that they need, serves as an inventory of available data, and provides information to evaluate fitness data for intended uses.</p><p><p>Data Catalogs are important to allow visibility into data lakes and data warehouses. In the world of ever growing data, and its importance to drive business value, the number of tables and datasets are hard to control. Applying a data catalog becomes crucial for companies which collect, transform and analyze data in masses.</p></p>",
            "isNew": true
        },
        {
            "name": "Java 17 LTS",
            "quadrant": "Backend",
            "ring": "Start",
            "description": "<p>Java 17 was released on 14 September 2021. This is the latest LTS version and should be adopted as the last LTS version, Java 11 has already been announced as EOL for 30 Sep 2023.</p><p><p>There is no reason to use an older version of Java as it is out since&nbsp; 14 September 2021 and any major issue has already been fixed. We highly recommend moving to the latest LTS version.</p></p>",
            "isNew": true
        },
        {
            "name": "OpenTelemetry",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>OpenTelemetry collector is a tool that in a powerful way receives data from multiple sources, transforms it, and sends it to the destinations you like. We can scrape Prometheus metrics with the OpenTelemetry Collector and send them to a remote write destination like Grafana Cloud.</p><p><p>A vendor-agnostic proxy that can receive, process, and export telemetry data. </p></p>",
            "isNew": true
        },
        {
            "name": "Java",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p><strong>Robust, Age Proven, and Renewing</strong>\nThe Java language although being with us already for a long time is renewing itself. Starting from Java 9 we now see a new version of Java every 6 months. This means more features much faster. I still believe that using Java gives a very strict and obvious structure to the program which is sometimes lacking in other programming languages.</p>\n<p><strong>Framework Support</strong>\nThe rise if Reactive Frameworks (Vert.x, Spring Reactor and others) and Micro frameworks (Spark Java, javalite, ligth4k) make java very versatile in its use and use cases. With the above-mentioned frameworks, we can now easily program reactive systems and microservices with a minimal footprint.\nJava is always going with the Trends (although sometimes a bit behind) as we can see with Docker support in the JVM just recently.</p>\n<p>The Java community is a huge community one which cannot be neglected.</p><p><p>We recommend using this language as it has one of the largest eco-systems of any language, a vibrant community and it is actively maintained. It is very versatile, easy to use and learn and fits many applications.</p>\n<ul>\n<li>The original language that Android was built in</li>\n<li>many examples and libraries still use Java</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Java",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p><strong>Robust, Age Proven, and Renewing</strong>\nThe Java language although being with us already for a long time is renewing itself. Starting from Java 9 we now see a new version of Java every 6 months. This means more features much faster. I still believe that using Java gives a very strict and obvious structure to the program which is sometimes lacking in other programming languages.</p>\n<p><strong>Framework Support</strong>\nThe rise if Reactive Frameworks (Vert.x, Spring Reactor and others) and Micro frameworks (Spark Java, javalite, ligth4k) make java very versatile in its use and use cases. With the above-mentioned frameworks, we can now easily program reactive systems and microservices with a minimal footprint.\nJava is always going with the Trends (although sometimes a bit behind) as we can see with Docker support in the JVM just recently.</p>\n<p>The Java community is a huge community one which cannot be neglected.</p><p><p>We recommend using this language as it has one of the largest eco-systems of any language, a vibrant community and it is actively maintained. It is very versatile, easy to use and learn and fits many applications.</p>\n<ul>\n<li>The original language that Android was built in</li>\n<li>many examples and libraries still use Java</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Design tokens for design systems",
            "quadrant": "Frontend",
            "ring": "Try",
            "description": "<p>Design system tokens are the style values of UI elements such as color, typography, spacing, shadows, etc., that are used across products and capable of being converted to a format for any platform (web, mobile, desktop). Tokens are building blocks of the design system—think of them as sub atoms, the smallest pieces of style values that allow designers to create styles for a product.</p>\n<p><a href=\"https://xd.adobe.com/ideas/principles/design-systems/what-are-design-tokens/\">https://xd.adobe.com/ideas/principles/design-systems/what-are-design-tokens/</a></p><p><p>This is a new approach for making a design system wich is around for more than a year. </p>\n<p>We have'nt seen it quite in use by our customers and we recommend trying it,</p></p>",
            "isNew": true
        },
        {
            "name": "Firebase Distribution",
            "quadrant": "Mobile",
            "ring": "Start",
            "description": "<p>Firebase is a powerful platform for Mobile Android, iOS and WebApps.</p>\n<p>Firebase gives you functionality like analytics, databases, messaging and crash reporting so you can move quickly and focus on your users.\nFirebase is built on Google infrastructure and scales automatically.</p>\n<p>Firebase gives you many services such as:\nanalytics, Auth, Realtime database, Cloud Messaging, Storage, Crash reporting and more.</p>\n<p>Using One Firebase Console to control the services and data is provided.\nIt is easy to use and set up by using Firebase SDK libraries.</p>\n<h2 id=\"usuallyinordertosetupmostoftheservicesthereisawiderangeofdocumentationandcodeexamples\">Usually, in order to set up most of the services, there is a wide range of documentation and code examples.</h2>\n<p>Firebase App Distribution makes distributing your apps to trusted testers painless. By getting your apps onto testers' devices quickly, you can get feedback early and often. And if you use Crashlytics in your apps, you’ll automatically get stability metrics for all your builds, so you know when you’re ready to ship.</p>\n<p>What is in firebase:</p>\n<ul>\n<li>Cloud Firestore</li>\n<li>Cloud Functions</li>\n<li>Crash Reporting</li>\n<li>App Distribution</li>\n</ul><p><ul>\n<li>Cross-platform - Manage both your iOS and Android pre-release distributions from the same place.</li>\n<li>Fast distributions - Get early releases into your testers’ hands quickly, with fast onboarding, no SDK to install, and instant app delivery.</li>\n<li>Fits into your workflow - Distribute builds using the Firebase console, the Firebase Command Line Interface (CLI) tool, or Gradle (Android). Automate distribution by integrating the CLI into CI jobs.</li>\n<li>Tester management - Manage your testing teams by organizing them into groups. Easily add new testers with email invitations that walk them through the onboarding process. See the status of each tester for specific versions of your app: view who has accepted a testing invitation and downloaded the app.</li>\n<li>Works with Crashlytics - When combined with Crashlytics, get insights into the stability of your test distributions.</li>\n<li>Gain valuable pre-release insights - App Distribution gives you a centralized dashboard to view insights on pre-release versions of your app. Testers are able to provide you with timely feedback on usability and pairing App Distribution with Crashlytics gives you real-time crash reporting for your app.</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Presto",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>Presto is a meta-search engine. Its 2 killer features are:</p>\n<ul>\n<li>Able to join from a multitude of different DBs (i.e. join a MySql table with a Hive table)</li>\n<li>Uses a distributed architecture to run the query so it is able to query very BIG amounts DATA without the need to use workarounds such as map/reduce or spark to run SQL queries</li>\n</ul><p><p>As data keeps piling up and more and more data lakes are being created the need to query it all in an efficient manner is just getting higher. Presto is a great solution to perform simple SQL queries on any underlying data. Many companies have already adopted this query engine and we suggest keeping this technology.</p></p>",
            "isNew": false
        },
        {
            "name": "Spring Boot",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p>Spring Boot makes it easy to create stand-alone, production-grade Spring based Applications that you can \"just run\".\nBy creating an opinionated view of the Spring platform and third-party libraries, you can get started with minimum fuss.</p><p><p>Spring boot's opinionated view of your application configuration makes developing a Spring application much easier than it used to be prior to its introduction.\nIn addition it allows creating self contained application which are much more suitable to micro-services architecture.</p></p>",
            "isNew": false
        },
        {
            "name": "ServiceWorker",
            "quadrant": "Frontend",
            "ring": "Keep",
            "description": "<p>A service worker is an event-driven&nbsp;<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Worker\">worker</a>&nbsp;registered against an origin and a path. It takes the form of a JavaScript file that can control the web-page/site that it is associated with, intercepting and modifying navigation and resource requests, and caching resources in a very granular fashion to give you complete control over how your app behaves in certain situations (the most obvious one being when the network is not available).</p><p><p>In almost every framework or library you will build your app with, you will probably be using serviceworker under the hood. Therefore we recommend keeping it. </p></p>",
            "isNew": true
        },
        {
            "name": "NestJS",
            "quadrant": "Backend",
            "ring": "Start",
            "description": "<p>Nest (NestJS) is a framework for building efficient, scalable <a href=\"https://nodejs.org/\">Node.js</a> server-side applications. It uses progressive JavaScript, is built with and fully supports <a href=\"http://www.typescriptlang.org/\">TypeScript</a> (yet still enables developers to code in pure JavaScript) and combines elements of OOP (Object Oriented Programming), FP (Functional Programming), and FRP (Functional Reactive Programming).</p><p><p>This framework is getting to be very popular with over 47k stars on GitHub, it is easy for Java developers to do the transition to TS, as it has some similarities with Java’s popular Spring framework.</p></p>",
            "isNew": true
        },
        {
            "name": "NestJS",
            "quadrant": "Frontend",
            "ring": "Start",
            "description": "<p>Nest (NestJS) is a framework for building efficient, scalable <a href=\"https://nodejs.org/\">Node.js</a> server-side applications. It uses progressive JavaScript, is built with and fully supports <a href=\"http://www.typescriptlang.org/\">TypeScript</a> (yet still enables developers to code in pure JavaScript) and combines elements of OOP (Object Oriented Programming), FP (Functional Programming), and FRP (Functional Reactive Programming).</p><p><p>This framework is getting to be very popular with over 47k stars on GitHub, it is easy for Java developers to do the transition to TS, as it has some similarities with Java’s popular Spring framework.</p></p>",
            "isNew": true
        },
        {
            "name": "KEDA",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>AWS Event-driven controller - auto-scaler</p><p><p>KEDA is a great choice when you need support in HPA based on Queue, Database, etc… \nKEDA also has an out-of-the-box scaler for (Kafka, influx dB, …). Keda also supports Scaled deployments/pods to zero and triggered Kubernetes jobs which is a great advantage.   </p></p>",
            "isNew": false
        },
        {
            "name": "Popeye",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>Popeye is a utility that scans live Kubernetes clusters and reports potential issues with deployed resources and configurations. It sanitizes your cluster based on what's deployed and not what's sitting on disk. </p>\n<p>By scanning your cluster, it detects misconfigurations and helps you to ensure that best practices are in place, thus preventing future headaches. It aims at reducing the cognitive overload one faces when operating a Kubernetes cluster in the wild. </p>\n<p>Furthermore, if your cluster employs a metric-server, it reports potential resources over/under allocations and attempts to warn you should your cluster run out of capacity.</p><p><p>A very good tool to scan k8s and report on potential issues. it detects misconfigurations and helps you to ensure that best practices are in place, thus preventing future headaches.</p></p>",
            "isNew": false
        },
        {
            "name": "k3s",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p><a href=\"https://k3s.io/?ref=stackshare\">k3s</a> is wrapped in a simple package that reduces the dependencies and steps needed to run a production Kubernetes cluster. Packaged as a single binary, k3s makes installation and upgrade as simple as copying a file. TLS certificates are automatically generated to ensure that all communication is secure by default.</p>\n<p>Used in Edge &amp; IoT to enable a standard distro across the board.</p><p><p>lightweight local k8s cluster for local development.</p></p>",
            "isNew": false
        },
        {
            "name": "Kaniko",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>Kaniko is a tool to build container images from a Dockerfile, inside a container or Kubernetes cluster.\nkaniko doesn't depend on a Docker daemon and executes each command within a Dockerfile completely in userspace. This enables building container images in environments that can't easily or securely run a Docker daemon, such as a standard Kubernetes cluster.\nkaniko is meant to be run as an image:&nbsp;<code>gcr.io/kaniko-project/executor</code>. We do&nbsp;not&nbsp;recommend running the kaniko executor binary in another image, as it might not work.</p><p><p>A good solution to enable building container images in environments that can't easily or securely run a Docker daemon, such as a standard Kubernetes cluster.</p></p>",
            "isNew": false
        },
        {
            "name": "External-dns",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>Inspired by Kubernetes DNS, Kubernetes' cluster-internal DNS server, ExternalDNS makes Kubernetes resources discoverable via public DNS servers. Like KubeDNS, it retrieves a list of resources (Services, Ingresses, etc.) from the Kubernetes API to determine a desired list of DNS records. Unlike KubeDNS, however, it's not a DNS server itself, but merely configures other DNS providers accordingly—e.g. AWS Route 53 or Google Cloud DNS.</p><p><p>The end with manually manage and update DNS servers with changes in our K8S ingresses.</p></p>",
            "isNew": true
        },
        {
            "name": "web3.js",
            "quadrant": "Frontend",
            "ring": "Start",
            "description": "<p>web3.js is a collection of libraries that allow you to interact with a local or remote ethereum node using HTTP, IPC or WebSocket.\n<a href=\"https://web3js.readthedocs.io/en/v1.7.4/\">https://web3js.readthedocs.io/en/v1.7.4/</a></p><p><p>With the rise of blockchain and cripto currency, web3.js, The Ethereum javascript API gains popularity and  is now in use by many. </p>\n<p>For the use case of Ethereum based systems. we recomend strt using it.</p></p>",
            "isNew": true
        },
        {
            "name": "EmotionJs",
            "quadrant": "Frontend",
            "ring": "Try",
            "description": "<p>Emotion JS is a CSS-in-JS styling library that is an alternative to styled-components.\nIt features most of the features styled-components offer and uses jsx pragma as well.\nUnlike the component decoration approach of styled-components, Emotion promotes a more traditional css way of writing.</p><p><p>Emotion JS is a CSS-in-JS styling library that is an alternative to styled-components.\nIt features most of the features styled-components offer and uses jsx pragma as well.\nUnlike the component decoration approach of styled-components, Emotion promotes a more traditional css way of writing.</p></p>",
            "isNew": true
        },
        {
            "name": "Conversational UI",
            "quadrant": "Frontend",
            "ring": "Start",
            "description": "<p><a href=\"https://www.shopify.com/partners/blog/conversational-interfaces\">The conversational interface</a> is the latest trend in the field of digital design that is focused on improving how people interact with systems. Industry leaders such as Apple, Google, Microsoft, Amazon, and Facebook are strongly focused on building a new generation of conversational interfaces.</p><p><p>It appears that for some use cases conversational UI might be suitable solution, instead of a traditional UI application.  </p></p>",
            "isNew": false
        },
        {
            "name": "Apache Pinot",
            "quadrant": "Backend",
            "ring": "Try",
            "description": "<p>Apache Pinot is a Realtime distributed OLAP datastore. It is built originally Linkedin and is currently and Apache Incubating project. It is intended to to answer OLAP queries with low latency and therefore fits into the monitoring database section, just as Apache Druid and others.</p>\n<p>It boasts many interesting features such as real-time data ingestion, highly scalable, hybrid tables and many more mainstream capabilities. A pluggable indexing solution promises blazing fast response times.</p>\n<p>The feature which sets this tool apart is its integrated Anomaly Detection and Alerting solution called ThirdEye.</p><p><p>Although Apache Druid is the best in breed in this section, I think the integrated Anomaly Detection and Alerting solution will win many companies over to give this tool a try, which is our recommendation. This is definitely a project to watch.</p></p>",
            "isNew": false
        },
        {
            "name": "Rancher",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>Rancher not only deploys production-grade Kubernetes clusters from datacenter to cloud to the edge, it also unites them with centralized authentication, access control and observability.</p>\n<p>Rancher lets you streamline cluster deployment on bare metal, private clouds, public clouds or vSphere and secure them using global security policies.</p><p><p>Rancher is a complete software stack for teams adopting containers. It addresses the operational and security challenges of managing multiple Kubernetes clusters across any infrastructure while providing DevOps teams with integrated tools for running containerized workloads.</p></p>",
            "isNew": true
        },
        {
            "name": "KeyCloak",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p><a href=\"https://www.keycloak.org/\">Keycloak</a> is an open-source Identity and Access Management solution aimed at modern applications and services. It makes it easy to secure applications and services with little to no code.</p><p><p>Keycloak supports SAML, OpenID Connect, OAuth2 standards to provide SSO, Identity Broker, and more.\nKeycloak is extendable for customized authentication flows and UI themes. It is one of the best identity management out there.</p></p>",
            "isNew": false
        },
        {
            "name": "Lottie ",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>Lottie is an iOS, Android, and React Native library that renders After Effects animations in real time, allowing apps to use animations as easily as they use static images.</p><p><ul>\n<li>It simple and easy to use</li>\n<li>It allow the project designer to build the animation in After Effects (AE) and export it to a .json file</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "devspaces",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>With DevSpaces, you can just click from Github to start your Dev Environments. Click to code in just seconds</p><p><p>With DevSpaces, you can just click from Github to start your Dev Environments. Click to code in just seconds.</p></p>",
            "isNew": false
        },
        {
            "name": "Argo rollouts",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>Argo Rollouts is a Kubernetes controller and set of CRDs which provide advanced deployment capabilities such as blue-green, canary, canary analysis, experimentation, and progressive delivery features to Kubernetes.</p><p><p>This is a nice tool for advanced deployments. It supports blue-green, canary etc… and some more capabilities.</p></p>",
            "isNew": true
        },
        {
            "name": "podman",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>Podman: A tool for managing OCI containers and pods\n<strong><a href=\"https://github.com/containers/podman\">https://github.com/containers/podman</a></strong></p><p><p>Does not require a daemon and can run rootless (the container can still run as a root inside).</p></p>",
            "isNew": true
        },
        {
            "name": "Tilt",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>Tilt - Client-side tools help develop an application for Kubernetes.&nbsp;Tilt using Tiltfile is written in Starlark, a dialect of Python. Tilt know to generate Kubernetes manifest, install helm and kustomized installation, execute builds, etc .. &nbsp; &nbsp;&nbsp;Tilt know to work with a variant of the local and remote cluster \nTilt Is live application detects a change on your local env and reflect the change to Kubernetes</p><p><p>Tilt is a very good solution to improve developer productivity when working with cloud-native environment, By supporting the deployment in a native way to the local cluster</p></p>",
            "isNew": false
        },
        {
            "name": "Airflow",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>Airflow is today the most appreciated workflow engine in the distributed world.\nIt allows building modular workflow with high scale, triggering, forking and joining and many more features.\nIn addition, a good GUI that helps to audit the workflow.</p>\n<p>This framework is run on Python, which makes it very attractive to DevOps groups.</p>\n<p>The ramp-up seems easy in the beginning but requires deep knowledge on later phases. the solution is also based on other Python frameworks and databases for the queue management and databases, and for the webserver. Celery, RabbitMQ, MySQL or Postgres.\nSome drawbacks of this solution are the fact that all configuration is deployed and Python code. This may cause one bug to halt the whole of the server.\nAnother problem with Python is the different versions that may be installed and updated on the different servers and may not be managed properly and cause bugs in Airflow itself.</p><p><p>Very few systems do not have the need for scheduling tasks. Airflow has become the main tool to solve this issue. Most could providers have a SAAS solution for airflow, so we will see it becoming even more mainstream.</p></p>",
            "isNew": false
        },
        {
            "name": "Paging3",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>The <strong>Paging</strong> Library helps you load and display small chunks of data at a time. Loading partial data on demand reduces usage of network bandwidth and system resources.\nThis library is a part of Android Jetpack.</p>\n<p>The Paging Library's key component is the PagedList class, which loads chunks of your app's data, or pages. As more data is needed, it's paged into the existing PagedList object. If any loaded data changes, a new instance of PagedList is emitted to the observable data holder from a LiveData or RxJava2-based object. As PagedList objects are generated, your app's UI presents their contents, all while respecting your UI controllers' lifecycles.</p><p><ul>\n<li>First-class support for Kotlin coroutines and Flow.</li>\n<li>Support for async loading using RxJava Single or Guava ListenableFuture primitives.</li>\n<li>Built-in load state and error signals for responsive UI design, including retry and refresh functionality.</li>\n<li>Improvements to the repository layer, including cancellation support and a simplified data source interface.</li>\n<li>Improvements to the presentation layer, list separators, custom page transforms, and loading state headers and footers.</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Clean Architecture ",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>Clean architecture is a software design philosophy that separates the elements of a design into ring levels. The main rule of clean architecture is that code dependencies can only come from the outer levels inward. Code on the inner layers can have no knowledge of functions on the outer layers.&nbsp;</p><p><ul>\n<li>An effective testing strategy that follows the testing pyramid</li>\n<li>Frameworks are isolated in individual modules. When (not if) we change our mind, we only have to make a change in one place. The app has use cases rather than being tied to a CRUD system</li>\n<li>All business logic is in a use case, so it’s easy to find and not duplicated anywhere else</li>\n<li>Hard to do the wrong thing because modules enforce compilation dependencies. If you try to use something that you’re not meant to, the app doesn’t compile</li>\n<li>It is always ready to deploy by leaving the wiring up of the object for last. Or by using feature flags, so we get all the benefits of continuous integration</li>\n<li>Multiple works on stories so that different pairs can easily work on the same story at the same time to complete it quicker\n-Good monolith with clear use cases that you can split in microservices later on, once you’ve learned more about them</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Hummingbird / Flutter Web",
            "quadrant": "Mobile",
            "ring": "Try",
            "description": "<p>In addition to mobile apps, Flutter supports the generation of web content rendered using standards-based web technologies: HTML, CSS and JavaScript.&nbsp;\nWith web support, you can compile existing Flutter code written in Dart into a client experience that can be embedded in the browser and deployed to any web server.&nbsp;\nYou can use all the features of Flutter, and you don’t need a browser plug-in.\nWhile traditional web approaches remain a great choice, we envision the web support available in Flutter being valuable in many scenarios</p>\n<p>**Note**: While in development, web support is available in the beta channel</p><p><ul>\n<li>Only flutter development required</li>\n<li>A connected Progressive Web Application built with Flutter</li>\n<li>Embedded interactive content</li>\n<li>Embedding dynamic content in a Flutter mobile app</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Flare",
            "quadrant": "Mobile",
            "ring": "Start",
            "description": "<p>Flare is a new vector animation tool. allowing designer to create and build amazing animation with interactivity and integration into almost any platform. The primary goal of Flare is to allow designers to work directly with assets that run in their final app or game (fully GPU accelerated in real-time).</p><p><ul>\n<li>Custom animations.</li>\n<li>Vector Animations</li>\n<li>No developer code needed except for controller</li>\n<li>Simply, Fast and beautiful</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Android Auto",
            "quadrant": "Mobile",
            "ring": "Try",
            "description": "<p>The average person spends 1 hour per day commuting, while they check their smartphone on average 125 times a day. Cars get us where are we going, while phones keep us connected. Checking your smartphone while driving is distracting, causing 25% of all accidents. <strong>Android Auto</strong> enables us to keep connected while driving and minimizes distractions. Developing for the Android Auto platform is easy and familiar to Android developers.</p>\n<p>It is the same platform you already use for phones, tablets, watches, and more. All these experiences will often be in the same apk. Now it can also extend to the car, in a way that is safer and more efficient to the driver, so they can stay connected, with their hands on the wheel and eyes on the road.</p>\n<p>Using Android Auto enabled apps is easy, users download the app to their phone, connect the phone to the car, the phone goes into the car mode, and casts the Auto experience to the Android Auto screen. This means even though the application is running on the phone, it is displayed on cars dash, and the driver can interact with it with car controls, voice, and touch screen.</p>\n<p>In the addition to that, if a specific Android Auto device and car support the link, API is available for CAN bus, a protocol that car diagnostic tools used to diagnose the car and get data from car sensors, and optimize its performance. It is available to the Android Auto OEMs and car manufacturers via its C/C++ API, due to the extremely sensitive nature of the API.</p><p><ul>\n<li>Google's plans to create an infotainment OS for cars based on Auto app</li>\n<li>Adopted by all major car brands</li>\n<li>In the process of being adopted by media/social/navigation apps&nbsp;</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "BuildX",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>Docker Buildx is a CLI plugin that extends the docker command with the full support of the features provided by Moby BuildKit builder toolkit.</p><p><p>Extra features added like building against multiple nodes with multi-arch images concurrently, builder instances, building manifest lists, distributed caching, etc…</p></p>",
            "isNew": true
        },
        {
            "name": "RxDart ",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p><strong>RxDart</strong> is a reactive functional programming library for Google Dart, based on ReactiveX.\nGoogle Dart comes with a very decent Streams API out-of-the-box; rather than attempting to provide an alternative to this API, RxDart adds functionality on top of it.</p>\n<p>Dart and Flutter already have decent reactive functionalities like the Stream API’s which is quite similar to RxDart has to offer. However, RxDart API can take the stream API further usage of BehaviorSubject or other Rx operators such as Combine and Zip, and also managing the stream life cycle better. This is why it is extremely worth to try.</p><p><ul>\n<li>Easier to chain multiple requests and apply transformations.</li>\n<li>Transfer one stream into another stream with multiple capabilities.</li>\n<li>Callback processing and tracking errors.</li>\n<li>Takes care of multi-threading by doing complex thread operations, keeping everything synchronized and returning the relevant things.</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Gvisor",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>gVisor is an application kernel for containers that provides efficient defense-in-depth anywhere.</p><p><p>gVisor provides an additional layer of isolation between running applications and the host operating system.</p></p>",
            "isNew": true
        },
        {
            "name": "Cluster API",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>Cluster API is a Kubernetes sub-project focused on providing declarative APIs and tooling to simplify provisioning, upgrading, and operating multiple Kubernetes clusters supporting different infrastructure/bootstrap providers (AWS, Azure, GCP, vSphere, etc.).\nCluster API project uses Kubernetes-style APIs and patterns to automate cluster creation, configuration and management. The supporting infrastructure, like virtual machines, networks, load balancers, and VPCs, as well as the Kubernetes cluster configuration are all defined as manifest like any other Kubernetes resource.</p><p><p>Kubernetes is a complex system that relies on several components being configured correctly to have a working cluster. Cluster API simplifies the bootstrapping process by providing a single tool to address a set of common overlapping installation concerns, using kubeadm as the underlying bootstrapping tool.</p></p>",
            "isNew": false
        },
        {
            "name": "Angular",
            "quadrant": "Frontend",
            "ring": "Keep",
            "description": "<p>The <strong>Angular</strong> framework, less than two years after it’s the first release, has gained a strong community and a large number of users.</p>\n<p>From it’s v2 to v8, angular has proven relatively easy migration path along with frequent major releases which means that it is here to stay.\nv9, the version about to come, will introduce IVY for the first time, IVY is a new rendering mechanism that is way more efficient.\nAlso, it may lose it’s heavy boilerplate and be much simpler for the beginning developer.\nAngular still needs a steep learning curve. New developers need to learn a substantial amount of “building blocks”. It might change on the next versions, however, angular code is still written using its version-2 paradigms which include modules, services, pipes,  components and more.</p><p><p>Angular, although less popular than react, has proven stability, and that it is here to stay. V14 has introduce the standalone component which eases the time to develop the first screen.</p></p>",
            "isNew": false
        },
        {
            "name": "OnPrem FaaS",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>AWS was the first provider to offer \"<strong>functions as a service</strong>\" already in AWS initially released <a href=\"https://aws.amazon.com/releasenotes/release-aws-lambda-on-2014-11-13/\">AWS lambda</a> as an event-driven provisioning/operations and took just under 3 years to become the standard name of serverless and FaaS offerings.</p>\n<p>AWS, as it’s competitors, offer Lambdas (a.k.a functions), as a complementary to their BaaS offerings, stitching together services such as:\n&nbsp;Incognito\n&nbsp;S3\n&nbsp;CloudFormation\n&nbsp;DynamoDB\n&nbsp;RDS and many more\nThese integrations alongside Lambda’s “infinite” scalability and it’s newly introduced (at the time) “Price per 100ms” made it very popular among both startups achieving their MVP and enterprises wishing to scale out or experiment with Serverless and Micro Services Architectures.\nAWS Lambda provides many organizations the ability to write functions in a variety of Software languages and integrates well with many frameworks and other IaaS/PaaS/BaaS services.</p>\n<p>More about <a href=\"https://aws.amazon.com/lambda/\">AWS Lambda</a> here</p>\n<p>Google functions enable Serverless applications based on GCP IaaS offerings.\nCloud Functions lets application developers spin up code <strong>on demand</strong> in response to events originating from any API / HTTP request. Serverless architectures utilizing Google Functions integrated with Google Endpoints and BaaS services could build applications that scale from zero to infinity, on-demand - without provisioning or managing a single server.</p>\n<p>As other serverless and function providers, google’s functions are the best fitted for Backend services such as Firebase, Cloud Datastore, and ML solutions also offered by the GCP.</p>\n<p>More info on <a href=\"https://cloud.google.com/functions\">google functions</a> in the following</p><p><p>The function framework based on Kubernetes can give a framework to implement the event-driven architecture, It gives easy to deploy with scale and monitor out of the box.</p></p>",
            "isNew": false
        },
        {
            "name": "OPA - Open Policy Agent",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>Policy-based control for cloud native environments</p><p><p>We all understand and appreciate the paradigm of \"Everything is a code\", OPA brings this paradigm to the policies apply mechanism and lets us apply policies on cloud-native using code, with one framework including reuse of existing and community policies.</p></p>",
            "isNew": true
        },
        {
            "name": "Kafka Connect",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p>Kafka connect is used to stream data between data sources or targets to/from kafka.\nthis technology is easy to configure without writing code, but may have issues on large scale data.</p><p><p>We think this eco-system is good for places where small/medium amount of data needs to be streamed to Kafka with minimum configuration.</p></p>",
            "isNew": true
        },
        {
            "name": "SVN",
            "quadrant": "DevOps",
            "ring": "Stop",
            "description": "<p>Subversion. The good old successor of the mythological CVS, represents the centralized source control tools in the OSS world. It shines in an environment of large repos and centralized management. In the age of microservices from one hand,  and a good selection of GitHub-like solutions on the other. There is no point to keep using it.</p><p><p>The good old centralized VCS is no longer relevant in distributed VCS world.</p></p>",
            "isNew": false
        },
        {
            "name": "Contour",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>Contour is an Ingress controller for Kubernetes that works by deploying the&nbsp;<a href=\"https://www.envoyproxy.io/\">Envoy proxy</a>&nbsp;as a reverse proxy and load balancer. Contour supports dynamic configuration updates out of the box while maintaining a lightweight profile.\nContour also introduces a new ingress API (<a href=\"https://github.com/projectcontour/contour/blob/main/site/docs/main/httpproxy.md\">HTTPProxy</a>) which is implemented via a Custom Resource Definition (CRD). Its goal is to expand upon the functionality of the Ingress API to allow for a richer user experience as well as solve shortcomings in the original design.</p><p><p>Contour ingress, use Envoy, Have the HttpProxy CRD's with allow, set HTTP header in ingress level (good support for multi-tenant, etc .. ), Contour Load Balancer support retry, rate Limit, and more…</p></p>",
            "isNew": false
        },
        {
            "name": "Android 11",
            "quadrant": "Mobile",
            "ring": "Start",
            "description": "<p><strong>Android 11</strong> is a new version of the famous Google Android platform, which brings a plethora of new features to the customers. The key focus of this release is on privacy and security of the Android platform. Additionally, new platform features in Android 11 include enhancements to support foldable smartphones (including support for hinge angle sensors), identification of standalone 5G NR networks, Project Mainline (servicing of system components via Google Play Store), project Treble, and High Efficiency Image File Format (HEIF).</p><p><ul>\n<li>New API provided for Android that developers must be aligned with in order to support new devices and features</li>\n<li>The rise of security and privacy concerns on the market</li>\n<li>The support for 5G and foldable devices</li>\n<li>Application behaviour changes due to new security/privacy constraints</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Chaos Engineering",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p><strong>Chaos Engineering</strong> is becoming a discipline in designing distributed systems in order to address the uncertainty of distributed systems at scale.</p>\n<p><strong>Chaos Engineering</strong> can be thought of as the facilitation of experiments to uncover systemic weaknesses.\nThese experiments follow four steps:</p>\n<ul>\n<li>Start by defining ‘steady state’ as some measurable output of a system that indicates normal behavior.</li>\n<li>Hypothesize that this steady-state will continue in both the control group and the experimental group.</li>\n<li>Introduce variables that reflect real-world events like servers that <code>crash</code>, <code>hard drives that malfunction</code>, <code>network connections that fail</code>, etc.</li>\n<li>Try to disprove the hypothesis by looking for a difference in <code>steady-state</code> between the <strong>control group</strong> and the <strong>experimental group</strong>.</li>\n</ul>\n<p>In essence -&gt;; The harder it is to <strong>disrupt the steady-state, the more confidence we have in the behavior of the system.</strong>  And If a weakness is uncovered, we now have a target for improvement before that behavior manifests in the system at large.</p>\n<p><strong>Chaos Engineering</strong> was called as such mainly through Netflix’s <strong><a href=\"https://github.com/Netflix/SimianArmy/wiki/Chaos-Monkey\">Chaos Monkey</a></strong></p>\n<p><a href=\"https://principlesofchaos.org/\">Read More</a></p><p><p>When we adopted the approach of Chaos Engineering it was a bit unclear on the nature of experimentation, nowadays  Chaos Engineering has become the discipline of designing predictable and cost-effective distributed systems and in the long run help shorten the prediction of failures and time to market.</p></p>",
            "isNew": false
        },
        {
            "name": "Contract Test",
            "quadrant": "Backend",
            "ring": "Start",
            "description": "<p>When we are using mocks of external services to test the integration, we don't know if the mocks behave like the latest version of the service. The purpose of Contract Tests is to assure the accuracy of mock's schema (not data).</p><p><p>We have seen several clients starting to implement and integrate Contract Tests into their CI/CD processes, to alleviate the risks of breaking changes when working in a Microservices architecture developed by different teams.</p></p>",
            "isNew": false
        },
        {
            "name": "Feature Modules ",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>Modules provide a container for your app’s source code, resource files, and app-level settings, such as the module-level build file and Android manifest file. Each module can be independently built, tested, and debugged.</p>\n<p>Android Studio uses modules to make it easy to add new devices to your project. By following a few simple steps in Android Studio, you can create a module to contain code that’s specific to a device type, such as Wear OS or Android TV. Android Studio automatically creates module directories, such as source and resource directories, and default build.gradle file appropriate for the device type. Also, Android Studio creates device modules with recommended build configurations, such as using the Leanback library for Android TV modules.</p>\n<p>Why should I Modularize my app?</p>\n<ul>\n<li>Faster build times.</li>\n<li>Fine-grained dependency control.</li>\n<li>Improve reusability across other apps.</li>\n<li>Improves the ownership &amp; the quality of the codebase.</li>\n<li>Stricter boundaries when compared to packages.</li>\n<li>Encourages Open Source of the newly created libraries.</li>\n<li>Makes Instant Apps &amp; Dynamic Features possible (improving discoverability).\nWe think it is a must in any Android project</li>\n</ul><p><ul>\n<li>Scale and Maintainability</li>\n<li>Gradle builds faster</li>\n<li>Smaller APKs</li>\n<li>Reusable Code</li>\n<li>Contribute to open source</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Python ASGI",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p>ASGI stands for <em>Asynchronous Server Gateway Interface</em> as opposed to the more known WSGI (\n<em>Web Server Gateway Interface</em>). Although ASGI Frameworks are less known, it is time to start using them instead of the older WSGI frameworks.\nAsynchronous frameworks have proven themselves in many other languages to be far superior to their synchronous counterparts in terms of latency, scalability, and High Availability.\nSome of those frameworks are:</p>\n<ul>\n<li><a href=\"https://sanic.readthedocs.io/\">SANIC</a></li>\n<li><a href=\"https://www.starlette.io/\">Starlette</a></li>\n<li><a href=\"https://fastapi.tiangolo.com/\">FastAPI</a></li>\n<li><a href=\"https://responder.kennethreitz.org/\">Responder</a></li>\n<li><a href=\"http://cyclone.io/\">Cyclone</a>\nand many others.</li>\n</ul><p><p>For reasons of latency, scalability, and high availability I would strongly suggest using these frameworks. Not only are they asynchronous by nature, their programming model is more modern and fun to use.</p></p>",
            "isNew": false
        },
        {
            "name": "gRPC",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>**gRPC **(Google Remote Procedure Call) is an open-source remote procedure call (RPC) system initially developed at Google. It uses HTTP/2 for transport, Protocol Buffers as the interface description language, and provides features such as authentication, bidirectional streaming, and flow control, blocking or nonblocking bindings, cancellation and timeouts. It generates cross-platform client and server bindings for many languages (C++, Java, Python Node, etc).</p>\n<p>Many of our clients show interest and integrate gRPC in their systems. The shared language-neutral Protobuf definition allows them to create all code for all languages automatically and helps with the interoperability of different systems.</p><p><p>gRPC is a&nbsp;Cloud Native Computing Foundation,\nit enables bidirectional streaming and flow control over HTTP/2.</p>\n<p>Many of our clients show interest and integrate gRPC in their systems. It is another open-source from Google and is wildly used in the industry.</p></p>",
            "isNew": false
        },
        {
            "name": "Saga Pattern",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p>A saga is a sequence of local transactions where each transaction updates data within a single service. In a microservice architecture, each service in a saga performs its own transaction and publishes an event. The other services listen to that event and perform the next local transaction. If one transaction fails for some reason, the saga also executes compensating transactions to undo the impact of the preceding transactions. It is a very well-known pattern for solving the problem of <em>data consistency across micro-services</em>. The first paper about it was published back in 1987 and has been a popular solution since then.</p>\n<p>Any solution which needs to guarantee data consistency across micro-services should start implementing this pattern as it solves many problems.</p><p><p>We are thinking the sagas are preferable approach to implement distributed transactions in MSA, rather than two phase commit. They are more robust and  scalable and also working much better for long running transactions.</p></p>",
            "isNew": false
        },
        {
            "name": "Navigator 2.0",
            "quadrant": "Mobile",
            "ring": "Start",
            "description": "<p>Flutter is the new <strong>Google’s</strong> framework for creating high quality apps both for Android and iOS with a single codebase.\nThe framework is based on <a href=\"https://trello.com/c/w5WPLf8u/268-dart\">Dart programming language</a> which eventually generates an Android’s APK and iOS IPA packages.</p>\n<p>Flutter first introduced in May 2017, and currently still in beta but so far, its already has a large community around the world.</p>\n<p>Compared to other cross platform frameworks such as ReactNative which usually relays on the platform native UI widgets, Flutter internally renders the UI widgets and draw them directly on the screen canvas. This makes flutter much faster and more reliable when it comes to backwards support.\nAs said above, Flutter has large community already, it has highly rich documentation and has Google’s Support.\nFor more details checkout about Flutter in their <a href=\"https://flutter.io/\">home page</a></p><p><ul>\n<li>The new navigation system for flutter</li>\n</ul>\n<h2 id=\"bettersupportforwebdesktop\">- Better support for Web &amp; Desktop</h2></p>",
            "isNew": false
        },
        {
            "name": "DataHub",
            "quadrant": "Backend",
            "ring": "Start",
            "description": "<p>DataHub is an open-source metadata management platform for the modern data stack that enables data discovery, data observability, and federated governance. It was built by Linkedin in their third(!) attempt to create&nbsp;an open, extensible and pluggable data catalog and it seems the third time's a charm. It works by pushing the metadata to the catalog, but it also has its own data discovery features including lineage, statistics, data preview and many more features.</p><p><p>Many companies are seeing the benefits of a Data Catalog. The market for these solutions is starting to grow but Linkedin's Datahub seems most mature and well rounded. We recommend starting to use this software as the solution to your data cataloging needs.</p></p>",
            "isNew": false
        },
        {
            "name": "Prefect",
            "quadrant": "Backend",
            "ring": "Try",
            "description": "<p>Prefect is an open-source automation and scheduling engine used for taking any code and transforming it into a robust, distributed workflow.\nIt was developed in order to address some faults in the popular workflow Airflow. Airflow restricted the developers to stick to its very strict vocabulary.</p>\n<p>Prefect addresses many features that were missing in Airflow, like:</p>\n<ul>\n<li>DAGs which need to be run off-schedule or with no schedule at all</li>\n<li>DAGs that run concurrently with the same start time</li>\n<li>DAGs with complicated branching logic</li>\n<li>DAGs with many fast tasks</li>\n<li>DAGs which rely on the exchange of data</li>\n<li>Parametrized DAGs</li>\n<li>Dynamic DAGs</li>\n</ul><p><p>We should try Prefect because in order to run complex workflows in the Big Data world, there is a need for a concise framework that can be highly available on one side, and also easy to manage</p></p>",
            "isNew": false
        },
        {
            "name": "WebAssembly",
            "quadrant": "Frontend",
            "ring": "Keep",
            "description": "<p>Since HTML5 has come out, and the browsers have stopped running plugins, hosting non-javascript code in the browser may come alive with WebAssembly.\n<a href=\"https://webassembly.org\">WebAssembly</a> (abbreviated Wasm) is a binary instruction format for a stack-based virtual machine. Wasm is designed as a portable target for compilation of high-level languages like C/C++/Rust, enabling deployment on the web for client and server applications.</p><p><p>We want to promote web assembly since it enables heavy processing on the browser via an asynchronous parallel thread. it can be used to analyze and process almost everything including heavy graphics.</p></p>",
            "isNew": false
        },
        {
            "name": "RecyclerView ",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>If your app needs to display a scrolling list of elements based on large data sets (or data that frequently changes), you should use RecyclerView.</p><p><ul>\n<li>The RecyclerView component is a more advanced and flexible version of ListView, and currently the best option for show list of items.</li>\n<li>Automatically caching items</li>\n<li>Very Fast Performance</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "SLSA",
            "quadrant": "DevOps",
            "ring": "Try",
            "description": "<p>SLSA is a set of standards and technical controls you can adopt to improve artifact integrity, and build towards completely resilient systems. It’s not a single tool, but a step-by-step outline to prevent artifacts being tampered with and tampered artifacts from being used, and at the higher levels, hardening up the platforms that make up a supply chain. These requirements are explained below, along with the rest of the essential specifications.</p><p><p>Artifact integrity has become a big issue when dealing with many repositories or many registries. with zero Trust policies this set of standards should help adopt tools that implement a policy that should cover all types of artifacts in one tool to analize Security vulnerabilities ahead of time due to this common standard</p></p>",
            "isNew": true
        },
        {
            "name": "Tekton - Pipeline",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>Tekton is a powerful yet flexible Kubernetes-native open-source framework for creating continuous integration and delivery (CI/CD) systems.</p><p><p>Powerful Kubernetes-native open-source framework for creating continuous integration and delivery (CI/CD) systems with Tekton custom k8s objects that allow flexible abstraction to common tasks.</p></p>",
            "isNew": false
        },
        {
            "name": "Eclipse MicroProfile",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p>The <a href=\"https://microprofile.io/\">Eclipse MicroProfile</a> is a set of specifications regarding Enterprise Java for a micro-services architecture. By adhering to this spec one can promise application portability across multiple MicroProfile runtimes. The specifications include the following specs: JAX-RS 2.0, CDI 1.1, JSON-P 1.0, Configuration 1.1, Fault Tolerance, JWT, Metrics, and Health Check, and even more.</p><p><p>We recommend keep implementing this set of specifications as it is minimalist in nature and designed for the micro-service architecture which is very popular today. Many micro-frameworks have adopted the Eclipse MicroProfile as the governing spec.</p></p>",
            "isNew": false
        },
        {
            "name": "Celery",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p>Celery is a simple, flexible, and reliable distributed system to process vast amounts of messages, while providing operations with the tools required to maintain such a system.\nIt’s a task queue with focus on real-time processing, while also supporting task scheduling.</p><p><p>A popular use case for example is performing heavy background computation where you don't necessarily need it to be run by the same process. By using a task queue you can run background tasks in multiple processes, and especially, in multiple servers.\nCelery has high level abstractions and tooling built just for that. It supports multiple broker backends such as RabbitMQ, Redis and Amazon SQS. \nCelery is widely adopted and has a large and diverse community of users and contributors</p></p>",
            "isNew": false
        },
        {
            "name": "Chef",
            "quadrant": "DevOps",
            "ring": "Stop",
            "description": "<p>Chef is a pool based configuration management tool. The pool paradigm enables the chef to manage very large infrastructure from a single server that contains a repository of “recipes”  and “cookbooks” written in a ruby based DSL.\nThe shift to container-based deployments (and orchestrators such as Kubernetes) reduced the need for server configuration management tools.</p><p><p>The shift to container-based deployments (and orchestrators such as Kubernetes) reduced the need for server configuration management tools.</p></p>",
            "isNew": false
        },
        {
            "name": "CSS Variables",
            "quadrant": "Frontend",
            "ring": "Keep",
            "description": "<p>CSS variables are entities defined by CSS authors that contain specific values to be reused throughout a document. They are set using custom property notation (e.g., <code>--main-color: black;</code>) and are accessed using the <code>var()</code> function (e.g., color: var(--main-color);).</p>\n<p>Complex websites have very large amounts of CSS, often with a lot of repeated values. For example, the same color might be used in hundreds of different places, requiring global search and replace if that color needs to change. CSS variables allow a value to be stored in one place, then referenced in multiple other places. An additional benefit is semantic identifiers. For example, --main-text-color is easier to understand than #00ff00 especially if this same color is also used in other contexts.</p>\n<p><a href=\"https://caniuse.com/#feat=css-variables\">CSS variables</a> are supported in all currently used browsers except IE and Opera Mini.</p><p><p>CSS variables provide natively supported API for binding data into styling, which is supported by all major browsers. It helps you overcome site complexity with less code involved and share styles without the use of preprocessors.</p>\n<p>Because that's a native browser capability, it is better than using a pre-generated code variable (as in SASS, LESS, or other libraries)</p></p>",
            "isNew": false
        },
        {
            "name": "Loki",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>Loki is like Prometheus, but for logs. It is designed to be very cost effective and easy to operate, and does not index the contents of the logs, but rather a set of labels for each log stream.</p><p><p>Loki is light in resources compared to the competitors (ELK, EFK).\nVery easy to maintain and give lots of value out of the box.\nBecause is good integration with Grafana can give the correlation between logs and metrics.</p></p>",
            "isNew": false
        },
        {
            "name": "Biometric Authentication",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>Biometric factors allow for secure authentication on the Android platform. The Android framework includes face and fingerprint biometric authentication. Android can be customized to support other forms of biometric authentication.</p><p><ul>\n<li>users are now favouring biometric authentication like fingerprint sensors to unlock their smartphones and tablets, mainly because they speed and simplify the unlocking process while reducing the cognitive burden of remembering multiple long passwords.</li>\n<li>Use of biometrics increases security: passwords are easy to steal, while faking biometrics is much more difficult.</li>\n<li>user has to setup only once biometrics fingerprint and can use across all applications installed on device that are using biometric.&nbsp;</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "MotionLayout",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>MotionLayout is a layout type that helps you manage motion and widget animation in your app. MotionLayout is a subclass of ConstraintLayout and builds upon its rich layout capabilities. As part of the ConstraintLayout library, MotionLayout is available as a support library and is backwards-compatible to API level 14. More info <a href=\"https://developer.android.com/training/constraint-layout/motionlayout\">here</a></p><p><ul>\n<li>Easy views animation&nbsp;</li>\n<li>Jetpack member&nbsp;</li>\n<li>Improved animation performance</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Puppet",
            "quadrant": "DevOps",
            "ring": "Stop",
            "description": "<p>Puppet is a software configuration management tool that includes its own declarative language to describe system configuration. It is a model-driven solution that requires limited programming knowledge to use.</p><p><p>Puppet, like Chef, is no longer needed in today's systems. K8S became the new \"VM\". If we really need these \"configuration\" capabilities, we might use Ansible. </p></p>",
            "isNew": true
        },
        {
            "name": "CQRS",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p>CQRS is an alternative to the traditional multi-layer system design. It separates behavior and read models and forces the business logic to be developed decoupled from data provisioning.</p>\n<p>The main benefits of CQRS:</p>\n<ul>\n<li>separates scalability for reads and writes</li>\n<li>simplifies concurrency and locking management</li>\n<li>increases maintainability</li>\n<li>fits well event-driven and microservices architectures</li>\n</ul>\n<p>We are advising to use CQRS because this approach helps to keep your project healthy in the long-term and solves many of scale and concurrency issues.</p><p><p>The CQRS design pattern raises the idea of separating writing and reading data from object to system level. This means, for example, that an application has not only one but two APIs to address it: While one API is used for writing data, the other is used for reading.&nbsp;CQRS is suitable for systems in which the number of writing and reading accesses differs greatly and/or for&nbsp;systems whose read and write sides should be scaled individually.</p></p>",
            "isNew": false
        },
        {
            "name": "Tensorflow",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p>TensorFlow is a set of libraries for building ML models. It is written in C with a facade in Python, which make it both very fast and usable for data scientists. It includes tools for data transformation, model training, evaluation and deployment. Its specialty is in the area of Deep Learning.</p><p><p>TensorFlow is still very popular and enjoy the support of Google. Keras, which is another widely used ML/DL framework is included and supported in TF projects.</p></p>",
            "isNew": true
        },
        {
            "name": "Android App Bundle ",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>The Android App Bundle is Android's new, official publishing format that offers a more efficient way to build and release your app.\nThe Android App Bundle lets you more easily deliver a great experience in a smaller app size.</p><p><ul>\n<li>It's easy to switch too.</li>\n<li>You don't need to refactor your code to start benefiting from a smaller app.</li>\n<li>You will benefit from modular app development and customizable feature delivery.</li>\n<li>Improve install success and reduce uninstalls.</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Just in time infrastructure (JiTI)",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>This trend deals with avoiding on going compute capacity management. It can be achieved in several ways and using a variety of tools. One can be FaaS (Function as a Service), where we trigger a Serverless function per need, without bothering the compute capacity needed. In the Kubernetes arena we can use AWS - Karpenter and GCP Node auto-provisioning, to optimize needed compute resources by monitoring the cluster's activities and loads.</p><p><p>As compute management is becoming a complex mission, the industry is moving to \"just in time infrastructure\".</p></p>",
            "isNew": true
        },
        {
            "name": "(NSM) Network Service Mesh",
            "quadrant": "DevOps",
            "ring": "Try",
            "description": "<p>Network Service Mesh (<strong>NSM</strong>) is a novel approach to solving complicated&nbsp;<a href=\"https://en.wikipedia.org/wiki/Data_link_layer\">L2</a>/<a href=\"https://en.wikipedia.org/wiki/Network_layer\">L3</a>&nbsp;use cases in&nbsp;<a href=\"https://kubernetes.io/\">Kubernetes</a>&nbsp;that are tricky to address within the existing&nbsp;<a href=\"https://caylent.com/kubernetes-networking-model/\">Kubernetes Network Model</a>. Inspired by&nbsp;<a href=\"https://istio.io/\">Istio</a>, Network Service Mesh maps the concept of a service mesh to L2/L3 payloads.</p><p><p>NSM is taking the 7 layer approach we see in service meshes such as Istio in layers 2 &amp; 3, this is mainly designed for multi-cloud &amp; multi-cluster environments.</p></p>",
            "isNew": false
        },
        {
            "name": "Kubeflow",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>Kubeflow is a framework for deploying ML workflows on Kubernetes cluster. It is based on Argo Workflow and provides a Python API to easily create Argo workflows without the need to write YAML files. Kubeflow include all the ingredients for a full ML development: research with JupyterLabs, training and experimenting via pipelines and model lifecycle management.</p><p><p>As a relatively new project, it supports cloud-native distribution as it can be installed on any Kubernetes system. It uses the k8s infrastructure to execute model training and serving. It is part of a broader area of MLOps and its popularity is constantly growing.</p></p>",
            "isNew": false
        },
        {
            "name": "Scikit-Learn",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p>Scikit-learn is a free software machine learning library for the Python programming language. It features various classification, regression and clustering algorithms including support vector machines, random forests, gradient boosting, k-means and DBSCAN, and is designed to interoperate with the Python numerical and scientific libraries NumPy and SciPy.\nIt contains tools for data manipulation necessary for machine learning project and even if one is using other Python-based libraries such as Keras or TensorFlow, she probably finds herself using one of the tools provided by Scikit learn.</p><p><p>Scikit-Learn is one of them most widely used tools in ML projects. It is easy to understand, with logical structure and a large community behind it. It keeps evolving rapidly with many contributors and finally - it is open-source! Thus, we recommend keep using it.</p></p>",
            "isNew": false
        },
        {
            "name": "Google Config Connector",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>Config Connector is a Kubernetes addon that allows you to manage Google Cloud resources through Kubernetes.</p><p><p>Google config connector allows you to manage Google Cloud resources through Kubernetes manifest.</p></p>",
            "isNew": false
        },
        {
            "name": "Kafka",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p><strong>Apache Kafka</strong> is a distributed streaming platform\nKafka has three key capabilities:</p>\n<ul>\n<li>Publish and subscribe to streams of records, similar to a message queue or enterprise messaging system.</li>\n<li>Store streams of records in a fault-tolerant durable way.</li>\n<li>Process streams of records as they occur.</li>\n</ul>\n<p>Kafka is generally used for two broad classes of applications:</p>\n<ul>\n<li>Building real-time streaming data pipelines that reliably get data between systems or applications</li>\n<li>Building real-time streaming applications that transform or react to the streams of data</li>\n</ul>\n<p>A more comprehensive definition could be <a href=\"https://kafka.apache.org/intro\">read here</a></p><p><p>Kafka is a reliable tool to quickly ingest data and serve it forward, with the addition of tools such as KSQL and Kafka streams Kafka is becoming a more comprehensive platform for a data platform.</p></p>",
            "isNew": false
        },
        {
            "name": "Devops for Developers",
            "quadrant": "Frontend",
            "ring": "Start",
            "description": "<p><p>Frontend developers need to know also Caching / AWS CLI / Docker / Kubernetes </p></p>",
            "isNew": false
        },
        {
            "name": "Devops for Developers",
            "quadrant": "Mobile",
            "ring": "Start",
            "description": "<p><p>Frontend developers need to know also Caching / AWS CLI / Docker / Kubernetes </p></p>",
            "isNew": false
        },
        {
            "name": "Moment",
            "quadrant": "Frontend",
            "ring": "Stop",
            "description": "<p>A library for parsing, formatting and arithmetic methods on dates. </p><p><p>Moment.js has stopped adding new feature and is now in maintanance only phase. Therefore we recommend stop using it.</p></p>",
            "isNew": true
        },
        {
            "name": "Micro Frontends",
            "quadrant": "Frontend",
            "ring": "Start",
            "description": "<p>Micro-Frontends approach enables us to split our products into separate modules as any of them is built with any web technology (i.e. React/Angular/Vue/…). A thin code layer orchestrates them as a single product, keeping the UX intact. The approach enables companies to stale rewrites of old production code and combines new technologies with legacy ones without breaking everything.</p>\n<p>Integrations between apps, products encapsulated in other products, etc. when apps are written in different frameworks/tooling</p>\n<p>This architecture may release the organization from being bound to a certain technology even when obsolete. It brings the microservice world to the frontend, along with the challenge of SPA user experience</p><p><p>Micro-frontend approach is now used for various purposes such as: </p>\n<ol>\n<li>Technology migrations </li>\n<li>Technology independence </li>\n<li>Different CI/CD for teams </li>\n</ol>\n<p>It gains more popularity because iFrames have stopped being \"intimidating\"  and they still used as the main implementation for micro-frontends, along with Module Federation which  still has its limitation (technology coupling) </p>\n<p>We think it is mature enough to start using it.</p></p>",
            "isNew": false
        },
        {
            "name": "ClearML",
            "quadrant": "Backend",
            "ring": "Try",
            "description": "<p>All in one tool for machine learning software development. It gives data scientists tools to manage experiments, orchestrate workloads, and manage data. It's an open-source and integrates with whatever toolchain a team is using already.</p><p><p>It’s simple and batteries included. Can be integrated with existing tools in current ML solutions. You can use only part of its functionality. No vendor locking</p></p>",
            "isNew": true
        },
        {
            "name": "HELM / Umbrella Chart",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>Helm, short for Helm Charts which help manage Kubernetes applications — Helm Charts helps you define, install, and upgrade even the most complex Kubernetes applications.</p>\n<p>Charts are easy to create, version, share, and publish. There are Helm Registry offerings from both Quay.io and Artifactory. HELM helps to manage Services, Deployment, Secrets and all parts related to Kubernetes ready applications.\n **Umbrella chart **, To install a complex application with helm\n— There is something called umbrella chart\nUmbrella chart is a chart with dependency (requirements.yaml) on other charts.\nand value.yaml (override charts values)\nTo install umbrella-chart you run  “helm dep update” will download depended on chart , then “helm install” or “helm upgrade” will install the charts</p><p><p>The Umbrella pattern allows you to deploy assembly of multiple microservice has one version and use it as a kind of release to install in different data centers.</p></p>",
            "isNew": false
        },
        {
            "name": "AutoML",
            "quadrant": "Backend",
            "ring": "Start",
            "description": "<p>AutoML like other No-code tools can rid you of manual work related to model selection and tuning. Also, it can partially help with feature selection. Even automate whole pipeline selection. But it can not help with business understanding or indicate that the training dataset was biased.\nThere are plenty of AutoML tools either offline and cloud platform based\nThe two general use-cases we find AutoML beneficial for are:</p>\n<ul>\n<li>A data scientist can use it to automate daily tasks such as model selection and pipeline optimization</li>\n<li>Non-pro can use it at the initial stage of a project to test and decrease time to market</li>\n</ul><p><p>AutoML is simple, flexible, uses fewer resources to uphold the performance and is cost-effective. The tool saves time and allows its user to focus on the most important issues, such as business understanding and integrating AI results with the main product.</p></p>",
            "isNew": false
        },
        {
            "name": "Micro K8s local inst.",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p>It was always about trying to develop and test to as close a production environment as possible, and with a local micro k8s installation we can achieve just that. You can test your code, your container and your deployment on your local machine giving you a much higher level of confidence in your deployment. Depending on your stack, you might also run the minimum of your microservice env on your local machine, making it ideal to develop, test and debug with a very high throughput you cannot get anywhere else.</p><p><p>Using a local micro Kubernetes installation allows users to fully test locally Kubernetes applications. We recommend using one of the many micro k8s installations (kind, k3s, k3d, microk8s, rancher-desktop) and leverage this possibility to your success.</p></p>",
            "isNew": true
        },
        {
            "name": "CDC",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p>Change Data Capture (aka CDC) is a design pattern for tracking data changes and performing actions according to the change.</p><p><p>In the world of Micro-Service and cloud computing, we are in constant need to enrich data and view data combined from multiple sources. Developing CDC solutions or building on open-source solutions, allows viewing the complete data in any application.</p></p>",
            "isNew": false
        },
        {
            "name": "Pulumi",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>Modern Infrastructure as Code for Developers and Infrastructure Teams. From Open Source to Enterprise.</p><p><p>Build, deploy, and manage modern cloud applications and infrastructure using familiar languages, tools, and engineering practices</p></p>",
            "isNew": false
        },
        {
            "name": "FFI",
            "quadrant": "Mobile",
            "ring": "Try",
            "description": "<p>Flutter mobile can use the dart:ffi library to call native C APIs. FFI stands for foreign function interface.&nbsp;</p>\n<p>- No native code adjustments&nbsp;required\n- Pure dart functionality\n- Support Android and iOS\n- Perfect for POC\n- Save precious development time</p><p><ul>\n<li>The dart FFI library is in beta, and breaking API changes might still happen.</li>\n<li>Not yet improved in performance such as the JNI.</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Node native test",
            "quadrant": "Frontend",
            "ring": "Try",
            "description": "<p><p>Node have come up with its own test runner, it is still experimental, on node 18, but we suggest trying it.</p></p>",
            "isNew": true
        },
        {
            "name": "Streaming Architecture",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p>With the need to give up to date results on large quantities of data, the community is moving from batch processing to stream processing.\nWhen designing such a system, the lambda architecture needs to be revised. Issues such as process time vs event time need to be addressed from the beginning as part of the overall architecture.  In addition, how to deal with late data needs to be part of the architecture and not an afterthought.</p><p><p>More and more companies are moving from batch processing to streaming. The full impact of this architecture needs to be taken into account</p></p>",
            "isNew": false
        },
        {
            "name": "Reactive Programming",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p><strong>Reactive Programming</strong>&nbsp;is a paradigm that changes the direction of the flow. Instead of creating threads and blocking for communications, we create pipelines where data is pass through and each layer can react to the data received. The indirection changes the code flow from blocked to async.</p>\n<p>Over time the reactive extensions have become a standard for adding higher level functionality on the stream of data while being agnostic to the data itself. The extensions are based on the observable pattern and allow for cancellation of the data process in stream</p><p><ul>\n<li>Reactive programming has been around for a while but has only started to hit the mainstream. Most popular frameworks like vertx and spring have support for reactive programming. For those looking for performance, reactive programming is a must.</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Reactive Programming",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p><strong>Reactive Programming</strong>&nbsp;is a paradigm that changes the direction of the flow. Instead of creating threads and blocking for communications, we create pipelines where data is pass through and each layer can react to the data received. The indirection changes the code flow from blocked to async.</p>\n<p>Over time the reactive extensions have become a standard for adding higher level functionality on the stream of data while being agnostic to the data itself. The extensions are based on the observable pattern and allow for cancellation of the data process in stream</p><p><ul>\n<li>Reactive programming has been around for a while but has only started to hit the mainstream. Most popular frameworks like vertx and spring have support for reactive programming. For those looking for performance, reactive programming is a must.</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Reactive Programming",
            "quadrant": "Frontend",
            "ring": "Keep",
            "description": "<p><strong>Reactive Programming</strong>&nbsp;is a paradigm that changes the direction of the flow. Instead of creating threads and blocking for communications, we create pipelines where data is pass through and each layer can react to the data received. The indirection changes the code flow from blocked to async.</p>\n<p>Over time the reactive extensions have become a standard for adding higher level functionality on the stream of data while being agnostic to the data itself. The extensions are based on the observable pattern and allow for cancellation of the data process in stream</p><p><ul>\n<li>Reactive programming has been around for a while but has only started to hit the mainstream. Most popular frameworks like vertx and spring have support for reactive programming. For those looking for performance, reactive programming is a must.</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "mist.io",
            "quadrant": "DevOps",
            "ring": "Try",
            "description": "<p>Mist is an open source platform for managing heterogeneous computing infrastructure, aka a Multicloud Management Platform.</p><p><p>A tool to manage multi-cloud infrastructure including private clouds.</p></p>",
            "isNew": true
        },
        {
            "name": "Chaostoolkit",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>A Short History of the <a href=\"https://chaostoolkit.org/\">Chaostoolkit</a>\n“We were trying to define a common, declarative API for chaos engineering”, this tool is an example of how “planning to fail” works in distributed / cloud-native / microservice architecture based products/solutions.</p>\n<p>Tools like this become part of your development process, stress testing your application isn’t a luxury, getting the accuracy of resilience &amp; scalability is a must with the growing demand of elastic/scalable infrastructure.</p><p><p>ChaosToolkit was one of the first frameworks we tested for running Chaos Experiments. \nFrom the Hypothesis  to the Experiment and Desired result.</p></p>",
            "isNew": false
        },
        {
            "name": "RealTime DataBase ",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>Firebase is a powerful platform for Mobile Android, iOS and WebApps.</p>\n<p>Firebase gives you functionality like analytics, databases, messaging and crash reporting so you can move quickly and focus on your users.\nFirebase is built on Google infrastructure and scales automatically.</p>\n<p>Firebase gives you many services such as:\nanalytics, Auth, Realtime database, Cloud Messaging, Storage, Crash reporting and more.</p>\n<p>Using One Firebase Console to control the services and data is provided.\nIt is easy to use and set up by using Firebase SDK libraries.</p>\n<h2 id=\"usuallyinordertosetupmostoftheservicesthereisawiderangeofdocumentationandcodeexamples\">Usually, in order to set up most of the services, there is a wide range of documentation and code examples.</h2>\n<p>Firebase App Distribution makes distributing your apps to trusted testers painless. By getting your apps onto testers' devices quickly, you can get feedback early and often. And if you use Crashlytics in your apps, you’ll automatically get stability metrics for all your builds, so you know when you’re ready to ship.</p>\n<p>What is in firebase:</p>\n<ul>\n<li>Cloud Firestore</li>\n<li>Cloud Functions</li>\n<li>Crash Reporting</li>\n<li>App Distribution</li>\n</ul><p><ul>\n<li>The Firebase Realtime Database is a cloud-hosted database. Data is stored as JSON and synchronized in realtime to every connected client. When you build cross-platform apps with our iOS, Android, and JavaScript SDKs, all of your clients share one Realtime Database instance and automatically receive updates with the newest data.</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "ML Kit ",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p><strong>ML Kit for Firebase</strong>&nbsp;ML Kit is a mobile SDK that brings Google’s machine learning expertise to Android and iOS apps in a powerful yet easy-to-use package. Whether you’re new or experienced in machine learning, you can implement the functionality you need in just a few lines of code. There’s no need to have deep knowledge of neural networks or model optimization to get started. On the other hand, if you are an experienced ML developer, ML Kit provides convenient APIs that help you use your custom TensorFlow Lite models in your mobile apps.\n<strong>Production-ready for common use cases</strong>&nbsp;ML Kit comes with a set of ready-to-use APIs for common mobile use cases: recognizing text, detecting faces, identifying landmarks, scanning barcodes, and labeling images. Simply pass in data to the ML Kit library and it gives you the information you need.\n<strong>On-device or in the cloud</strong>&nbsp;ML Kit’s selection of APIs run on-device or in the cloud. Our on-device APIs can process your data quickly and work even when there’s no network connection. Our cloud-based APIs, on the other hand, leverage the power of Google Cloud Platform’s machine learning technology to give you an even higher level of accuracy.</p><p><ul>\n<li>ML used correctly enhances the user experience. It makes your app seem more intelligent and personalized.</li>\n<li>The technology is supported by Google themselves.</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "PyTorch",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p>PyTorch is an open source deep learning framework built to be flexible and modular for research, with the stability and support needed for production deployment. PyTorch provides a Python package for high-level features like tensor computation (like NumPy) with strong GPU acceleration and TorchScript for an easy transition between eager mode and graph mode. With the latest release of PyTorch, the framework provides graph-based execution, distributed training, mobile deployment, and quantization.</p><p><p>Today PyTorch is very popular, head to head with TensorFlow. Very easy to use (much more easy to develop then in TensorFlow) and to deploy.\nIt’s becoming the new benchmark and definitely gaining more popularity than TensorFlow in terms of ease if use and model deployment.</p></p>",
            "isNew": true
        },
        {
            "name": "Great Expectations",
            "quadrant": "Backend",
            "ring": "Start",
            "description": "<p>Great Expectations helps data teams eliminate pipeline debt, through data testing, documentation, and profiling.</p><p><p>It’s&nbsp;declarative, flexible and extensible. Provides a rich vocabulary for data quality. Renders tests directly into clean, human-readable documentation. Your documentation is guaranteed to never go stale. Many tools like data catalogs or data ingestion pipelines already use the library for data profiling and quality assurance.</p></p>",
            "isNew": true
        },
        {
            "name": "confd",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>Template your app’s configuration with <a href=\"https://github.com/kelseyhightower/confd\">confd</a> \nIs a lightweight configuration management tool focused on:\nkeeping local configuration files up-to-date using data stored in remote values providers and processing template resources.\nreloading applications to pick up new config file changes</p>\n<p>Purpose\n  Detach environment related configuration management from application code.\n  This means that the app source repo will contain configuration files templates that fill be used to generate config files using external values providers at     deployment time.</p>\n<p>confd supports the following value stores:</p>\n<ul>\n<li>etcd</li>\n<li>consul</li>\n<li>dynamodb</li>\n<li>redis</li>\n<li>vault</li>\n<li>zookeeper</li>\n<li>aws ssm parameter store</li>\n<li>system environment variables yaml files</li>\n</ul>\n<p>This tool can:\n  Create environment-related config files at the deployment stage \n  Can watch for changes in “value store”, update configuration and perform an action (reload the config, restart the app, etc.)\nIt’s written in golang and all it’s templating is based on go-templates</p><p><p>Templating your app’s configuration with confd, is a lightweight configuration management tool focused on:\nkeeping local configuration files up-to-date using data stored in remote values providers and processing template resources.\nreloading applications to pick up new config file changes.</p></p>",
            "isNew": false
        },
        {
            "name": "eksctl",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>eksctl - eks command line utility</p><p><p>Eksctl is a very useful CLI, for maintaining and managing AWS EKS.</p></p>",
            "isNew": false
        },
        {
            "name": "CodeMagic",
            "quadrant": "Mobile",
            "ring": "Try",
            "description": "<p><ul>\n<li>Testing and deployment is on of the most important part in SW development and Flutter is no different.&nbsp;</li>\n<li>CI/CD process, provides an environment for our app to be tested, distributed, or published in any production platforms such as Play Store or Google Play.&nbsp;</li>\n<li>Codemagic is the first CI/CD platform designed for Flutter!&nbsp;This platform packs everything you need to test and deploy your Flutter app in an easy and friendly dashboard.</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "WebWorker",
            "quadrant": "Frontend",
            "ring": "Keep",
            "description": "<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API\">WebWorker</a> provides a mechanism to run scripts outside the main scope. using it can improve performance in highly scaled applications.</p>\n<p>Along with postMessage, webworker can communicate with the main scope, also by shared memory, which is risky but may also speeds up your application.</p><p><p>WebWorker is there for several years now, and it is widely used with many frameworks. Heaving heavy operations conducted in Webworker improves performance</p></p></p>",
            "isNew": false
        },
        {
            "name": "Event Driven X",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>We are surrounded by lots of operations that are triggered by many reasons. It can be manually, scheduled or by another triggered operation. The Event-Driven X trend, shows that almost everything is now becoming event-driven. For example, when we push to master in git, this is an event. This event will trigger automatically a CI/CD process. The CI/CD process is also an event that can trigger another process etc…\nThere are new concepts like GitOps that supports this trend. In addition, there are also older tools like FaaS (Function as a Service), which is very popular when implementing Event-Driven Operations. Using queues to deliver requests between components is also a good example.</p><p><p>The kye for Automation is Event-driven.</p></p>",
            "isNew": false
        },
        {
            "name": "React",
            "quadrant": "Frontend",
            "ring": "Keep",
            "description": "<p><strong>React</strong> is old news, but still, it keeps changing and improving.\nReact 16 has many improvements and features which worth to track.</p>\n<p>Among the changes are some long-standing feature requests, including fragments, error boundaries, portals, support for custom DOM attributes, improved server-side rendering, and reduced file size.</p><p><p>React is the most popular library for developing SPAs, it has a large community and its knowledge sharing is wide. Since it went into working with functional components and hooks only, it has become even easier to learn and use. </p></p>",
            "isNew": false
        },
        {
            "name": "Luxon",
            "quadrant": "Frontend",
            "ring": "Try",
            "description": "<p>Luxon is a a date time wrapper replacing moment.js, </p>\n<h2 id=\"features\">Features</h2>\n<ul>\n<li>DateTime, Duration, and Interval types.</li>\n<li>Immutable, chainable, unambiguous API.</li>\n<li>Parsing and formatting for common and custom formats.</li>\n<li>Native time zone and Intl support (no locale or tz files).</li>\n</ul>\n<p>https://moment.github.io/luxon/#/</p><p><p>As moment.js has gone into a  maintenance only phsase, Luxon looks as a good alternative for handling date and time in javascript. </p></p>",
            "isNew": true
        },
        {
            "name": "Cloud FaaS",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>AWS was the first provider to offer \"<a href=\"https://aws.amazon.com/releasenotes/release-aws-lambda-on-2014-11-13/\">functions as a service</a>\" already in AWS initially released AWS lambda as an event-driven provisioning/operations and took just under 3 years to become the standard name of serverless and FaaS offerings.</p>\n<p>AWS, as it’s competitors, offer Lambdas (a.k.a functions), as a complementary to their BaaS offerings, stitching together services such as:\n&nbsp;Incognito\n&nbsp;S3\n&nbsp;CloudFormation\n&nbsp;DynamoDB\n&nbsp;RDS and many more\nThese integrations alongside Lambda’s “infinite” scalability and it’s newly introduced (at the time) “Price per 100ms” made it very popular among both startups achieving their MVP and enterprises wishing to scale out or experiment with Serverless and Micro Services Architectures.\nAWS Lambda provides many organizations the ability to write functions in a variety of Software languages and integrates well with many frameworks and other IaaS/PaaS/BaaS services.</p>\n<p>More about <a href=\"https://aws.amazon.com/lambda/\">AWS Lambda</a> here</p>\n<p>Google functions enable Serverless applications based on GCP IaaS offerings.\nCloud Functions lets application developers spin up code on demand in response to events originating from any API / HTTP request. Serverless architectures utilizing Google Functions integrated with Google Endpoints and BaaS services could build applications that scale from zero to infinity, on-demand - without provisioning or managing a single server.</p>\n<p>As other serverless and function providers, google’s functions are the best fitted for Backend services such as Firebase, Cloud Datastore, and ML solutions also offered by the GCP.</p>\n<p>More info on google functions in the<a href=\"https://cloud.google.com/functions\"> following</a></p><p><p>In case you need quick development, with scale support and pay as you use.</p></p>",
            "isNew": false
        },
        {
            "name": "Flutter Provider Package ",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>A wrapper around InheritedWidget to make them easier to use and more reusable. A mixture of dependency injection (DI) and state management, built with widgets for widgets.</p>\n<p>It purposefully uses widgets for DI/state management instead of dart-only classes like Stream. The reason is, widgets are very simple yet robust and scalable.</p>\n<p>As the Provider package becomes one of the most popular packages in Flutter which also adopted by google - it certainly should be tried in Flutter apps.</p><p><ul>\n<li>Maintainability, through a forced uni-directional data-flow</li>\n<li>Testability/composability, since it is always possible to mock/override a value</li>\n<li>Robustness, as it is harder to forget to handle the update scenario of a model/widget</p></li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Monorepos",
            "quadrant": "Frontend",
            "ring": "Keep",
            "description": "<p>A repository that contains multiple packages or projects. Those projects can, but don’t have to be related. Most famous monorepo pioneers are Google, Facebook and Twitter.</p>\n<p>Monorepo enables development teams to work on a large-scale application with multiple modules in one repository, with separation of build/test processes between modules.\nFront-end developers use lerna or yarn with workspaces enabled. Lerna is a cli tool to manage monorepo projects by running bulk tasks in parallel or sequence.</p><p><p>Monorepos, over the years, has started to be used wider and wider, mainly after @Nrwl/Nx, but also after lerna, yarn workspaces and npm workspaces (since version 7) </p>\n<p>They are especially attractive for frontend, because of the ability to reuse code, to have our BFF written on the same repository and have one CI/CD for various applications.</p>\n<p>Therefore it's here to keep. </p></p>",
            "isNew": false
        },
        {
            "name": "Quarkus",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p>Quarkus is an Open Source stack to write Java applications offering unparalleled startup time, memory footprint and developer experience. It offers familiar programming models and APIs (Hibernate, JAX-RS, Eclipse Vert.x, Apache Camel, Eclipse MicroProfile, Spring API compatibility and more).</p>\n<p>It should be on our “Try”, as this framework brings JVM based languages back into microservices and cloud environments.</p><p><p>This framework brings JVM based languages back into micro-services and cloud environments.\nIt provides fast boot time, low RSS memory, offers near instant scale up and high density memory utilization in container orchestration platforms like Kubernetes.\nBy understanding JavaScript, TypeScript saves you time catching errors and providing fixes before you run code.</p></p>",
            "isNew": false
        },
        {
            "name": "Get_It",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>A simple Service Locator for Dart and Flutter.\nDependencies are a fundamental topic in SW development and Flutter is no different.&nbsp;\nWhen developing mobile apps, we create classes and classes requires dependencies to perform functionalities. For example, a Repository requires DataSource to execute api queries.&nbsp;</p>\n<p>There are a few options to provide such dependencies such as Constructor, Setters and more.&nbsp;</p>\n<p>However, it is a good practice to have some a service which creates and manage dependencies for us and will provide them when we need them in the right places. Such service called Dependency Injection, or Service Locator.&nbsp;</p>\n<p>On Android, we already have some well known and proven DI tools such as Dagger2 or KOIN in Kotlin.</p>\n<p>For Flutter, currently one of the most popular DI/Service Locator package is the GetIt package</p><p><ul>\n<li>Extremely fast (O(1))</li>\n<li>Easy to learn/use</li>\n<li>Doesn't clutter your UI tree with special Widgets to access your data like provider or Redux does.</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Delta Lake",
            "quadrant": "Backend",
            "ring": "Start",
            "description": "<p>Delta Lake is a storage layer that brings ACID\ntransactions to Apache Spark and big data workloads. It allows storage options and operations that were missing since the start of the BigData era, mostly transaction-related options and storage updates, such as add, merge and delete.\nThe BigData world has sacrificed attributes such as ACID and updates for the sake of speed and volume. But, since the growth of computing power, libraries, and techniques, those important attributes can be used again, along with the challenge of ever-growing data volumes.\nDelta Lake is an important endeavor, lead by DataBricks, to combine the important attributes of the traditional relational world with the power brought by BigData and parallel computing development of the past 10 years.</p><p><p>Delta Lake’s ACID transactions, UPSERT/MERGE support and time travel features allow organizations to reuse existing SQL queries to perform their ETL process directly on the object store, and to leverage familiar maintenance features such as rollbacks, time travel and audit logs. Moreover, using a single storage system (Delta Lake) instead of a separate data lake and warehouse reduces the latency to make new data queryable by removing the need for a separate ingest process. Finally, Delta Lake’s support of both SQL and programmatic APIs (via Apache Spark) makes it easy to write data engineering pipelines using a variety of tools.\nFor users that want to run ad-hoc query and BI workloads against their lakehouse datasets, either through SQL directly or through BI software such as Tableau, Delta Lake can support all these features directly for tables in a cloud object store, through its combination of columnar formats, data layout optimization, max-min statistics, and SSD caching</p></p>",
            "isNew": false
        },
        {
            "name": "GetStorage",
            "quadrant": "Mobile",
            "ring": "Start",
            "description": "<p><ul>\n<li>A fast, extra light and synchronous key-value in memory, which backs up data to disk at each operation.</li>\n<li>It is written entirely in Dart and easily integrates with <strong>GetX framework</strong> of Flutter.</li>\n<li>Can store String, int, double, Map and List</li>\n<li>Supports Android, iOS, Web, Mac, Linux, and fuchsia and Windows**.</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Keybase",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>Keybase has become for me one of the central tools, it enables me to securely correspond with my peers share files and even entire git repositories if needed.\nOne main benefit of using keybase is your very own hosted free pgp server so all your public certs are stored on keybase servers which means using pgp encryption and sharing encrypted data (even outside of keybase) has become a breeze. In addition, the keybase cli enables you to run clean code without worrying about storing sensitive data in it.</p>\n<p>We are now checking how a ci bot user could be part of the keybase network which could potentially provide storing secure build artifacts that are discoverable only by users that follow that bot user (gpg wise).\nWith this ci capability signing git commits, decrypting secrets in build time has just become much faster.</p>\n<p>The alternative solutions are much more expensive to operate not only in money … Managing servers for solutions such as Vault which of course could provide this type of solution in addition to other features of course. (and I also found a reference by hasicorp recommending th use of keybase for the initial password / cert of Vault).</p><p><p>When working together online, chat tools like Slack are useful, but allow the service provider to read your messages. Keybase simplifies the process of sharing files and having conversations securely.</p></p>",
            "isNew": false
        },
        {
            "name": "FastApi",
            "quadrant": "Backend",
            "ring": "Start",
            "description": "<p>FastAPI is a python web framework based on Starette and Pydantic. This gives FastAPI its speed - it runs with AsyncIO. Implementing a web server with FastAPI is easy, fast coding and high performance.</p><p><p>We recommend starting to use FastAPI in any Python project that exposes a web server. It is a better alternative to Flask, which blocks every call. Its community is already big and growing fast.</p></p>",
            "isNew": true
        },
        {
            "name": "GitHub Package Registry",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>GitHub Package Registry is a software package hosting service, similar to npmjs.org, rubygems.org, or hub.docker.com, which allows you to develop your code and host your packages in one place. You can host software packages privately or publicly and use them as dependencies in your projects.</p>\n<p>GitHub Package Registry uses the native package tooling commands you’re already familiar with to publish, query, download, and change package versions and currently supports the following clients and formats: npm, gem, mvn, docker and nugat.</p>\n<p>This approach can be useful when you want to host deployed artifacts next to their sources or when an artifact repository is unavailable or you don’t want to maintain one.</p><p><p>GitHub Package Registry provides you with one centralized place to host and manage both your sources and packages. It's compatible with common package management tools and supports various types of packages. Easily&nbsp;integrated with GitHub APIs, GitHub Actions, and webhooks to create an end-to-end DevOps workflow that includes your code, CI, and deployment solutions.</p></p>",
            "isNew": false
        },
        {
            "name": "Github Actions",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>GitHub Actions makes it easy to automate all your software workflows, now with world-class CI/CD. Build, test, and deploy your code right from GitHub. Make code reviews, branch management, and issue triaging work the way you want.</p><p><p>A robust ci/cd out of the bix tool, that is repo oriented in Github.</p></p>",
            "isNew": true
        },
        {
            "name": "Yarn worskapces",
            "quadrant": "Frontend",
            "ring": "Keep",
            "description": "<p><p>Yarn workspaces are with us for long time now, it provides an easy way of maintaining a monorepo using Yarn,  </p></p>",
            "isNew": true
        },
        {
            "name": "Vision Deep Learning",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p>CV (Computer vision) Deep learning (notably CNN - Convolutional Neural Network) has been a benchmark for the past 8 years and has been developed and evolved as visual data training set has surged and GPU hardware became commodity. This technology can detect objects, classify them, describe visual scene and even be the basis for GAN that can generate deep fake videos.</p><p><p>Visual (images, videos) data is still surging and stored at unprecedented rates. Companies understand that these types of unstructured data can yield high value if only they assign the resources to process and model it.</p></p>",
            "isNew": true
        },
        {
            "name": "Server side rendering",
            "quadrant": "Frontend",
            "ring": "Keep",
            "description": "<p>Although browsers are running more and more applications, and fewer and fewer websites, server-side rendering is still important for search engines, content previews when sharing apps, and it still makes our page load faster where static content is involved.</p>\n<p>There are techniques for rendering content on the server-side which involves running client code on the server, for SEO and initial page load, which we may recommend to start using.</p><p><p>Server-side rendering allows to pre-populate an initial web page with required data directly on the server. It is generally faster to make all requests within a server than making extra browser-to-server round-trips for them (as client-side rendering does). It may help fast delivery of a web page to users with a slow internet connection or slow devices.\nAlso, SSR is one of the best ways to help search engine and social network bots crawl the website.</p></p>",
            "isNew": false
        },
        {
            "name": "day.js",
            "quadrant": "Frontend",
            "ring": "Keep",
            "description": "<p>Date time libarry, largely moment-compatible.</p>\n<h3 id=\"\"> </h3>\n<h3 id=\"2kb\">2kB</h3>\n<p>Less JavaScript to download, parse and execute, leaving more time for your code.</p>\n<h3 id=\"simple\">Simple</h3>\n<p>Day.js is a minimalist JavaScript library that parses, validates, manipulates, and displays dates and times for modern browsers with a largely Moment.js-compatible API.\nIf you use Moment.js, you already know how to use Day.js.</p>\n<h3 id=\"immutable\">Immutable</h3>\n<p>All API operations that change the Day.js object will return a new instance instead.\nThis helps prevent bugs and avoid long debugging sessions.</p>\n<h3 id=\"i18n\">I18n</h3>\n<p>Day.js has great support for internationalization. But none of them will be included in your build unless you use them.</p><p><p>Largely moment.js compatible library for date &amp; time, which is still maintained, so if you are using it, we recommend that you keep it.</p></p>",
            "isNew": true
        },
        {
            "name": "Glide ",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>Glide is a fast and efficient open source media management and image loading framework for Android that wraps media decoding, memory and disk caching, and resource pooling into a simple and easy to use interface.</p><p><ul>\n<li>Glide supports fetching, decoding, and displaying video stills, images, and animated GIFs.&nbsp;</li>\n<li>Glide includes a flexible API that allows developers to plug in to almost any network stack. By default Glide uses a custom HttpUrlConnection based stack, but also includes utility libraries plug in to Google's Volley project or Square's OkHttp library instead.</li>\n<li>Glide's primary focus is on making scrolling any kind of a list of images as smooth and fast as possible, but Glide is also effective for almost any case where you need to fetch, resize, and display a remote image.</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "GitLab-CI",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>GitLab CI/CD is a tool built into GitLab for software development through the continuous methodologies:</p>\n<p>Continuous Integration (CI)\nContinuous Delivery (CD)\nContinuous Deployment (CD)</p><p><p>GitLab CI/CD pipeline is a great tool integrated with the GitLab suite, Very easy to use with lots of predefined templates.</p></p>",
            "isNew": false
        },
        {
            "name": "LakeFS",
            "quadrant": "Backend",
            "ring": "Try",
            "description": "<p>LakeFS provides a git-like approach to manage data versions.\nBranching, merges, commits and reverts for large datasets</p>\n<ul>\n<li>Provides ACID transactions</li>\n<li>Uses S3 and GCS for storage</li>\n<li>Format agnostic</li>\n<li>Supporting very large data lakes</li>\n<li>On prem and SaaS</li>\n</ul><p><p>LakeFS enables faster development of data products while reducing errors:</p>\n<ul>\n<li>Keeps the datasets immutable to make the reproducible ML</li>\n<li>Minimize the storage footprint by reducing duplication</li>\n<li>Atomic and isolated operations in data pipelines prevents race conditions and partially failed operations</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "AirByte",
            "quadrant": "Backend",
            "ring": "Try",
            "description": "<p>AirByte is an open source data integration standard to sync data from applications, APIs and databases.\nIt supports:</p>\n<ul>\n<li>Builtin extensibility</li>\n<li>Scheduler</li>\n<li>R/T monitoring\nAirByte supports local deployments and AirByte cloud for a fully managed service.</li>\n</ul><p><p>The CDC continues to be a trend, and developers who are looking for solutions which would not only support databases, should assess AirByte to see how it fits their problem.\nData integration of APIs, applications and databases, should simplify the data integrations and allow one place to monitor all.</p></p>",
            "isNew": true
        },
        {
            "name": "Python 2",
            "quadrant": "DevOps",
            "ring": "Stop",
            "description": "<p><strong>Python</strong> is a powerful high-level, interpreted, open source, object-oriented programming language, portable, extensible and embeddable with simple syntax and large standard libraries to solve common tasks.\nPython is a general-purpose language. It has a wide range of applications from Web development (like Django and Bottle), scientific and mathematical computing (Orange, SymPy, NumPy) to desktop graphical user Interfaces (Pygame, Panda3D).</p><p><p>Python 2.7 will not be maintained past 2020. Originally, there was no official date. Recently, that date has been updated to January 1, 2020. We suggest stopping using this version, especially for new projects.</p></p>",
            "isNew": false
        },
        {
            "name": "useSelector",
            "quadrant": "Frontend",
            "ring": "Start",
            "description": "<p>The selector is approximately equivalent to the&nbsp;<a href=\"https://react-redux.js.org/using-react-redux/connect-mapstate\"><code>mapStateToProps</code>&nbsp;argument to&nbsp;<code>connect</code></a>&nbsp;conceptually. The selector will be called with the entire Redux store state as its only argument. The selector will be run whenever the function component renders (unless its reference hasn't changed since a previous render of the component so that a cached result can be returned by the hook without re-running the selector).&nbsp;<code>useSelector()</code>&nbsp;will also subscribe to the Redux store, and run your selector whenever an action is dispatched.</p><p><p>The useSelector hook, enables to easily extract data from redux store to a component, by using an expression to get to that data in the store's state, called selector.</p>\n<p>In case you are using redux in your react app, we recommend start using it.</p></p>",
            "isNew": true
        },
        {
            "name": "Apache Hudi",
            "quadrant": "Backend",
            "ring": "Stop",
            "description": "<p>Apache Hudi manages the storage for BigData. It supports any HDFS compatible storage and enables ACID transactions in a data lake.</p><p><p>The operational overhead required to install and tune Hudi is high for real, large-scale production workloads.\nWe recommend using Iceberg or Delta Lake as alternatives.</p></p>",
            "isNew": false
        },
        {
            "name": "Crossplane",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>Crossplane is an open source Kubernetes add-on that extends any cluster with the ability to provision and manage cloud infrastructure, services, and applications using kubectl, GitOps, or any tool that works with the Kubernetes API.</p><p><p>Crossplane is another way to manage your infrastructure (including Kubernetes clusters and managed cloud services) from a single point using unified \"language\". It aims to enable kubectl as one-stop shop for everything infrastructure and the kubernetes yaml resource descriptor - the only language you need.</p></p>",
            "isNew": false
        },
        {
            "name": "Pinia",
            "quadrant": "Frontend",
            "ring": "Try",
            "description": "<p>Store management for Vue</p>\n<p>https://pinia.vuejs.org/</p><p><p>Might be a good solution for store management with less overhead than redux. We recommend trying it in case you wish to have a global store for your vue app.</p></p>",
            "isNew": true
        },
        {
            "name": "JCASC jenkins configuration as code + Library",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>Jenkins Configuration as Code: \nThe ‘as code’ paradigm is about being able to reproduce and/or restore a full environment within minutes based on recipes and automation, managed as code.</p><p><p>While Jenkins as a tool is fading out, the JCASC + Library is still here and serves existing systems.</p></p>",
            "isNew": true
        },
        {
            "name": "Valtio",
            "quadrant": "Frontend",
            "ring": "Start",
            "description": "<p>Valtio turns the object you pass it into a self-aware proxy.</p>\n<p>https://github.com/pmndrs/valtio</p><p><p>Valtio may be good solution for easily turns an object into proxy aware state. It comes with its own proxy function and useSnapshot hook which provide easy state management. It gained maturity enough for us to recommend start using it. </p></p>",
            "isNew": true
        },
        {
            "name": "date-fns",
            "quadrant": "Frontend",
            "ring": "Keep",
            "description": "<p>A modular library for date time, using native javascript dates. </p><p><p>A neat date-time library using native dates, has up to date commits on its git repository and widely adopted.</p></p>",
            "isNew": true
        },
        {
            "name": "HELM / Umbrella Chart",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>Helm, short for Helm Charts which help manage Kubernetes applications — Helm Charts helps you define, install, and upgrade even the most complex Kubernetes applications.</p>\n<p>Charts are easy to create, version, share, and publish. There are Helm Registry offerings from both Quay.io and Artifactory. HELM helps to manage Services, Deployment, Secrets and all parts related to Kubernetes ready applications.\n **Umbrella chart **, To install a complex application with helm\n— There is something called umbrella chart\nUmbrella chart is a chart with dependency (requirements.yaml) on other charts.\nand value.yaml (override charts values)\nTo install umbrella-chart you run  “helm dep update” will download depended on chart , then “helm install” or “helm upgrade” will install the charts</p><p><p>The Umbrella pattern allows you to deploy assembly of multiple microservice has one version and use it as a kind of release to install in different datacenters.</p></p>",
            "isNew": false
        },
        {
            "name": "HELM / Umbrella Chart",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p>Helm, short for Helm Charts which help manage Kubernetes applications — Helm Charts helps you define, install, and upgrade even the most complex Kubernetes applications.</p>\n<p>Charts are easy to create, version, share, and publish. There are Helm Registry offerings from both Quay.io and Artifactory. HELM helps to manage Services, Deployment, Secrets and all parts related to Kubernetes ready applications.\n **Umbrella chart **, To install a complex application with helm\n— There is something called umbrella chart\nUmbrella chart is a chart with dependency (requirements.yaml) on other charts.\nand value.yaml (override charts values)\nTo install umbrella-chart you run  “helm dep update” will download depended on chart , then “helm install” or “helm upgrade” will install the charts</p><p><p>The Umbrella pattern allows you to deploy assembly of multiple microservice has one version and use it as a kind of release to install in different datacenters.</p></p>",
            "isNew": false
        },
        {
            "name": "LocalStack",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p><a href=\"https://github.com/localstack/localstack\">LocalStack</a> - A fully functional local AWS cloud stack - LocalStack provides an easy-to-use test/mocking framework for developing Cloud applications.</p>\n<p>Currently, the focus is primarily on supporting the AWS cloud stack.\nThe tool has good support for Docker and enables developers to test services such as API Gateway, Kinesis &amp; DynamoDB from the comfort of their laptop.</p><p><p>An excellent tool for mocking AWS resources on a local machine.</p></p>",
            "isNew": false
        },
        {
            "name": "MLOps",
            "quadrant": "Backend",
            "ring": "Start",
            "description": "<p>MLOPs is a set of actions and practices from the DevOps world, aiming to develop and deploy ML projects in a reliable way. It includes tools to provide CI-CD-CT (Continuous Training) for ML projects, which differ from standard software projects.</p><p><p>MLOps are crucial to the success of ML projects. Part of the reasons ML projects often fail is lack of adequate practices and infrastructure. Adopting MLOps practices reduces time to market and increases confidence in the product. We recommend starting using MLOps practices, as ML projects become popular in almost every technology company, from start-ups to enterprises.</p></p>",
            "isNew": true
        },
        {
            "name": "Jetpack Compose",
            "quadrant": "Mobile",
            "ring": "Try",
            "description": "<p>Android Jetpack compose is the new toolkit for building Android Native UI.&nbsp;\nIt was revealed in the Google I/O 2019 as the new toolkit for building UI for Android .\nAs we know, building Android UI was and still made by defining Android View's objects in an XML which represents Layouts such as ConstraintLayout, RelativeLayout and Views such as Button, TextView and RecyclerView.\nAll these components inherit from the View.java class.&nbsp;</p>\n<p>As using this approach has proven itself for many years it also revealed a few problems.&nbsp;</p>\n<h2 id=\"androiduitoolkitapiisoldnbsp\">Android UI toolkit API is old&nbsp;</h2>\n<p>- The View.java class already has more than ***30,000 lines*** of code! Each and every View on the screen inherits from the View.java class.&nbsp;\nThe support for this api by the Google team is a nightmare and any new feature has the risk of backward compatibility and breaking changes.&nbsp;</p>\n<p>- Furthermore, most of the old UI api's developed in java and not utilising the benefits of Kotlin</p>\n<p>- In addition, Android UI kit is based on old programming paradigms, it heavily relies on inheritance (rather then composition) which is also considered as an old approach.&nbsp;&nbsp;</p>\n<h2 id=\"performance\">Performance</h2>\n<p>- Devices are much stronger since 10 years ago. The old Views api makes high performance requirements much difficult to develop.&nbsp;</p>\n<h2 id=\"notfullymaterialdesigncompatible\">Not fully Material Design compatible.</h2>\n<p>- Material Design was introduces in 2014, the Android UI kit had to aligned with the material design principles.</p><p><ul>\n<li>Modern language and paradigms</li>\n<li>UI reflects the app stat</li>\n<li>Efficiency and performance</li>\n<li>Material Design from the beginning</li>\n<li>Compatible with existing UI hierarchies</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "GoLang",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p>GO is A programming language introduced by Google in 2009. It is a compiled and strongly typed language similar to C, but bringing a much more intuitive syntax. Golang is basically a functional language, rather than a strict OOP, designed for high performance (as compiled to native machine code), without the bother to deal with thread synchronization.</p>\n<p>Our Perspective is to define distinct aspects in which GoLang may give better performance than the ‘standard’ stack of Java / Python / NodeJS, in backend development.</p><p><p>As MSA is becoming a standard of writing complex applications as a bunch of small and rather simple services, maintained by small pods of teams of 3-4 persons, well-known programming paradigms such as OOP and classic design patterns are no longer a must. The code has become much simpler and a new programming language such as GO is becoming more and more relevant: Simple, Only the required features are supported, there is ONLY one way to implement a thing, and very high performance of a native application.</p></p>",
            "isNew": false
        },
        {
            "name": "GoLang",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>GO is A programming language introduced by Google in 2009. It is a compiled and strongly typed language similar to C, but bringing a much more intuitive syntax. Golang is basically a functional language, rather than a strict OOP, designed for high performance (as compiled to native machine code), without the bother to deal with thread synchronization.</p>\n<p>Our Perspective is to define distinct aspects in which GoLang may give better performance than the ‘standard’ stack of Java / Python / NodeJS, in backend development.</p><p><p>As MSA is becoming a standard of writing complex applications as a bunch of small and rather simple services, maintained by small pods of teams of 3-4 persons, well-known programming paradigms such as OOP and classic design patterns are no longer a must. The code has become much simpler and a new programming language such as GO is becoming more and more relevant: Simple, Only the required features are supported, there is ONLY one way to implement a thing, and very high performance of a native application.</p></p>",
            "isNew": false
        },
        {
            "name": "Bitbucket Pipelines",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>Bitbucket Pipelines is an integrated CI/CD service built into Bitbucket. It allows you to automatically build, test, and even deploy your code based on a configuration file in your repository. Essentially, we create containers in the cloud for you.</p><p><p>A very powerful repo-oriented CI/CD tool, that is part of BitBucket. </p></p>",
            "isNew": true
        },
        {
            "name": "Spring Cloud",
            "quadrant": "Backend",
            "ring": "Stop",
            "description": "<p>Spring Cloud provides tools for developers to quickly build some of the common patterns in distributed systems. Coordination of distributed systems leads to boilerplate patterns, and using Spring Cloud developers can quickly span up services and applications that implement those patterns. They will work well in any distributed environment, including the developer’s own laptop, bare metal data centers, and managed platforms such as Cloud Foundry.</p><p><p>With the introduction of Kubernetes, more cohesive solutions to the problems Spring cloud solves are available.</p></p>",
            "isNew": false
        },
        {
            "name": "Google Pay",
            "quadrant": "Mobile",
            "ring": "Try",
            "description": "<p>Flutter is the new <strong>Google’s</strong> framework for creating high quality apps both for Android and iOS with a single codebase.\nThe framework is based on <a href=\"https://trello.com/c/w5WPLf8u/268-dart\">Dart programming language</a> which eventually generates an Android’s APK and iOS IPA packages.</p>\n<p>Flutter first introduced in May 2017, and currently still in beta but so far, its already has a large community around the world.</p>\n<p>Compared to other cross platform frameworks such as ReactNative which usually relays on the platform native UI widgets, Flutter internally renders the UI widgets and draw them directly on the screen canvas. This makes flutter much faster and more reliable when it comes to backwards support.\nAs said above, Flutter has large community already, it has highly rich documentation and has Google’s Support.\nFor more details checkout about Flutter in their <a href=\"https://flutter.io/\">home page</a></p><p><ul>\n<li>Google Pay SDK</li>\n<li>Enable a mobile application to use the Google Pay and connect credit card for mobile purchases</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "OCI Images",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>The Open Container Initiative is an open governance structure for the express purpose of creating open industry standards around container formats and runtimes.</p><p><p>Open Container Initiative, is now a recognized standard in the industry.</p></p>",
            "isNew": false
        },
        {
            "name": "Dagster",
            "quadrant": "Backend",
            "ring": "Try",
            "description": "<p>Dagster is a data orchestrator for machine learning, analytics, and ETL. It lets you define pipelines in terms of the data flow between reusable, logical components, then test locally and run anywhere.\nAt a high level Dagster lets you define data pipelines, or data flows between solids. A Solid in Dagster is some computation, when you combine different solids you get a Pipeline.</p><p><p>Dagster lets you define pipelines in terms of the data flow between reusable, logical components, then test locally and run anywhere. Dagster can schedule and orchestrate Pandas, Spark, SQL, or anything else that Python can invoke. It makes testing easier and deploying faster.</p></p>",
            "isNew": true
        },
        {
            "name": "Ruby",
            "quadrant": "DevOps",
            "ring": "Stop",
            "description": "<p>It seems like the utilization of <strong>Ruby</strong> as a software development language which was very popular in the DevOps movement mainly with tools like Chef and <a href=\"https://puppet.com/\">Puppet</a> Logstash Fluentd and a lot of scripting and utilities around ruby and ruby on rails application lifecycle such as Capistrano, has taken a punch in favor of <code>python</code> <code>go</code> and <code>javascript</code>. With the rise of popularity of these langs &amp; frameworks, we see less and less use of <code>ruby</code>.</p><p><p>We assume that there will always be something written in ruby but it will most definitely not be the language of choice when we are required to develop a utility / micro-app.</p></p>",
            "isNew": false
        },
        {
            "name": "Eclipse Che",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>The Kubernetes-Native IDE for Developer Teams</p><p><p>The Kubernetes-Native IDE for Developer Teams.</p></p>",
            "isNew": false
        },
        {
            "name": "Promxy",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p><strong>Promxy</strong> is an open source proxy for Prometheus, that enables merging multiple Prometheis' data into one bundle. Promxy is a stateless service and streams Prometheus metrics in real time.</p>\n<p>Promxy is easy to configure.</p><p><p>Promxy is a Prometheus proxy that makes many shards of Prometheus appear as a single API endpoint to the user. This significantly simplifies operations and use of Prometheus at scale (when you have more than one Prometheus host). Promxy delivers this unified access endpoint without requiring any sidecars, custom builds, or other changes to your Prometheus infrastructure.</p></p>",
            "isNew": false
        },
        {
            "name": "Vitest",
            "quadrant": "Frontend",
            "ring": "Try",
            "description": "<p>Test runner and test engine for Vite. \nhttps://vitest.dev/</p><p><p>Vite is used esbuild and based on esmodules, while Jest haven't supported it yet. However its syntax is very similar and even identical to Jest in most cases, therefore we suggest trying it, especially if you are using Vite already.</p></p>",
            "isNew": true
        },
        {
            "name": "Banzai Cloud Vault Operator",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>Bank-Vaults is an umbrella project which provides various tools for Vault to make using and operating Hashicorp Vault easier. It's a wrapper for the official Vault client with automatic token renewal and built-in Kubernetes support, dynamic database credential provider for Golang database/sql based clients. It has a CLI tool to automatically initialize, unseal, and configure Vault. It also provides a Kubernetes operator for provisioning, and a mutating webhook for injecting secrets.</p><p><p>Another excellent way for secret management.</p></p>",
            "isNew": true
        },
        {
            "name": "Kubernetes",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p><strong>Kubernetes</strong> is an open-source system for automating deployment, scaling and management of containerized applications in a cluster.</p>\n<p><strong>Kubernetes</strong> uses a set of APIs and YAML/JSON based configuration language to define and maintain all aspects of containers running on a cluster. Including networking, service discovery, proxying and load balancing, horizontal and vertical scaling, security and more.\n<strong>Kubernetes</strong> as a service is part of all major cloud providers offering and there are some projects that can deploy <strong>Kubernetes</strong> cluster automatically on almost every computing environment.\n<strong>Kubernetes</strong> introduce the concept of a POD - a set of one or more containers that deployed as a single unit (Same node, same namespace, and same network configuration). PODs can be thought of as lightweight servers constructs from container images.\nPODs can be deployed using controllers that define the behaviour of the POD in the cluster. Commonly used controllers are the ‘Deployment’ controller that defines a replica-set to make sure a given number of POD instances will be available at any moment of time. And ‘DaemonSet’ controller that deploys one POD per running worker node in the cluster.\nServices, running as PODs can be exposed, internally to the cluster or externally to the world, via ‘Service’ configuration object that acts as a reverse proxy and simple load balancer that provide a single endpoint for the service.\nAll configuration objects (PODS, Controllers, Services, etc…) are loosely coupled via tags and selectors that make the infrastructure flexible and configurable.</p><p><p>The war of leading the container orchestration market seem to be dominated by Kubernetes and it’s fast growing ecosystem and standards. Alongside the standards of OCI, CNI, CSI and others we now have a platform which encourages extendability.\nIn the past 5 years we've witnessed Operators and Controllers which take Kubernetes core values&nbsp; and solve many long living problems such as stability, extendability and most importantly maintainability.\nA few key examples inspired by CNCF projects like:\n- Workflow and pipelines like Argo and Tekton, that can be used for data pipelines and CI/CD\n- ClusterApi and Crossplane for the creation and management of infrastructure\n- ArgoCD, Flux GitOps implementation as Kubernetes deployment tools\n- K3s and others for edge-computing\n- Kube Bench for security checks\n- Kube Cost for FinOps&nbsp;&nbsp;\nThese&nbsp;Are just a few examples why we name this trend the “Kubernetes platform”</p></p>",
            "isNew": false
        },
        {
            "name": "Kubernetes",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p><strong>Kubernetes</strong> is an open-source system for automating deployment, scaling and management of containerized applications in a cluster.</p>\n<p><strong>Kubernetes</strong> uses a set of APIs and YAML/JSON based configuration language to define and maintain all aspects of containers running on a cluster. Including networking, service discovery, proxying and load balancing, horizontal and vertical scaling, security and more.\n<strong>Kubernetes</strong> as a service is part of all major cloud providers offering and there are some projects that can deploy <strong>Kubernetes</strong> cluster automatically on almost every computing environment.\n<strong>Kubernetes</strong> introduce the concept of a POD - a set of one or more containers that deployed as a single unit (Same node, same namespace, and same network configuration). PODs can be thought of as lightweight servers constructs from container images.\nPODs can be deployed using controllers that define the behaviour of the POD in the cluster. Commonly used controllers are the ‘Deployment’ controller that defines a replica-set to make sure a given number of POD instances will be available at any moment of time. And ‘DaemonSet’ controller that deploys one POD per running worker node in the cluster.\nServices, running as PODs can be exposed, internally to the cluster or externally to the world, via ‘Service’ configuration object that acts as a reverse proxy and simple load balancer that provide a single endpoint for the service.\nAll configuration objects (PODS, Controllers, Services, etc…) are loosely coupled via tags and selectors that make the infrastructure flexible and configurable.</p><p><p>The war of leading the container orchestration market seem to be dominated by Kubernetes and it’s fast growing ecosystem and standards. Alongside the standards of OCI, CNI, CSI and others we now have a platform which encourages extendability.\nIn the past 5 years we've witnessed Operators and Controllers which take Kubernetes core values&nbsp; and solve many long living problems such as stability, extendability and most importantly maintainability.\nA few key examples inspired by CNCF projects like:\n- Workflow and pipelines like Argo and Tekton, that can be used for data pipelines and CI/CD\n- ClusterApi and Crossplane for the creation and management of infrastructure\n- ArgoCD, Flux GitOps implementation as Kubernetes deployment tools\n- K3s and others for edge-computing\n- Kube Bench for security checks\n- Kube Cost for FinOps&nbsp;&nbsp;\nThese&nbsp;Are just a few examples why we name this trend the “Kubernetes platform”</p></p>",
            "isNew": false
        },
        {
            "name": "SWC",
            "quadrant": "Frontend",
            "ring": "Try",
            "description": "<p>SWC is an extensible Rust-based platform for the next generation of fast developer tools. It's used by tools like Next.js, Parcel, and Deno, as well as companies like Vercel, ByteDance, Tencent, Shopify, and more.\nSWC can be used for both compilation and bundling. For compilation, it takes JavaScript / TypeScript files using modern JavaScript features and outputs valid code that is supported by all major browsers.</p>\n<p>https://swc.rs/</p><p><p>This tool is a rust base alternative to various building tools, we are still waiting for it to gain more use and therefore we recommend trying it. </p></p>",
            "isNew": true
        },
        {
            "name": "Widget Test",
            "quadrant": "Mobile",
            "ring": "Start",
            "description": "<p>Flutter is the new <strong>Google’s</strong> framework for creating high quality apps both for Android and iOS with a single codebase.\nThe framework is based on <a href=\"https://trello.com/c/w5WPLf8u/268-dart\">Dart programming language</a> which eventually generates an Android’s APK and iOS IPA packages.</p>\n<p>Flutter first introduced in May 2017, and currently still in beta but so far, its already has a large community around the world.</p>\n<p>Compared to other cross platform frameworks such as ReactNative which usually relays on the platform native UI widgets, Flutter internally renders the UI widgets and draw them directly on the screen canvas. This makes flutter much faster and more reliable when it comes to backwards support.\nAs said above, Flutter has large community already, it has highly rich documentation and has Google’s Support.\nFor more details checkout about Flutter in their <a href=\"https://flutter.io/\">home page</a></p><p><ul>\n<li>Testing is important during your app development. As your product grows, it gets more complex, and performing manual tests becomes more difficult. Having an automated testing environment helps optimize this process.</li>\n<li>Widget testing is like UI testing: You develop the look and feel of your app, ensuring every interaction the user makes produces the expected result.</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "GANS",
            "quadrant": "Backend",
            "ring": "Start",
            "description": "<p>Generative adversarial networks are a class of AI algorithms, used in unsupervised learning, implemented by two NNs competing with each other in a zero-sum game, one training does generate quality augmented data, while the other training to differentiate the real data from the fake data, creating an iterative process of improvement. While In practice, GANs are used mostly for data augmentation which is important for supervised learning tasks, there are many more possible uses for GANs in many other fields.\nReal-life applications of GANs include:</p>\n<ul>\n<li>Fashion, art, and advertising</li>\n<li>Video games</li>\n<li>Science\nOne of the biggest problems in the field of data science is generating synthetic data. GANs are an interesting way to achieve it and thus gain popularity.</li>\n</ul><p><p>It's a huge trend in AI the past few years and only gaining more and more popularity and application. There is a significant body of research gained in this field and we assume the need from the market will emerge. It is hand in hand with Computer Vision NLP so we’re catching 2 birds with one stone. Also, DS engineers that rule these techs have very high demand and can attract clients.</p></p>",
            "isNew": false
        },
        {
            "name": "Python 3.6 and Lower",
            "quadrant": "Backend",
            "ring": "Stop",
            "description": "<p>Python 3.6 was released on December 23, 2016.\nMajor features:</p>\n<ul>\n<li>New: Asynchronous Generators and Asynchronous iterators&nbsp;</li>\n<li>AsyncIO module improvements</li>\n<li>Introducing string format with f-string</li>\n</ul><p><p>Python 3.6 has reached its end of life in December 2021.\nNo more bug fixes. No more security fixes.\nFor new python projects we recommend using Python 3.9 and above.</p></p>",
            "isNew": true
        },
        {
            "name": "Kind",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p><a href=\"https://sigs.k8s.io/kind\">kind</a>&nbsp;is a tool for running local Kubernetes clusters using Docker container “nodes”.\nkind was primarily designed for testing Kubernetes itself, but may be used for local development or CI.</p>\n<p>It was highly influenced by the KOPS api which pretty much inspired this project.</p><p><p>Quickly run Kubernetes nodes as Docker containers, a great tool for testing, development, and CI.</p></p>",
            "isNew": false
        },
        {
            "name": "VueJS",
            "quadrant": "Frontend",
            "ring": "Keep",
            "description": "<p><strong>Vue.js</strong> is a javascript framework that has been around since 2014 but is becoming more and more popular in the js/ frontend community and considered (today) the third most used framework (after react and angular).\nVue.js is designed in such a way that it can be incrementally adoptable and scale between a library and a framework depending on different use cases - from a view layer only in part of the application up to a full-blown ecosystem for complex Single Page Applications.</p><p><p>Vue.js gains popularity and a large community that works with it. It has become one of the major frameworks/ libraries and it seems that it is here to stay.</p></p>",
            "isNew": false
        },
        {
            "name": "Npm Workspace",
            "quadrant": "DevOps",
            "ring": "Start",
            "description": "<p>An NPM implementation that is very similar to yarn workspaces. </p><p><p>Workspaces were introduced with NPM 7 and come as native node alternatives to Yarn workspaces &amp; Lerna. We suggest trying those because on one hand it comes from NPM itself, and on the other hand there may be some better alternatives such as Nrwl Nx.</p>\n<p>npm workspaces have the same abilities as yarn workspaces, including running a script inside a workspace, linking between workspaces as dependencies, and faster installation in case of shared dependencies.</p></p>",
            "isNew": false
        },
        {
            "name": "Repository Pattern ",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>Repositories are classes or components that encapsulate the logic required to access data sources. They centralize common data access functionality, providing better maintainability and decoupling the infrastructure or technology used to access databases from the domain model layer.</p><p><ul>\n<li>Domain-Driven Design (DDD)</li>\n<li>Separation of concerns; the application need not know about or track any or all data sources.</li>\n<li>The Repository pattern makes it easier to test your application logic</li>\n<li>DRY (Don't Repeat Yourself) design, the code to query and fetch data from data source(s) is not repeated.</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Material UI",
            "quadrant": "Frontend",
            "ring": "Keep",
            "description": "<p><p>Very mature and widely used UI library for react, we recommend keeping in case your designers love it.</p></p>",
            "isNew": true
        },
        {
            "name": "Gradle",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>Gradle is a build tool. Following a build-by-convention approach, Gradle allows for declaratively modelling your problem domain using a powerful and expressive domain-specific language (DSL) implemented in Groovy instead of XML. Because Gradle is a JVM native, it allows you to write custom logic in the language you're most comfortable with, be it Java or Groovy. it too provides a powerful dependency management.</p>\n<p>Although still many more developers use Maven (~60%) Gradle is a powerful contender/ally which needs to be considered when making the decision on which build tool to use.</p>\n<p>The Android Studio build system is based on Gradle, and the Android Gradle plugin adds several features that are specific to building Android apps.&nbsp;</p>\n<p>Gradle is an open-source build automation tool that is designed to be flexible enough to build almost any type of software.</p><p><p>Gradle is still here as a robust tool for JVM builds. </p></p>",
            "isNew": false
        },
        {
            "name": "JAMstack for WebApps",
            "quadrant": "Frontend",
            "ring": "Keep",
            "description": "<p>The JAMstack (Jekyll, Hugo, Nuxt, Next, Gatsby) is not new however it’s popularity has increased recently due to increased maturity, better hosting solutions (e.g. Netlify, Github pages). While Jekyll is declining in popularity (Ruby-based), we see more and more companies opting to use Gatsby (React), Next (React), and Nuxt(Vue) as a basis for their SPA or content systems, thanks to a rich ecosystem of plugins, ready to use starter projects and lots of documentation and examples.\nUsing a JAMstack framework as a basis for an application allows developers to focus on business logic and content while saving time and effort on setup and basic configuration.</p><p><p>Jamstack for webapps is good solution in case your web app needs SEO and can work with SSG.  </p></p>",
            "isNew": false
        },
        {
            "name": "Node.js + Typescript",
            "quadrant": "DevOps",
            "ring": "Keep",
            "description": "<p>As an asynchronous event-driven JavaScript runtime, Node.js is designed to build scalable network applications.\nThis is in contrast to today’s more common concurrency model, in which OS threads are employed. Thread-based networking is relatively inefficient and very difficult to use. Furthermore, users of Node.js are free from worries of dead-locking the process, since there are no locks. Almost no function in Node.js directly performs I/O, so the process never blocks. Because nothing blocks, scalable systems are very reasonable to develop in Node.js.</p><p><p>Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient.</p>\n<p>Typescript adds type safety to Node.js and it has become, for new project, in use, more than javascript written node.js,and we feel that typescript has become the standard language to rite node application with. </p></p>",
            "isNew": false
        },
        {
            "name": "Node.js + Typescript",
            "quadrant": "Backend",
            "ring": "Keep",
            "description": "<p>As an asynchronous event-driven JavaScript runtime, Node.js is designed to build scalable network applications.\nThis is in contrast to today’s more common concurrency model, in which OS threads are employed. Thread-based networking is relatively inefficient and very difficult to use. Furthermore, users of Node.js are free from worries of dead-locking the process, since there are no locks. Almost no function in Node.js directly performs I/O, so the process never blocks. Because nothing blocks, scalable systems are very reasonable to develop in Node.js.</p><p><p>Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient.</p>\n<p>Typescript adds type safety to Node.js and it has become, for new project, in use, more than javascript written node.js,and we feel that typescript has become the standard language to rite node application with. </p></p>",
            "isNew": false
        },
        {
            "name": "Node.js + Typescript",
            "quadrant": "Frontend",
            "ring": "Keep",
            "description": "<p>As an asynchronous event-driven JavaScript runtime, Node.js is designed to build scalable network applications.\nThis is in contrast to today’s more common concurrency model, in which OS threads are employed. Thread-based networking is relatively inefficient and very difficult to use. Furthermore, users of Node.js are free from worries of dead-locking the process, since there are no locks. Almost no function in Node.js directly performs I/O, so the process never blocks. Because nothing blocks, scalable systems are very reasonable to develop in Node.js.</p><p><p>Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient.</p>\n<p>Typescript adds type safety to Node.js and it has become, for new project, in use, more than javascript written node.js,and we feel that typescript has become the standard language to rite node application with. </p></p>",
            "isNew": false
        },
        {
            "name": "Dart ",
            "quadrant": "Mobile",
            "ring": "Keep",
            "description": "<p>Dart is the Google's programming language that is optimised for client side.\nMany rich frameworks such as Flutter are using Dart as their development language.&nbsp;</p>\n<p>Approach\n==========&nbsp;\nDart is a light wight, object oriented language that utilise modern programming paradigms such as reactive functional programming.&nbsp;\nDart syntax is very familiar to C#, C++, Java and Kotlin developers.&nbsp;\nFurthermore, Dart code is highly expressive&nbsp;</p><p><ul>\n<li>Dart compiles to ARM and x86 code, apps that developed in Dart can run natively on Android and iOS</li>\n<li>Dart is safe and secured</li>\n<li>Dart is maintained by Google</li>\n</ul></p>",
            "isNew": false
        },
        {
            "name": "Dart ",
            "quadrant": "Frontend",
            "ring": "Keep",
            "description": "<p>Dart is the Google's programming language that is optimised for client side.\nMany rich frameworks such as Flutter are using Dart as their development language.&nbsp;</p>\n<p>Approach\n==========&nbsp;\nDart is a light wight, object oriented language that utilise modern programming paradigms such as reactive functional programming.&nbsp;\nDart syntax is very familiar to C#, C++, Java and Kotlin developers.&nbsp;\nFurthermore, Dart code is highly expressive&nbsp;</p><p><ul>\n<li>Dart compiles to ARM and x86 code, apps that developed in Dart can run natively on Android and iOS</li>\n<li>Dart is safe and secured</li>\n<li>Dart is maintained by Google</li>\n</ul></p>",
            "isNew": false
        }
    ]
}